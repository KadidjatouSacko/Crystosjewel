<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tableau de Bord Administratif - Bijouterie</title>
    <style>
        :root {
            --rose-gold: #b76e79;
            --rose-gold-light: #e8c2c8;
            --rose-gold-dark: #7d4b53;
            --cream: #fff8f0;
            --text-dark: #3a3a3a;
            --text-medium: #666;
            --text-light: #999;
            --white: #fff;
            --success: #28a745;
            --danger: #dc3545;
            --warning: #ffc107;
            --info: #17a2b8;
            --light: #f8f9fa;
            --dark: #343a40;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, var(--rose-gold-light) 0%, var(--cream) 100%);
            color: var(--text-dark);
            overflow-x: hidden;
        }

        .dashboard {
            min-height: 100vh;
            padding: 20px;
        }

        .main-content {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }

        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
            padding-bottom: 20px;
            border-bottom: 1px solid var(--rose-gold-light);
        }

        .page-title h1 {
            font-size: 26px;
            font-weight: 500;
            color: var(--rose-gold-dark);
        }

        .refresh-indicator {
            font-size: 14px;
            color: var(--text-medium);
            background: var(--white);
            padding: 8px 12px;
            border-radius: 20px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        }

        .filters {
            display: flex;
            gap: 15px;
        }

        .filter-select {
            padding: 8px 15px;
            border: 1px solid var(--rose-gold-light);
            border-radius: 5px;
            background-color: var(--white);
            color: var(--text-medium);
            cursor: pointer;
            transition: all 0.3s;
        }

        .filter-select:hover {
            border-color: var(--rose-gold);
        }

        .export-btn {
            padding: 8px 15px;
            background: var(--rose-gold);
            color: var(--white);
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: all 0.3s;
        }

        .export-btn:hover {
            background: var(--rose-gold-dark);
        }

        .dashboard-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .card {
            background-color: var(--white);
            border-radius: 10px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);
            padding: 20px;
            transition: all 0.3s;
            opacity: 0.9;
            transform: translateY(10px);
        }

        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
        }

        .card-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
        }

        .card-title {
            color: var(--text-medium);
            font-size: 14px;
            font-weight: 500;
        }

        .card-icon {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            background-color: var(--rose-gold-light);
            color: var(--rose-gold-dark);
        }

        .card-value {
            font-size: 28px;
            font-weight: 600;
            color: var(--text-dark);
            margin-bottom: 5px;
        }

        .card-comparison {
            font-size: 13px;
            color: var(--text-light);
            display: flex;
            align-items: center;
        }

        .card-comparison.positive {
            color: var(--success);
        }

        .card-comparison.negative {
            color: var(--danger);
        }

        .card-comparison i {
            margin-right: 5px;
        }

        /* ==========================================
           NOUVELLE SECTION : ANALYSEUR DE TENDANCES
           ========================================== */
        .trends-analyzer {
            background: var(--white);
            border-radius: 15px;
            padding: 30px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);
            margin-bottom: 30px;
        }

        .trends-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 25px;
            padding-bottom: 20px;
            border-bottom: 2px solid var(--rose-gold-light);
        }

        .trends-title {
            font-size: 1.8rem;
            font-weight: 600;
            color: var(--rose-gold-dark);
            display: flex;
            align-items: center;
            gap: 15px;
        }

        .trends-tabs {
            display: flex;
            gap: 5px;
            background: var(--light);
            border-radius: 10px;
            padding: 5px;
        }

        .trends-tab {
            padding: 10px 20px;
            border: none;
            background: transparent;
            border-radius: 8px;
            cursor: pointer;
            font-weight: 500;
            transition: all 0.3s ease;
            color: var(--text-medium);
        }

        .trends-tab.active {
            background: var(--rose-gold);
            color: white;
        }

        .trends-content {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 30px;
        }

        .trends-section {
            background: var(--light);
            border-radius: 12px;
            padding: 20px;
        }

        .trends-section h4 {
            color: var(--rose-gold-dark);
            font-size: 1.1rem;
            margin-bottom: 15px;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .trends-list {
            list-style: none;
        }

        .trends-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 12px 0;
            border-bottom: 1px solid var(--rose-gold-light);
        }

        .trends-item:last-child {
            border-bottom: none;
        }

        .trends-item-name {
            font-weight: 500;
            color: var(--text-dark);
        }

        .trends-item-value {
            font-weight: 700;
            color: var(--rose-gold-dark);
            display: flex;
            align-items: center;
            gap: 5px;
        }

        .trends-item-change {
            font-size: 0.8rem;
            padding: 2px 8px;
            border-radius: 12px;
            font-weight: 600;
        }

        .trends-item-change.positive {
            background: var(--success);
            color: white;
        }

        .trends-item-change.negative {
            background: var(--danger);
            color: white;
        }

        .trends-item-change.neutral {
            background: var(--text-light);
            color: white;
        }

        .tab-container {
            background-color: var(--white);
            border-radius: 10px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);
            padding: 20px;
            margin-bottom: 30px;
        }

        .tabs {
            display: flex;
            border-bottom: 2px solid var(--rose-gold-light);
            margin-bottom: 20px;
        }

        .tab {
            padding: 15px 20px;
            background: none;
            border: none;
            cursor: pointer;
            font-weight: 500;
            color: var(--text-medium);
            transition: all 0.3s;
            border-bottom: 2px solid transparent;
        }

        .tab.active {
            color: var(--rose-gold-dark);
            border-bottom-color: var(--rose-gold);
        }

        .tab:hover {
            color: var(--rose-gold);
        }

        .tab-content h3 {
            color: var(--rose-gold-dark);
            margin-bottom: 20px;
        }

        .graph-container {
            position: relative;
            height: 300px;
            background: linear-gradient(to top, var(--rose-gold-light), transparent);
            border-radius: 10px;
            padding: 20px;
            display: flex;
            align-items: end;
            justify-content: space-between;
        }

        .bar {
            flex: 1;
            background: linear-gradient(to top, var(--rose-gold), var(--rose-gold-light));
            border-radius: 5px 5px 0 0;
            position: relative;
            margin: 0 2px;
            min-height: 20px;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .bar:hover {
            background: linear-gradient(to top, var(--rose-gold-dark), var(--rose-gold));
            transform: scale(1.05);
        }

        .bar-value {
            position: absolute;
            top: -30px;
            left: 50%;
            transform: translateX(-50%);
            font-size: 12px;
            font-weight: 600;
            color: var(--rose-gold-dark);
            background: white;
            padding: 2px 6px;
            border-radius: 3px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
            white-space: nowrap;
        }

        .bar-label {
            position: absolute;
            bottom: -25px;
            left: 50%;
            transform: translateX(-50%);
            font-size: 12px;
            color: var(--text-medium);
            font-weight: 500;
        }

        .pie-chart {
            width: 200px;
            height: 200px;
            border-radius: 50%;
            background: conic-gradient(
                var(--rose-gold) 0% 30%,
                var(--rose-gold-light) 30% 65%,
                var(--rose-gold-dark) 65% 100%
            );
            margin: 20px auto;
            position: relative;
        }

        .pie-center {
            position: absolute;
            width: 120px;
            height: 120px;
            background-color: var(--white);
            border-radius: 50%;
            top: 40px;
            left: 40px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: 600;
            color: var(--rose-gold-dark);
        }

        .pie-legend {
            display: flex;
            justify-content: center;
            gap: 20px;
            margin-top: 20px;
        }

        .pie-item {
            display: flex;
            align-items: center;
            font-size: 12px;
            color: var(--text-medium);
        }

        .pie-color {
            width: 15px;
            height: 15px;
            border-radius: 50%;
            margin-right: 5px;
        }

        .visitors-chart {
            display: flex;
            align-items: flex-end;
            height: 150px;
            gap: 10px;
            padding: 10px;
            margin-top: 20px;
            background: linear-gradient(to top, var(--rose-gold-light), transparent);
            border-radius: 10px;
        }

        .visitor-bar {
            flex: 1;
            background: linear-gradient(to top, var(--rose-gold), var(--rose-gold-light));
            border-radius: 4px 4px 0 0;
            position: relative;
            transition: all 0.5s ease;
            cursor: pointer;
        }

        .visitor-bar:hover {
            background: linear-gradient(to top, var(--rose-gold-dark), var(--rose-gold));
            transform: scale(1.1);
        }

        .visitor-day {
            position: absolute;
            bottom: -25px;
            left: 50%;
            transform: translateX(-50%);
            font-size: 0.8rem;
            color: var(--text-dark);
            font-weight: 500;
        }

        .loading-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.7);
            display: none;
            justify-content: center;
            align-items: center;
            z-index: 10000;
        }

        .loading-overlay.show {
            display: flex;
        }

        .loading-spinner {
            width: 40px;
            height: 40px;
            border: 4px solid rgba(255, 255, 255, 0.3);
            border-radius: 50%;
            border-top-color: white;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            to { transform: rotate(360deg); }
        }

        .notification {
            position: fixed;
            top: 20px;
            right: 20px;
            background: var(--success);
            color: white;
            padding: 15px 20px;
            border-radius: 8px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);
            z-index: 10000;
            transform: translateX(400px);
            transition: transform 0.3s ease;
        }

        .notification.show {
            transform: translateX(0);
        }

        .notification.error {
            background: var(--danger);
        }

        .notification.warning {
            background: var(--warning);
            color: var(--dark);
        }

        .notification.info {
            background: var(--info);
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .dashboard-grid {
                grid-template-columns: 1fr;
                gap: 15px;
            }

            .header {
                flex-direction: column;
                gap: 15px;
                text-align: center;
            }

            .filters {
                flex-wrap: wrap;
                justify-content: center;
            }

            .trends-content {
                grid-template-columns: 1fr;
                gap: 20px;
            }

            .trends-tabs {
                flex-wrap: wrap;
                gap: 10px;
            }

            .card-value {
                font-size: 2rem;
            }
        }

        @media (max-width: 480px) {
            .main-content {
                padding: 15px;
            }

            .card {
                padding: 15px;
            }

            .card-value {
                font-size: 1.8rem;
            }

            .tab {
                padding: 10px;
                font-size: 0.9rem;
            }
        }

        /* Animation d'entrée */
        @keyframes slideInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .card {
            animation: slideInUp 0.6s ease forwards;
        }

        .card:nth-child(1) { animation-delay: 0.1s; }
        .card:nth-child(2) { animation-delay: 0.2s; }
        .card:nth-child(3) { animation-delay: 0.3s; }
        .card:nth-child(4) { animation-delay: 0.4s; }
    </style>
</head>
<body>
    <!-- Include navbar if needed -->
    <%- include('partials/navbarre.ejs') %>

    <!-- Loading Overlay -->
    <div class="loading-overlay" id="loadingOverlay">
        <div class="loading-spinner"></div>
    </div>

    <!-- Notification -->
    <div class="notification" id="notification">
        Données mises à jour avec succès
    </div>

    <div class="dashboard">
        <div class="main-content">
            <div class="header">
                <div class="page-title">
                    <h1 id="pageTitle">Dashboard - <%= dashboardData?.selectedPeriod || 'Ce mois' %></h1>
                    <span class="refresh-indicator" id="refreshIndicator">
                        🔄 Dernière mise à jour: <%= new Date().toLocaleTimeString('fr-FR') %>
                    </span>
                </div>
                <div class="filters">
                    <select class="filter-select" id="periodFilter">
                        <option value="today" <%= dashboardData?.selectedPeriod === 'today' ? 'selected' : '' %>>Aujourd'hui</option>
                        <option value="week" <%= dashboardData?.selectedPeriod === 'week' ? 'selected' : '' %>>Cette semaine</option>
                        <option value="month" <%= dashboardData?.selectedPeriod === 'month' || !dashboardData?.selectedPeriod ? 'selected' : '' %>>Ce mois</option>
                        <option value="quarter" <%= dashboardData?.selectedPeriod === 'quarter' ? 'selected' : '' %>>Ce trimestre</option>
                        <option value="year" <%= dashboardData?.selectedPeriod === 'year' ? 'selected' : '' %>>Cette année</option>
                        <option value="all" <%= dashboardData?.selectedPeriod === 'all' ? 'selected' : '' %>>Depuis la création</option>
                    </select>
                    <button class="export-btn" id="exportBtn">
                        📊 Exporter
                    </button>
                    <button class="export-btn" id="refreshBtn">
                        🔄 Actualiser
                    </button>
                </div>
            </div>

            <!-- Main Statistics Cards -->
            <div class="dashboard-grid" id="mainStatsGrid">
                <div class="card">
                    <div class="card-header">
                        <div class="card-title">Chiffre d'affaires</div>
                        <div class="card-icon">💰</div>
                    </div>
                    <div class="card-value" id="revenueValue">
                        <%= new Intl.NumberFormat('fr-FR', { style: 'currency', currency: 'EUR', minimumFractionDigits: 0 }).format(dashboardData?.totalRevenue || 0) %>
                    </div>
                    <div class="card-comparison <%= (dashboardData?.revenueGrowth || 0) >= 0 ? 'positive' : 'negative' %>" id="revenueComparison">
                        <i><%= (dashboardData?.revenueGrowth || 0) >= 0 ? '↑' : '↓' %></i> 
                        <%= Math.abs(dashboardData?.revenueGrowth || 0).toFixed(1) %>% par rapport à la période précédente
                    </div>
                </div>

                <div class="card">
                    <div class="card-header">
                        <div class="card-title">TVA à payer</div>
                        <div class="card-icon">🧾</div>
                    </div>
                    <div class="card-value" id="vatValue">
                        <%= new Intl.NumberFormat('fr-FR', { style: 'currency', currency: 'EUR', minimumFractionDigits: 0 }).format(dashboardData?.totalTax || 0) %>
                    </div>
                    <div class="card-comparison <%= (dashboardData?.taxGrowth || 0) >= 0 ? 'positive' : 'negative' %>" id="vatComparison">
                        <i><%= (dashboardData?.taxGrowth || 0) >= 0 ? '↑' : '↓' %></i> 
                        <%= Math.abs(dashboardData?.taxGrowth || 0).toFixed(1) %>% par rapport à la période précédente
                    </div>
                </div>

                <div class="card">
                    <div class="card-header">
                        <div class="card-title">Commandes</div>
                        <div class="card-icon">📦</div>
                    </div>
                    <div class="card-value" id="ordersValue">
                        <%= dashboardData?.totalOrders || 0 %>
                    </div>
                    <div class="card-comparison <%= (dashboardData?.ordersGrowth || 0) >= 0 ? 'positive' : 'negative' %>" id="ordersComparison">
                        <i><%= (dashboardData?.ordersGrowth || 0) >= 0 ? '↑' : '↓' %></i> 
                        <%= Math.abs(dashboardData?.ordersGrowth || 0).toFixed(1) %>% par rapport à la période précédente
                    </div>
                </div>

                <div class="card">
                    <div class="card-header">
                        <div class="card-title">Clients</div>
                        <div class="card-icon">👥</div>
                    </div>
                    <div class="card-value" id="customersValue">
                        <%= dashboardData?.totalCustomers || 0 %>
                    </div>
                    <div class="card-comparison <%= (dashboardData?.customersGrowth || 0) >= 0 ? 'positive' : 'negative' %>" id="customersComparison">
                        <i><%= (dashboardData?.customersGrowth || 0) >= 0 ? '↑' : '↓' %></i> 
                        <%= Math.abs(dashboardData?.customersGrowth || 0).toFixed(1) %>% par rapport à la période précédente
                    </div>
                </div>
            </div>

            <!-- NOUVELLE SECTION: Analyseur de Tendances -->
            <div class="trends-analyzer">
                <div class="trends-header">
                    <h2 class="trends-title">
                        🧠 Analyseur de Tendances
                    </h2>
                    <div class="trends-tabs">
                        <button class="trends-tab active" data-trend="search">Recherches</button>
                        <button class="trends-tab" data-trend="categories">Catégories</button>
                        <button class="trends-tab" data-trend="behavior">Comportement</button>
                    </div>
                </div>

                <div class="trends-content" id="trendsContent">
                    <!-- Contenu Recherches -->
                    <div class="trends-section" id="searchTrends">
                        <h4>🔍 Termes les plus recherchés</h4>
                        <ul class="trends-list">
                            <% 
                            const searchTerms = dashboardData?.searchTerms || [
                                { term: 'Collier or', count: 247, change: 15 },
                                { term: 'Bague diamant', count: 189, change: 8 },
                                { term: 'Bracelet argent', count: 156, change: -3 },
                                { term: 'Boucles d\'oreilles', count: 134, change: 12 },
                                { term: 'Montre femme', count: 98, change: 0 }
                            ];
                            %>
                            <% searchTerms.forEach(item => { %>
                                <li class="trends-item">
                                    <span class="trends-item-name"><%= item.term %></span>
                                    <div class="trends-item-value">
                                        <%= item.count %> recherches
                                        <span class="trends-item-change <%= item.change > 0 ? 'positive' : item.change < 0 ? 'negative' : 'neutral' %>">
                                            <%= item.change > 0 ? '+' : '' %><%= item.change %>%
                                        </span>
                                    </div>
                                </li>
                            <% }); %>
                        </ul>
                    </div>

                    <div class="trends-section" id="categoryTrends">
                        <h4>📊 Catégories populaires</h4>
                        <ul class="trends-list">
                            <% 
                            const categoryViews = dashboardData?.categoryViews || [
                                { category: 'Colliers', views: 1247, change: 22 },
                                { category: 'Bagues', views: 983, change: 18 },
                                { category: 'Bracelets', views: 756, change: -5 },
                                { category: 'Boucles d\'oreilles', views: 634, change: 9 }
                            ];
                            %>
                            <% categoryViews.forEach(item => { %>
                                <li class="trends-item">
                                    <span class="trends-item-name"><%= item.category %></span>
                                    <div class="trends-item-value">
                                        👁️ <%= item.views %> vues
                                        <span class="trends-item-change <%= item.change > 0 ? 'positive' : item.change < 0 ? 'negative' : 'neutral' %>">
                                            <%= item.change > 0 ? '+' : '' %><%= item.change %>%
                                        </span>
                                    </div>
                                </li>
                            <% }); %>
                        </ul>
                    </div>
                </div>

                <!-- Contenu Comportement (caché par défaut) -->
                <div class="trends-content" id="behaviorTrends" style="display: none;">
                    <div class="trends-section">
                        <h4>🛤️ Parcours clients</h4>
                        <ul class="trends-list">
                            <% 
                            const customerJourneys = dashboardData?.customerJourneys || [
                                { path: 'Page → Panier → Commande', conversion: 68, change: 5 },
                                { path: 'Recherche → Page → Panier', conversion: 45, change: 3 },
                                { path: 'Accueil → Catégorie → Page', conversion: 32, change: -2 }
                            ];
                            %>
                            <% customerJourneys.forEach(item => { %>
                                <li class="trends-item">
                                    <span class="trends-item-name"><%= item.path %></span>
                                    <div class="trends-item-value">
                                        <%= item.conversion %>% conversion
                                        <span class="trends-item-change <%= item.change > 0 ? 'positive' : item.change < 0 ? 'negative' : 'neutral' %>">
                                            <%= item.change > 0 ? '+' : '' %><%= item.change %>%
                                        </span>
                                    </div>
                                </li>
                            <% }); %>
                        </ul>
                    </div>

                    <div class="trends-section">
                        <h4>⏱️ Temps moyen par page</h4>
                        <ul class="trends-list">
                            <% 
                            const pageTime = dashboardData?.pageTime || [
                                { page: 'Page produit', time: '2m 34s', change: 8 },
                                { page: 'Page catégorie', time: '1m 12s', change: -3 },
                                { page: 'Page panier', time: '45s', change: 12 }
                            ];
                            %>
                            <% pageTime.forEach(item => { %>
                                <li class="trends-item">
                                    <span class="trends-item-name"><%= item.page %></span>
                                    <div class="trends-item-value">
                                        <%= item.time %>
                                        <span class="trends-item-change <%= item.change > 0 ? 'positive' : item.change < 0 ? 'negative' : 'neutral' %>">
                                            <%= item.change > 0 ? '+' : '' %><%= item.change %>%
                                        </span>
                                    </div>
                                </li>
                            <% }); %>
                        </ul>
                    </div>
                </div>
            </div>

            <!-- Charts Tab Container -->
            <div class="tab-container">
                <div class="tabs">
                    <div class="tab active" data-tab="sales">Évolution des ventes</div>
                    <div class="tab" data-tab="products">Répartition des produits</div>
                    <div class="tab" data-tab="visitors">Statistiques du site</div>
                </div>
                <div class="tab-content">
                    <h3 id="chartTitle">Évolution du chiffre d'affaires</h3>
                    <div class="graph-container" id="chartContainer">
                        <% if (dashboardData?.chartData && dashboardData.chartData.length > 0) { %>
                            <% dashboardData.chartData.forEach((item, index) => { %>
                                <% 
                                const maxValue = Math.max(...dashboardData.chartData.map(d => d.value));
                                const height = (item.value / maxValue) * 100;
                                %>
                                <div class="bar" style="height: <%= height %>%;">
                                    <div class="bar-value">
                                        <%= new Intl.NumberFormat('fr-FR', { style: 'currency', currency: 'EUR', minimumFractionDigits: 0 }).format(item.value) %>
                                    </div>
                                    <div class="bar-label"><%= item.label %></div>
                                </div>
                            <% }); %>
                        <% } else { %>
                            <div style="text-align: center; padding: 50px; color: var(--text-dark);">
                                Aucune donnée disponible pour cette période
                            </div>
                        <% } %>
                    </div>
                </div>
            </div>

            <!-- Categories Distribution -->
            <div class="card" id="categoriesCard">
                <div class="card-header">
                    <div class="card-title">Répartition des catégories de bijoux</div>
                </div>
                <% 
                const categories = dashboardData?.categoriesData || [
                    { name: 'Colliers', count: 45, color: '#b76e79' },
                    { name: 'Bagues', count: 35, color: '#e8c2c8' },
                    { name: 'Bracelets', count: 20, color: '#7d4b53' }
                ];
                const total = categories.reduce((sum, cat) => sum + (cat.count || 0), 0);
                %>
                <div class="pie-chart" id="pieChart">
                    <div class="pie-center">100%</div>
                </div>
                <div class="pie-legend" id="pieLegend">
                    <% if (categories.length > 0) { %>
                        <% categories.forEach((category, index) => { %>
                            <% 
                            const percentage = total > 0 ? ((category.count / total) * 100).toFixed(1) : 0;
                            const colors = ['#b76e79', '#e8c2c8', '#7d4b53'];
                            %>
                            <div class="pie-item">
                                <div class="pie-color" style="background-color: <%= colors[index] || '#b76e79' %>;"></div>
                                <span><%= category.name %> (<%= percentage %>%)</span>
                            </div>
                        <% }); %>
                    <% } else { %>
                        <div class="pie-item">
                            <span>Aucune donnée disponible</span>
                        </div>
                    <% } %>
                </div>
            </div>

            <!-- Site Visitors Chart -->
            <div class="card" id="visitorsCard">
                <div class="card-header">
                    <div class="card-title">Visiteurs du site (7 derniers jours)</div>
                </div>
                <div class="visitors-chart" id="visitorsChart">
                    <% 
                    const visitorsData = dashboardData?.visitorsData || [
                        { day: 'Lun', count: 45 },
                        { day: 'Mar', count: 52 },
                        { day: 'Mer', count: 48 },
                        { day: 'Jeu', count: 55 },
                        { day: 'Ven', count: 62 },
                        { day: 'Sam', count: 78 },
                        { day: 'Dim', count: 35 }
                    ];
                    const maxVisitors = Math.max(...visitorsData.map(d => d.count));
                    %>
                    <% visitorsData.forEach(dayData => { %>
                        <% const height = (dayData.count / maxVisitors) * 100; %>
                        <div class="visitor-bar" 
                             style="height: <%= height %>%;" 
                             title="<%= dayData.count %> visiteurs le <%= dayData.day %>">
                            <div class="visitor-day"><%= dayData.day %></div>
                        </div>
                    <% }); %>
                </div>
            </div>
        </div>
    </div>

    <script>
        // ==========================================
        // GESTIONNAIRE DE DASHBOARD
        // ==========================================
        class DashboardManager {
            constructor() {
                this.currentTrend = 'search';
                this.isLoading = false;
                this.init();
            }

            init() {
                this.setupEventListeners();
                this.setupTrendsTabs();
                this.startAutoRefresh();
            }

            setupEventListeners() {
                // Filtres
                document.getElementById('periodFilter')?.addEventListener('change', (e) => {
                    this.handlePeriodChange(e.target.value);
                });

                // Boutons d'action
                document.getElementById('refreshBtn')?.addEventListener('click', () => {
                    this.refreshData();
                });

                document.getElementById('exportBtn')?.addEventListener('click', () => {
                    this.exportData();
                });

                // Tabs des graphiques
                document.querySelectorAll('.tab').forEach(tab => {
                    tab.addEventListener('click', () => this.handleTabClick(tab));
                });
            }

            setupTrendsTabs() {
                document.querySelectorAll('.trends-tab').forEach(tab => {
                    tab.addEventListener('click', () => this.handleTrendsTabClick(tab));
                });
            }

            handleTrendsTabClick(tab) {
                const trendType = tab.dataset.trend;
                if (trendType === this.currentTrend) return;

                // Mise à jour visuelle des tabs
                document.querySelectorAll('.trends-tab').forEach(t => {
                    t.classList.remove('active');
                });
                tab.classList.add('active');

                // Afficher le contenu correspondant
                this.showTrendsContent(trendType);
                this.currentTrend = trendType;
            }

            showTrendsContent(trendType) {
                const defaultContent = document.getElementById('trendsContent');
                const behaviorContent = document.getElementById('behaviorTrends');

                if (trendType === 'behavior') {
                    defaultContent.style.display = 'none';
                    behaviorContent.style.display = 'grid';
                } else {
                    defaultContent.style.display = 'grid';
                    behaviorContent.style.display = 'none';
                }

                // Mettre à jour le contenu des sections search/categories
                if (trendType === 'search') {
                    this.showSearchTrends();
                } else if (trendType === 'categories') {
                    this.showCategoryTrends();
                }
            }

            showSearchTrends() {
                // Le contenu des recherches est déjà affiché par défaut
                console.log('Affichage des tendances de recherche');
            }

            showCategoryTrends() {
                // Le contenu des catégories est déjà affiché par défaut
                console.log('Affichage des tendances de catégories');
            }

            handleTabClick(tab) {
                const tabType = tab.dataset.tab;

                // Mise à jour visuelle des tabs
                document.querySelectorAll('.tab').forEach(t => {
                    t.classList.remove('active');
                });
                tab.classList.add('active');

                // Mise à jour du titre du graphique
                const chartTitle = document.getElementById('chartTitle');
                switch (tabType) {
                    case 'sales':
                        chartTitle.textContent = 'Évolution du chiffre d\'affaires';
                        break;
                    case 'products':
                        chartTitle.textContent = 'Répartition des produits vendus';
                        break;
                    case 'visitors':
                        chartTitle.textContent = 'Statistiques de fréquentation du site';
                        break;
                }
            }

            handlePeriodChange(period) {
                this.showNotification(`Période changée: ${period}`);
                // Ici vous pourriez recharger les données
                this.refreshData();
            }

            async refreshData() {
                if (this.isLoading) return;

                this.isLoading = true;
                this.showLoading(true);

                try {
                    // Simulation d'un appel API
                    await new Promise(resolve => setTimeout(resolve, 1500));

                    // Mettre à jour l'indicateur de refresh
                    const refreshIndicator = document.getElementById('refreshIndicator');
                    refreshIndicator.textContent = `🔄 Dernière mise à jour: ${new Date().toLocaleTimeString('fr-FR')}`;

                    this.showNotification('Données actualisées avec succès');

                } catch (error) {
                    console.error('Erreur lors du refresh:', error);
                    this.showNotification('Erreur lors de l\'actualisation', 'error');
                } finally {
                    this.isLoading = false;
                    this.showLoading(false);
                }
            }

            exportData() {
                this.showNotification('Export en cours...', 'info');
                // Simuler un export
                setTimeout(() => {
                    this.showNotification('Export terminé avec succès');
                }, 2000);
            }

            showNotification(message, type = 'success') {
                const notification = document.getElementById('notification');
                
                // Supprimer les anciennes classes
                notification.className = 'notification';
                notification.classList.add(type);

                notification.textContent = message;
                notification.classList.add('show');

                // Masquer après 3 secondes
                setTimeout(() => {
                    notification.classList.remove('show');
                }, 3000);
            }

            showLoading(show) {
                const loadingOverlay = document.getElementById('loadingOverlay');
                if (show) {
                    loadingOverlay.classList.add('show');
                } else {
                    loadingOverlay.classList.remove('show');
                }
            }

            startAutoRefresh() {
                // Actualisation automatique toutes les 5 minutes
                setInterval(() => {
                    if (!this.isLoading) {
                        this.refreshData();
                    }
                }, 5 * 60 * 1000);
            }
        }

        // ==========================================
        // INITIALISATION
        // ==========================================
        document.addEventListener('DOMContentLoaded', function() {
            console.log('🎯 Initialisation du dashboard');

            // Créer l'instance du gestionnaire
            window.dashboardManager = new DashboardManager();

            // Animation des cartes au chargement
            setTimeout(() => {
                document.querySelectorAll('.card').forEach((card, index) => {
                    card.style.opacity = '1';
                    card.style.transform = 'translateY(0)';
                });
            }, 100);

            console.log('✅ Dashboard chargé avec succès');
        });

        // ==========================================
        // GESTION DES ERREURS GLOBALES
        // ==========================================
        window.addEventListener('error', function(event) {
            console.error('❌ Erreur JavaScript:', event.error);
            if (window.dashboardManager) {
                window.dashboardManager.showNotification('Une erreur est survenue', 'error');
            }
        });
    </script>
</body>
</html>