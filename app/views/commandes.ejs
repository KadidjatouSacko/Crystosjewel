<!DOCTYPE html>
<html lang="fr">
<%
// 🔧 DÉFINIR LES FONCTIONS UTILITAIRES POUR EJS
function getStatusClass(status) {
    const normalizedStatus = status || 'waiting';
    const statusMap = {
        'waiting': 'en-attente',
        'preparing': 'preparation',
        'shipped': 'expediee',
        'delivered': 'livree',
        'cancelled': 'annulee',
        'en_attente': 'en-attente',
        'preparation': 'preparation',
        'expediee': 'expediee',
        'livree': 'livree',
        'annulee': 'annulee'
    };
    return statusMap[normalizedStatus] || 'en-attente';
}

function translateStatus(status) {
    const normalizedStatus = status || 'waiting';
    const statusMap = {
        'waiting': 'En attente',
        'preparing': 'En préparation',
        'shipped': 'Expédiée',
        'delivered': 'Livrée',
        'cancelled': 'Annulée',
        'en_attente': 'En attente',
        'preparation': 'En préparation',
        'expediee': 'Expédiée',
        'livree': 'Livrée',
        'annulee': 'Annulée'
    };
    return statusMap[normalizedStatus] || 'En attente';
}

function getTaillesFromOrder(commande) {
    return commande.sizesInfo || null;
}

function formatSizesDisplay(sizesInfo) {
    if (!sizesInfo || !sizesInfo.hasSizeInfo) {
        return 'Non spécifiées';
    }
    return sizesInfo.sizesDisplay || 'Tailles standards';
}

function getSizesCoverageIndicator(sizesInfo) {
    if (!sizesInfo || sizesInfo.totalItems === 0) {
        return '❓ En développement';
    }
    
    const coverage = sizesInfo.sizesCoverage || 0;
    if (coverage === 100) return '🎯 Complète';
    if (coverage > 50) return '📏 Partielle';
    if (coverage > 0) return '📐 Limitée';
    return '❓ Aucune';
}

// ✅ NOUVELLE FONCTION POUR FORMATER LES DATES
function formatDateTime(dateString) {
    if (!dateString) return 'N/A';
    try {
        const date = new Date(dateString);
        return date.toLocaleString('fr-FR', {
            day: '2-digit',
            month: '2-digit', 
            year: 'numeric',
            hour: '2-digit',
            minute: '2-digit'
        });
    } catch (error) {
        return dateString;
    }
}

function getTimeAgo(dateString) {
    if (!dateString) return 'N/A';
    try {
        const date = new Date(dateString);
        const now = new Date();
        const diffMs = now - date;
        const diffHours = Math.floor(diffMs / (1000 * 60 * 60));
        const diffDays = Math.floor(diffHours / 24);
        
        // if (diffDays > 0) {
        //     return `Il y a ${diffDays} jour${diffDays > 1 ? 's' : ''}`;
        // } else if (diffHours > 0) {
        //     return `Il y a ${diffHours} heure${diffHours > 1 ? 's' : ''}`;
        // } else {
        //     const diffMins = Math.floor(diffMs / (1000 * 60));
        //     return `Il y a ${diffMins} minute${diffMins > 1 ? 's' : ''}`;
        // }
    } catch (error) {
        return dateString;
    }
}

// ✅ FONCTION POUR AFFICHER LE MODE DE PAIEMENT
function getPaymentMethodDisplay(paymentMethod) {
    const methods = {
        'card': 'Carte bancaire',
        'credit_card': 'Carte bancaire', 
        'paypal': 'PayPal',
        'bank_transfer': 'Virement bancaire',
        'check': 'Chèque',
        'cash': 'Espèces'
    };
    return methods[paymentMethod] || 'Carte bancaire';
}

// ✅ FONCTION POUR CALCULER LES PRIX CORRECTS AVEC PROMO
function calculateCorrectPrices(commande) {
    const total = parseFloat(commande.total || commande.amount || 0);
    const discountAmount = parseFloat(commande.promo_discount_amount || commande.discount_amount || 0);
    const originalAmount = parseFloat(commande.original_amount || (total + discountAmount) || total);
    const subtotal = parseFloat(commande.subtotal || (total - (commande.shipping_price || 0)) || total);
    
    return {
        originalAmount: originalAmount,
        discountAmount: discountAmount,
        subtotalAfterDiscount: subtotal,
        finalTotal: total,
        hasDiscount: discountAmount > 0
    };
}
%>

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title || 'Administration - Suivi des Commandes' %></title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    
    <style>
        :root {
            --primary: #E8B4B8;
            --primary-dark: #B8868A;
            --primary-light: #F5D7DA;
            --secondary: #FDF9F6;
            --accent: #D4A5A9;
            --success: #10b981;
            --danger: #ef4444;
            --warning: #f59e0b;
            --info: #3b82f6;
            --dark: #1f2937;
            --gray-light: #f8fafc;
            --gray-medium: #64748b;
            --white: #ffffff;
            --border: #e2e8f0;
            --shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1);
            --shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
            --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
            --radius: 8px;
            --radius-lg: 12px;
            --transition: all 0.2s ease;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
            background: var(--gray-light);
            color: var(--dark);
            line-height: 1.6;
            font-size: 14px;
        }

        /* Layout Principal */
        .app-layout {
            display: flex;
            min-height: 100vh;
        }

        /* Header Mobile */
        .mobile-header {
            display: none;
            background: var(--primary);
            color: white;
            padding: 1rem;
            position: sticky;
            top: 0;
            z-index: 100;
            box-shadow: var(--shadow-md);
        }

        .mobile-header-content {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .mobile-menu-btn {
            background: none;
            border: none;
            color: white;
            font-size: 1.5rem;
            cursor: pointer;
            padding: 0.5rem;
        }

        /* Sidebar */
        .sidebar {
            width: 250px;
            background: white;
            border-right: 1px solid var(--border);
            flex-shrink: 0;
            position: sticky;
            top: 0;
            height: 100vh;
            overflow-y: auto;
            transition: var(--transition);
        }

        .sidebar-header {
            padding: 1.5rem;
            border-bottom: 1px solid var(--border);
            background: var(--primary);
            color: white;
        }

        .sidebar-title {
            font-size: 1.2rem;
            font-weight: 600;
            margin: 0;
        }

        .sidebar-nav {
            padding: 1rem 0;
        }

        .nav-item {
            margin: 0.25rem 0;
        }

        .nav-link {
            display: flex;
            align-items: center;
            gap: 0.75rem;
            padding: 0.75rem 1.5rem;
            color: var(--gray-medium);
            text-decoration: none;
            transition: var(--transition);
            border-right: 3px solid transparent;
        }

        .nav-link:hover,
        .nav-link.active {
            background: var(--primary-light);
            color: var(--primary-dark);
            border-right-color: var(--primary);
        }

        .nav-link i {
            width: 20px;
            text-align: center;
        }

        /* Main Content */
        .main-content {
            flex: 1;
            padding: 2rem;
            min-width: 0;
        }

        .page-header {
            background: white;
            padding: 1.5rem;
            border-radius: var(--radius-lg);
            box-shadow: var(--shadow);
            margin-bottom: 2rem;
        }

        .page-title {
            font-size: 1.8rem;
            font-weight: 600;
            color: var(--dark);
            margin: 0;
        }

        .page-subtitle {
            color: var(--gray-medium);
            margin-top: 0.5rem;
        }

        /* Stats Dashboard */
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1rem;
            margin-bottom: 2rem;
        }

        .stat-card {
            background: white;
            padding: 1.5rem;
            border-radius: var(--radius-lg);
            box-shadow: var(--shadow);
            transition: var(--transition);
        }

        .stat-card:hover {
            transform: translateY(-2px);
            box-shadow: var(--shadow-md);
        }

        .stat-label {
            font-size: 0.875rem;
            color: var(--gray-medium);
            margin-bottom: 0.5rem;
        }

        .stat-value {
            font-size: 2rem;
            font-weight: 700;
            color: var(--dark);
            margin-bottom: 0.5rem;
        }

        .stat-trend {
            display: flex;
            align-items: center;
            gap: 0.25rem;
            font-size: 0.875rem;
        }

        .stat-trend.up { color: var(--success); }
        .stat-trend.down { color: var(--danger); }

        /* Controls */
        .controls {
            background: white;
            padding: 1.5rem;
            border-radius: var(--radius-lg);
            box-shadow: var(--shadow);
            margin-bottom: 2rem;
        }

        .controls-grid {
            display: grid;
            grid-template-columns: 1fr auto;
            gap: 1rem;
            align-items: center;
        }

        .search-section {
            display: flex;
            gap: 1rem;
            flex-wrap: wrap;
        }

        .search-box {
            position: relative;
            flex: 1;
            min-width: 250px;
        }

        .search-box i {
            position: absolute;
            left: 1rem;
            top: 50%;
            transform: translateY(-50%);
            color: var(--gray-medium);
        }

        .search-input {
            width: 100%;
            padding: 0.75rem 1rem 0.75rem 2.5rem;
            border: 1px solid var(--border);
            border-radius: var(--radius);
            font-size: 0.875rem;
            transition: var(--transition);
        }

        .search-input:focus {
            outline: none;
            border-color: var(--primary);
            box-shadow: 0 0 0 3px rgba(232, 180, 184, 0.1);
        }

        .filter-group {
            display: flex;
            gap: 0.75rem;
            flex-wrap: wrap;
        }

        .filter-select {
            padding: 0.75rem;
            border: 1px solid var(--border);
            border-radius: var(--radius);
            font-size: 0.875rem;
            background: white;
            cursor: pointer;
            transition: var(--transition);
        }

        .filter-select:focus {
            outline: none;
            border-color: var(--primary);
        }

        .actions-group {
            display: flex;
            gap: 0.5rem;
        }

        .btn {
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            padding: 0.75rem 1rem;
            border: none;
            border-radius: var(--radius);
            font-size: 0.875rem;
            font-weight: 500;
            cursor: pointer;
            transition: var(--transition);
            text-decoration: none;
            white-space: nowrap;
        }

        .btn-primary {
            background: var(--primary);
            color: white;
        }

        .btn-primary:hover {
            background: var(--primary-dark);
        }

        .btn-secondary {
            background: var(--gray-light);
            color: var(--gray-medium);
            border: 1px solid var(--border);
        }

        .btn-secondary:hover {
            background: var(--border);
        }

        /* Table */
        .table-container {
            background: white;
            border-radius: var(--radius-lg);
            box-shadow: var(--shadow);
            overflow: hidden;
        }

        .table {
            width: 100%;
            border-collapse: collapse;
        }

        .table th {
            background: var(--gray-light);
            padding: 1rem;
            text-align: left;
            font-weight: 600;
            color: var(--dark);
            border-bottom: 1px solid var(--border);
            white-space: nowrap;
        }

        .table td {
            padding: 1rem;
            border-bottom: 1px solid var(--border);
            vertical-align: middle;
        }

        .table tbody tr {
            transition: var(--transition);
        }

        .table tbody tr:hover {
            background: var(--gray-light);
        }

        .order-number {
            font-weight: 600;
            color: var(--dark);
        }

        .customer-info {
            display: flex;
            flex-direction: column;
            gap: 0.25rem;
        }

        .customer-name {
            font-weight: 500;
        }

        .customer-email {
            font-size: 0.8rem;
            color: var(--gray-medium);
        }

        .amount {
            font-weight: 600;
            color: var(--primary-dark);
        }

        /* ✅ AMÉLIORATION STYLES PRIX AVEC PROMO */
        .amount-display {
            display: flex;
            flex-direction: column;
            align-items: flex-end;
        }

        .original-price {
            color: var(--gray-medium);
            text-decoration: line-through;
            font-size: 0.85rem;
            margin-bottom: 2px;
        }

        .discounted-price {
            font-weight: 600;
            color: var(--primary-dark);
            font-size: 1rem;
        }

        .discount-amount {
            color: var(--success);
            font-size: 0.8rem;
            font-weight: 500;
            margin-top: 2px;
        }

        .status {
            display: inline-flex;
            align-items: center;
            gap: 0.25rem;
            padding: 0.25rem 0.75rem;
            border-radius: 50px;
            font-size: 0.8rem;
            font-weight: 500;
        }

        .status.en-attente {
            background: #fef3c7;
            color: #92400e;
        }

        .status.preparation {
            background: #dbeafe;
            color: #1e40af;
        }

        .status.expediee {
            background: #d1fae5;
            color: #065f46;
        }

        .status.livree {
            background: #dcfce7;
            color: #166534;
        }

        .status.annulee {
            background: #fee2e2;
            color: #991b1b;
        }

        .action-buttons {
            display: flex;
            gap: 0.5rem;
        }

        .action-btn {
            width: 32px;
            height: 32px;
            border: none;
            border-radius: var(--radius);
            cursor: pointer;
            transition: var(--transition);
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .action-btn.view {
            background: var(--info);
            color: white;
        }

        .action-btn.edit {
            background: var(--warning);
            color: white;
        }

        .action-btn:hover {
            transform: scale(1.1);
        }

        /* Promo Code Display */
        .promo-info {
            background: var(--success);
            color: white;
            padding: 0.25rem 0.5rem;
            border-radius: var(--radius);
            font-size: 0.75rem;
            font-weight: 500;
            display: inline-flex;
            align-items: center;
            gap: 0.25rem;
            margin-top: 0.25rem;
        }

        .discount-percent {
            color: var(--success);
            font-weight: 600;
            font-size: 0.8rem;
        }

        /* Modal */
        .modal {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            display: none;
            justify-content: center;
            align-items: center;
            z-index: 1000;
            padding: 1rem;
        }

        .modal-content {
            background: white;
            border-radius: var(--radius-lg);
            max-width: 900px;
            width: 100%;
            max-height: 90vh;
            overflow-y: auto;
            box-shadow: var(--shadow-lg);
        }

        .modal-header {
            padding: 1.5rem;
            border-bottom: 1px solid var(--border);
            display: flex;
            justify-content: space-between;
            align-items: center;
            background: var(--primary-light);
        }

        .modal-title {
            font-size: 1.25rem;
            font-weight: 600;
            color: var(--primary-dark);
            margin: 0;
        }

        .close-modal {
            background: none;
            border: none;
            font-size: 1.5rem;
            cursor: pointer;
            color: var(--gray-medium);
            padding: 0.25rem;
        }

        .modal-body {
            padding: 1.5rem;
        }

        /* Sizes Info */
        .sizes-info {
            min-width: 140px;
            max-width: 180px;
        }

        .sizes-summary {
            display: flex;
            align-items: center;
            margin-bottom: 4px;
            font-weight: 500;
            font-size: 0.85rem;
        }

        .sizes-meta {
            display: flex;
            align-items: center;
            gap: 6px;
            flex-wrap: wrap;
        }

        .size-coverage {
            display: inline-flex;
            align-items: center;
            white-space: nowrap;
            font-weight: 600;
            border: 1px solid rgba(0,0,0,0.1);
            font-size: 0.75rem;
            padding: 2px 6px;
            border-radius: 12px;
            transition: var(--transition);
        }

        .size-coverage.full-coverage {
            background: #dcfce7 !important;
            color: #065f46 !important;
            border-color: #10b981;
        }

        .size-coverage.partial-coverage {
            background: #fef3c7 !important;
            color: #92400e !important;
            border-color: #f59e0b;
        }

        .size-coverage.limited-coverage {
            background: #fecaca !important;
            color: #991b1b !important;
            border-color: #ef4444;
        }

        .size-coverage.no-coverage {
            background: #f1f5f9 !important;
            color: #64748b !important;
            border-color: #cbd5e1;
        }

        .development-indicator {
            color: var(--gray-medium);
            font-size: 0.8rem;
            display: flex;
            align-items: center;
            gap: 4px;
            font-style: italic;
        }

        .development-indicator i {
            opacity: 0.5;
        }

        .sizes-info:hover {
            transform: scale(1.02);
            transition: transform 0.2s ease;
        }

        .sizes-info:hover .size-coverage {
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }

        /* Empty State */
        .empty-state {
            text-align: center;
            padding: 3rem 1rem;
            color: var(--gray-medium);
        }

        .empty-state i {
            font-size: 3rem;
            margin-bottom: 1rem;
            opacity: 0.5;
        }

        /* Toast */
        .toast {
            position: fixed;
            bottom: 20px;
            right: 20px;
            background: var(--success);
            color: white;
            padding: 1rem 1.5rem;
            border-radius: var(--radius);
            display: flex;
            align-items: center;
            gap: 0.5rem;
            transform: translateX(400px);
            transition: transform 0.3s ease;
            z-index: 10000;
            box-shadow: var(--shadow-lg);
        }

        .toast.show {
            transform: translateX(0);
        }

        .toast.error {
            background: var(--danger);
        }

        .toast.warning {
            background: var(--warning);
        }

        .toast.info {
            background: var(--info);
        }

        /* Loading */
        .loading-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            display: none;
            justify-content: center;
            align-items: center;
            z-index: 9999;
        }

        .spinner {
            width: 40px;
            height: 40px;
            border: 3px solid rgba(255, 255, 255, 0.3);
            border-top: 3px solid white;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        /* Mobile Cards */
        .mobile-cards {
            display: none;
        }

        .order-card {
            background: white;
            border-radius: var(--radius);
            padding: 1rem;
            margin-bottom: 1rem;
            box-shadow: var(--shadow);
            border-left: 4px solid var(--primary);
        }

        .order-card-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 0.75rem;
        }

        .order-card-body {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 0.5rem;
            margin-bottom: 1rem;
        }

        .order-card-field {
            display: flex;
            flex-direction: column;
            gap: 0.25rem;
        }

        .order-card-label {
            font-size: 0.75rem;
            color: var(--gray-medium);
            font-weight: 500;
        }

        .order-card-value {
            font-size: 0.875rem;
            color: var(--dark);
            font-weight: 500;
        }

        .order-card-actions {
            display: flex;
            gap: 0.5rem;
            justify-content: flex-end;
        }

        .sizes-card-info {
            background: rgba(243, 244, 246, 0.7);
            border: 1px solid #e5e7eb;
            border-radius: 6px;
            padding: 8px 12px;
            margin-top: 8px;
        }

        .sizes-card-info .sizes-label {
            font-weight: 600;
            color: var(--info);
            margin-bottom: 4px;
            font-size: 0.85rem;
        }

        /* Responsive */
        @media (max-width: 768px) {
            .mobile-header {
                display: block;
            }

            .app-layout {
                flex-direction: column;
            }

            .sidebar {
                position: fixed;
                top: 0;
                left: -250px;
                height: 100vh;
                z-index: 200;
                transition: left 0.3s ease;
            }

            .sidebar.open {
                left: 0;
            }

            .sidebar-overlay {
                position: fixed;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                background: rgba(0, 0, 0, 0.5);
                z-index: 199;
                display: none;
            }

            .sidebar-overlay.show {
                display: block;
            }

            .main-content {
                padding: 1rem;
                width: 100%;
            }

            .page-header {
                padding: 1rem;
                margin-bottom: 1rem;
            }

            .page-title {
                font-size: 1.5rem;
            }

            .stats-grid {
                grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
                gap: 0.75rem;
                margin-bottom: 1rem;
            }

            .stat-card {
                padding: 1rem;
            }

            .stat-value {
                font-size: 1.5rem;
            }

            .controls {
                padding: 1rem;
                margin-bottom: 1rem;
            }

            .controls-grid {
                grid-template-columns: 1fr;
                gap: 1rem;
            }

            .search-section {
                flex-direction: column;
            }

            .search-box {
                min-width: auto;
            }

            .filter-group {
                justify-content: space-between;
            }

            .actions-group {
                justify-content: center;
            }

            .table-container {
                overflow-x: auto;
                -webkit-overflow-scrolling: touch;
            }

            .table {
                min-width: 700px;
            }

            .table th,
            .table td {
                padding: 0.75rem 0.5rem;
                font-size: 0.8rem;
            }

            .table th:nth-child(6),
            .table td:nth-child(6) {
                display: none;
            }

            @media (max-width: 600px) {
                .table-container {
                    display: none;
                }

                .mobile-cards {
                    display: block;
                }
            }

            .modal-content {
                margin: 0;
                border-radius: 0;
                height: 100vh;
                max-height: 100vh;
            }
        }

        /* Animation classes */
        .fade-in {
            animation: fadeIn 0.3s ease-in;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .slide-in {
            animation: slideIn 0.3s ease-out;
        }

        @keyframes slideIn {
            from { transform: translateX(-20px); opacity: 0; }
            to { transform: translateX(0); opacity: 1; }
        }

        /* ✅ STYLES POUR LES COMMANDES CORRIGÉES */

/* Badge pour les invités */
.guest-badge {
    background: #f3f4f6;
    color: #374151;
    padding: 2px 6px;
    border-radius: 4px;
    font-size: 10px;
    margin-left: 5px;
    font-weight: 500;
}

/* Informations de date */
.date-info {
    display: flex;
    flex-direction: column;
    gap: 2px;
}

.date-primary {
    font-weight: 600;
    color: var(--text-dark);
}

.date-time {
    font-size: 12px;
    color: var(--text-medium);
}

/* Informations client */
.customer-info {
    display: flex;
    flex-direction: column;
    gap: 2px;
}

.customer-name {
    font-weight: 500;
    color: var(--text-dark);
}

.customer-email {
    font-size: 12px;
    color: var(--text-medium);
}

/* Affichage des tailles */
.sizes-info {
    min-width: 120px;
}

.sizes-display {
    display: flex;
    flex-direction: column;
    gap: 4px;
}

.sizes-text {
    font-size: 13px;
    color: var(--text-dark);
    line-height: 1.2;
}

.sizes-indicator {
    display: flex;
    align-items: center;
}

.coverage-badge {
    padding: 2px 6px;
    border-radius: 4px;
    font-size: 10px;
    font-weight: 500;
    white-space: nowrap;
}

.coverage-badge.complete {
    background: #d1fae5;
    color: #065f46;
}

.coverage-badge.partial {
    background: #fef3c7;
    color: #92400e;
}

.coverage-badge.standard {
    background: #e0e7ff;
    color: #3730a3;
}

.coverage-badge.development {
    background: #f3f4f6;
    color: #374151;
}

/* Mobile - Affichage des tailles */
.sizes-mobile-display {
    display: flex;
    flex-direction: column;
    gap: 4px;
    margin-top: 2px;
}

.sizes-coverage {
    display: flex;
    align-items: center;
}

.coverage-complete,
.coverage-partial,
.coverage-standard,
.coverage-development {
    padding: 2px 6px;
    border-radius: 4px;
    font-size: 10px;
    font-weight: 500;
}

.coverage-complete {
    background: #d1fae5;
    color: #065f46;
}

.coverage-partial {
    background: #fef3c7;
    color: #92400e;
}

.coverage-standard {
    background: #e0e7ff;
    color: #3730a3;
}

.coverage-development {
    background: #f3f4f6;
    color: #374151;
}

/* Informations prix */
.amount-display {
    display: flex;
    flex-direction: column;
    gap: 2px;
}

.final-amount {
    font-weight: 600;
    color: var(--text-dark);
}

.promo-info {
    display: flex;
    flex-direction: column;
    gap: 1px;
}

.original-amount {
    font-size: 11px;
    color: var(--text-medium);
    text-decoration: line-through;
}

.promo-code {
    font-size: 10px;
    background: var(--success-light);
    color: var(--success-dark);
    padding: 1px 4px;
    border-radius: 3px;
    align-self: flex-start;
}

/* Paiement */
.payment-info {
    display: flex;
    flex-direction: column;
    gap: 2px;
}

.payment-method {
    font-size: 13px;
    color: var(--text-dark);
}

.payment-status {
    font-size: 11px;
    font-weight: 500;
}

.payment-status.paid {
    color: var(--success);
}

/* Responsive amélioré */
@media (max-width: 768px) {
    .guest-badge {
        font-size: 9px;
        padding: 1px 4px;
    }
    
    .sizes-mobile-display {
        max-width: 100%;
    }
    
    .sizes-text {
        font-size: 12px;
        word-break: break-word;
    }
}

/* États vides */
.empty-state {
    text-align: center;
    padding: 40px 20px;
    color: var(--text-medium);
}

.empty-state i {
    font-size: 48px;
    margin-bottom: 16px;
    opacity: 0.5;
}

/* Actions des boutons */
.action-btn {
    background: none;
    border: 1px solid #e5e7eb;
    border-radius: 6px;
    padding: 8px 10px;
    cursor: pointer;
    transition: all 0.2s;
    color: var(--text-medium);
}

.action-btn:hover {
    background: var(--grey-light);
    border-color: var(--rose-gold);
    color: var(--rose-gold);
}

.action-btn.view:hover {
    background: var(--info-light);
    border-color: var(--info);
    color: var(--info);
}

.action-btn.edit:hover {
    background: var(--warning-light);
    border-color: var(--warning);
    color: var(--warning);
}
    </style>
</head>

<body>
    <!-- Mobile Header -->
    <div class="mobile-header">
        <div class="mobile-header-content">
            <button class="mobile-menu-btn" onclick="toggleSidebar()">
                <i class="fas fa-bars"></i>
            </button>
            <h1>Admin Commandes</h1>
            <div></div>
        </div>
    </div>

    <!-- Sidebar Overlay for Mobile -->
    <div class="sidebar-overlay" onclick="closeSidebar()"></div>

    <div class="app-layout">
        <!-- Sidebar -->
        <aside class="sidebar">
            <div class="sidebar-header">
                <h2 class="sidebar-title">
                    <i class="fas fa-gem"></i>
                    CrystosJewel Admin
                </h2>
            </div>
            <nav class="sidebar-nav">
                <div class="nav-item">
                    <a href="/admin/dashboard" class="nav-link">
                        <i class="fas fa-home"></i>
                        Dashboard
                    </a>
                </div>
                <div class="nav-item">
                    <a href="/admin/commandes" class="nav-link active">
                        <i class="fas fa-shopping-cart"></i>
                        Commandes
                    </a>
                </div>
                <div class="nav-item">
                    <a href="/adminRéessayerDContinuerModifier/clients" class="nav-link">
<i class="fas fa-users"></i>
Clients
</a>
</div>
<div class="nav-item">
<a href="/admin/bijoux" class="nav-link">
<i class="fas fa-gem"></i>
Bijoux
</a>
</div>
<div class="nav-item">
<a href="/admin/codes-promo" class="nav-link">
<i class="fas fa-tags"></i>
Codes Promo
</a>
</div>
<div class="nav-item">
<a href="/admin/statistiques" class="nav-link">
<i class="fas fa-chart-line"></i>
Statistiques
</a>
</div>
<div class="nav-item">
<a href="/admin/parametres" class="nav-link">
<i class="fas fa-cog"></i>
Paramètres
</a>
</div>
</nav>
</aside>
    <!-- Main Content -->
    <main class="main-content">
        <!-- Page Header -->
        <div class="page-header fade-in">
            <h1 class="page-title">Gestion des Commandes</h1>
            <p class="page-subtitle">Suivi et administration des commandes avec historique complet</p>
        </div>

        <!-- Stats Dashboard -->
        <div class="stats-grid fade-in">
            <div class="stat-card">
                <div class="stat-label">Total Commandes</div>
                <div class="stat-value" id="totalCommandes">
                    <%= stats.totalCommandes.value %>
                </div>
                <div class="stat-trend <%= stats.totalCommandes.direction %>">
                    <i class="fas fa-arrow-<%= stats.totalCommandes.direction %>"></i>
                    <%= Math.abs(stats.totalCommandes.trend) %>% <%= stats.totalCommandes.compared %>
                </div>
            </div>
            <div class="stat-card">
                <div class="stat-label">Chiffre d'Affaires</div>
                <div class="stat-value" id="chiffreAffaires">
                    <%= helpers.formatPrice(stats.chiffreAffaires.value) %>€
                </div>
                <div class="stat-trend <%= stats.chiffreAffaires.direction %>">
                    <i class="fas fa-arrow-<%= stats.chiffreAffaires.direction %>"></i>
                    <%= Math.abs(stats.chiffreAffaires.trend) %>% <%= stats.chiffreAffaires.compared %>
                </div>
            </div>
            <div class="stat-card">
                <div class="stat-label">Codes Promo Utilisés</div>
                <div class="stat-value" id="codesPromo">
                    <%= stats.codesPromoUtilises.value %>
                </div>
                <div class="stat-trend <%= stats.codesPromoUtilises.direction %>">
                    <i class="fas fa-arrow-<%= stats.codesPromoUtilises.direction %>"></i>
                    <%= Math.abs(stats.codesPromoUtilises.trend) %>% <%= stats.codesPromoUtilises.compared %>
                </div>
            </div>
            <div class="stat-card">
                <div class="stat-label">Économies Clients</div>
                <div class="stat-value" id="reductionTotale">
                    <%= helpers.formatPrice(stats.economiesClients.value) %>€
                </div>
                <div class="stat-trend down">
                    <i class="fas fa-piggy-bank"></i>
                    <%= stats.economiesClients.compared %>
                </div>
            </div>
        </div>

        <!-- Stats par statut -->
        <div class="stats-grid fade-in" style="margin-bottom: 2rem;">
            <div class="stat-card" style="border-left: 4px solid #f59e0b;">
                <div class="stat-label">
                    <i class="fas fa-clock" style="color: #f59e0b;"></i> En Attente
                </div>
                <div class="stat-value" style="color: #f59e0b;">
                    <%= statusStats.waiting %>
                </div>
                <small style="color: #64748b;">Commandes à traiter</small>
            </div>
            <div class="stat-card" style="border-left: 4px solid #3b82f6;">
                <div class="stat-label">
                    <i class="fas fa-cogs" style="color: #3b82f6;"></i> En Préparation
                </div>
                <div class="stat-value" style="color: #3b82f6;">
                    <%= statusStats.preparing %>
                </div>
                <small style="color: #64748b;">En cours de traitement</small>
            </div>
            <div class="stat-card" style="border-left: 4px solid #10b981;">
                <div class="stat-label">
                    <i class="fas fa-shipping-fast" style="color: #10b981;"></i> Expédiées
                </div>
                <div class="stat-value" style="color: #10b981;">
                    <%= statusStats.shipped %>
                </div>
                <small style="color: #64748b;">En cours de livraison</small>
            </div>
            <div class="stat-card" style="border-left: 4px solid #059669;">
                <div class="stat-label">
                    <i class="fas fa-check-circle" style="color: #059669;"></i> Livrées
                </div>
                <div class="stat-value" style="color: #059669;">
                    <%= statusStats.delivered %>
                </div>
                <small style="color: #64748b;">Commandes terminées</small>
            </div>
            <div class="stat-card" style="border-left: 4px solid #ef4444;">
                <div class="stat-label">
                    <i class="fas fa-times-circle" style="color: #ef4444;"></i> Annulées
                </div>
                <div class="stat-value" style="color: #ef4444;">
                    <%= statusStats.cancelled %>
                </div>
                <small style="color: #64748b;">Commandes annulées</small>
            </div>
        </div>

        <!-- Controls -->
        <div class="controls slide-in">
            <div class="controls-grid">
                <div class="search-section">
                    <div class="search-box">
                        <i class="fas fa-search"></i>
                        <input type="text" 
                               class="search-input" 
                               id="searchInput"
                               placeholder="Rechercher par numéro, client, email, code promo...">
                    </div>
                    <div class="filter-group">
                        <select class="filter-select" id="statusFilter">
                            <option value="">Tous les statuts</option>
                            <option value="waiting">En attente</option>
                            <option value="preparing">En préparation</option>
                            <option value="shipped">Expédiée</option>
                            <option value="delivered">Livrée</option>
                            <option value="cancelled">Annulée</option>
                        </select>
                        <select class="filter-select" id="promoFilter">
                            <option value="">Tous les types</option>
                            <option value="with-promo">Avec code promo</option>
                            <option value="without-promo">Sans code promo</option>
                        </select>
                        <select class="filter-select" id="paymentFilter">
                            <option value="">Tous les paiements</option>
                            <option value="card">Carte bancaire</option>
                            <option value="paypal">PayPal</option>
                            <option value="bank_transfer">Virement</option>
                            <option value="check">Chèque</option>
                            <option value="cash">Espèces</option>
                        </select>
                        <select class="filter-select" id="dateFilter">
                            <option value="">Toutes les dates</option>
                            <option value="today">Aujourd'hui</option>
                            <option value="week">Cette semaine</option>
                            <option value="month">Ce mois</option>
                        </select>
                    </div>
                </div>
                <div class="actions-group">
                    <button class="btn btn-secondary" onclick="resetFilters()">
                        <i class="fas fa-undo"></i>
                        Reset
                    </button>
                    <button class="btn btn-secondary" onclick="exportData()">
                        <i class="fas fa-download"></i>
                        Export
                    </button>
                    <button class="btn btn-primary" onclick="refreshData()">
                        <i class="fas fa-sync-alt"></i>
                        Actualiser
                    </button>
                </div>
            </div>
        </div>

        <!-- Desktop Table -->
        <div class="table-container slide-in">
            <table class="table" id="commandesTable">
                <thead>
                    <tr>
                        <th>N° Commande</th>
                        <th>Date & Heure</th>
                        <th>Client</th>
                        <th>Montant & Promo</th>
                        <th>Paiement</th>
                        <th>📏 Tailles</th>
                        <th>Statut</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody id="commandesTableBody">
                <tbody id="commandesTableBody">
    <% if (commandes && commandes.length > 0) { %>
        <% commandes.forEach(commande => { %>
            <tr data-order-id="<%= commande.id %>" 
                data-status="<%= commande.status %>"
                data-promo="<%= commande.promo_code ? 'true' : 'false' %>">
                
                <!-- N° Commande -->
                <td class="order-number">
                    <div class="numero-commande">
                        <%= commande.numero_commande %>
                        <% if (commande.isGuestOrder) { %>
                            <span class="guest-badge">👥 Invité</span>
                        <% } %>
                    </div>
                </td>
                
                <!-- ✅ DATE & HEURE CORRIGÉE -->
                <td class="order-date">
                    <div class="date-info">
                        <div class="date-primary">
                            <%= commande.date || new Date().toLocaleDateString('fr-FR') %>
                        </div>
                        <div class="date-time">
                            <%= commande.dateTime || new Date().toLocaleString('fr-FR') %>
                        </div>
                    </div>
                </td>
                
                <!-- Client -->
                <td class="customer-info">
                    <div class="customer-name">
                        <%= commande.customerName || 'Client inconnu' %>
                    </div>
                    <div class="customer-email">
                        <%= commande.customerEmail || 'email@inconnu.com' %>
                    </div>
                </td>
                
                <!-- Montant & Promo -->
                <td class="order-amount">
                    <div class="amount-display">
                        <span class="final-amount">
                            <%= helpers.formatPrice(commande.amount) %>€
                        </span>
                        <% if (commande.hasDiscount) { %>
                            <div class="promo-info">
                                <span class="original-amount">
                                    <%= helpers.formatPrice(commande.originalAmount) %>€
                                </span>
                                <span class="promo-code">
                                    <%= commande.promo_code %>
                                </span>
                            </div>
                        <% } %>
                    </div>
                </td>
                
                <!-- Paiement -->
                <td class="payment-info">
                    <div class="payment-method">
                        💳 Carte bancaire
                    </div>
                    <div class="payment-status paid">
                        ✅ Payé
                    </div>
                </td>
                
                <!-- ✅ TAILLES CORRIGÉES -->
                <td class="sizes-info">
                    <% 
                    const sizesInfo = commande.sizesInfo || { 
                        totalItems: 0, 
                        itemsWithSizes: 0, 
                        sizesDisplay: 'Non spécifiées',
                        hasSizeInfo: false,
                        sizesCoverage: 0
                    };
                    %>
                    
                    <div class="sizes-display">
                        <div class="sizes-text">
                            <%= sizesInfo.sizesDisplay %>
                        </div>
                        
                        <% if (sizesInfo.totalItems > 0) { %>
                            <div class="sizes-indicator">
                                <% if (sizesInfo.sizesCoverage === 100) { %>
                                    <span class="coverage-badge complete">🎯 Complète</span>
                                <% } else if (sizesInfo.sizesCoverage > 0) { %>
                                    <span class="coverage-badge partial">📏 Partielle (<%= sizesInfo.sizesCoverage %>%)</span>
                                <% } else { %>
                                    <span class="coverage-badge standard">📐 Standard</span>
                                <% } %>
                            </div>
                        <% } else { %>
                            <div class="sizes-indicator">
                                <span class="coverage-badge development">❓ En développement</span>
                            </div>
                        <% } %>
                    </div>
                </td>
                
                <!-- Statut -->
                <td class="order-status">
                    <span class="status-badge <%= getStatusClass(commande.status) %>">
                        <%= translateStatus(commande.status) %>
                    </span>
                </td>
                
                <!-- Actions -->
                <td class="order-actions">
                    <button class="action-btn view" 
                            data-order-id="<%= commande.id %>"
                            onclick="viewOrderDetails('<%= commande.id %>')">
                        <i class="fas fa-eye"></i>
                    </button>
                    <button class="action-btn edit" 
                            data-order-id="<%= commande.id %>"
                            onclick="editOrder('<%= commande.id %>')">
                        <i class="fas fa-edit"></i>
                    </button>
                </td>
            </tr>
        <% }) %>
    <% } else { %>
        <tr>
            <td colspan="8" class="empty-state">
                <i class="fas fa-inbox"></i>
                <div>Aucune commande trouvée</div>
            </td>
        </tr>
    <% } %>
</tbody>

<!-- ✅ SECTION MOBILE CORRIGÉE -->
<div class="mobile-cards">
    <% if (commandes && commandes.length > 0) { %>
        <% commandes.forEach(commande => { %>
            <% 
            const sizesInfo = commande.sizesInfo || { 
                totalItems: 0, 
                itemsWithSizes: 0, 
                sizesDisplay: 'Non spécifiées',
                hasSizeInfo: false,
                sizesCoverage: 0
            };
            %>
            
            <div class="order-card" 
                 data-order-id="<%= commande.id %>" 
                 data-status="<%= commande.status %>">
                
                <!-- En-tête de carte -->
                <div class="order-card-header">
                    <div class="order-number">
                        <%= commande.numero_commande %>
                        <% if (commande.isGuestOrder) { %>
                            <span class="guest-badge">👥 Invité</span>
                        <% } %>
                    </div>
                    <span class="status-badge <%= getStatusClass(commande.status) %>">
                        <%= translateStatus(commande.status) %>
                    </span>
                </div>
                
                <!-- Informations principales -->
                <div class="order-card-content">
                    <!-- ✅ DATE CORRIGÉE -->
                    <div class="info-item">
                        <strong>📅 Date:</strong>
                        <span><%= commande.date || new Date().toLocaleDateString('fr-FR') %></span>
                    </div>
                    
                    <div class="info-item">
                        <strong>🕐 Heure:</strong>
                        <span><%= commande.dateTime || new Date().toLocaleString('fr-FR') %></span>
                    </div>
                    
                    <!-- Client -->
                    <div class="info-item">
                        <strong>👤 Client:</strong>
                        <span><%= commande.customerName || 'Client inconnu' %></span>
                        <small class="customer-email">
                            <%= commande.customerEmail || 'email@inconnu.com' %>
                        </small>
                    </div>
                    
                    <!-- Montant -->
                    <div class="info-item">
                        <strong>💰 Montant:</strong>
                        <span class="amount">
                            <%= helpers.formatPrice(commande.amount) %>€
                            <% if (commande.hasDiscount) { %>
                                <small class="original-price">
                                    (était <%= helpers.formatPrice(commande.originalAmount) %>€)
                                </small>
                            <% } %>
                        </span>
                    </div>
                    
                    <!-- ✅ TAILLES CORRIGÉES POUR MOBILE -->
                    <div class="info-item">
                        <strong>📏 Tailles:</strong>
                        <div class="sizes-mobile-display">
                            <div class="sizes-text">
                                <%= sizesInfo.sizesDisplay %>
                            </div>
                            
                            <% if (sizesInfo.totalItems > 0) { %>
                                <div class="sizes-coverage">
                                    <% if (sizesInfo.sizesCoverage === 100) { %>
                                        <span class="coverage-complete">🎯 Complète</span>
                                    <% } else if (sizesInfo.sizesCoverage > 0) { %>
                                        <span class="coverage-partial">📏 <%= sizesInfo.sizesCoverage %>%</span>
                                    <% } else { %>
                                        <span class="coverage-standard">📐 Standard</span>
                                    <% } %>
                                </div>
                            <% } else { %>
                                <div class="sizes-coverage">
                                    <span class="coverage-development">❓ En développement</span>
                                </div>
                            <% } %>
                        </div>
                    </div>
                    
                    <!-- Code promo -->
                    <% if (commande.promo_code) { %>
                        <div class="info-item">
                            <strong>🎫 Promo:</strong>
                            <span class="promo-code"><%= commande.promo_code %></span>
                        </div>
                    <% } %>
                </div>
                
                <!-- Actions -->
                <div class="order-card-actions">
                    <button class="action-btn view" 
                            data-order-id="<%= commande.id %>"
                            onclick="viewOrderDetails('<%= commande.id %>')">
                        <i class="fas fa-eye"></i>
                        Voir
                    </button>
                    <button class="action-btn edit" 
                            data-order-id="<%= commande.id %>"
                            onclick="editOrder('<%= commande.id %>')">
                        <i class="fas fa-edit"></i>
                        Modifier
                    </button>
                </div>
            </div>
        <% }) %>
    <% } else { %>
        <div class="empty-state">
            <i class="fas fa-inbox"></i>
            <div>Aucune commande trouvée</div>
        </div>
    <% } %>
</div>
                </tbody>
            </table>
        </div>

        <!-- Mobile Cards -->
        <div class="mobile-cards" id="mobileCards">
            <% if (commandes && commandes.length > 0) { %>
                <% commandes.forEach(commande => { %>
                    <% 
                    const priceInfoMobile = calculateCorrectPrices(commande);
                    const sizesInfoMobile = commande.sizesInfo || getTaillesFromOrder(commande);
                    %>
                    <div class="order-card" 
                         data-order-id="<%= commande.id %>" 
                         data-status="<%= commande.status %>"
                         data-promo="<%= commande.promo_code ? 'with-promo' : 'without-promo' %>"
                         data-date="<%= commande.date %>">
                        
                        <div class="order-card-header">
                            <div class="order-number">
                                <%= commande.numero_commande || 'CMD-' + commande.id %>
                            </div>
                            <span class="status <%= getStatusClass(commande.status) %>">
                                <%= translateStatus(commande.status) %>
                            </span>
                        </div>
                        
                        <div class="order-card-body">
                            <div class="order-card-field">
                                <div class="order-card-label">Date & Heure</div>
                                <div class="order-card-value">
                                    <%= formatDateTime(commande.created_at || commande.order_date || commande.date) %>
                                    <br><small><%= getTimeAgo(commande.created_at || commande.order_date || commande.date) %></small>
                                </div>
                            </div>
                            <div class="order-card-field">
                                <div class="order-card-label">Client</div>
                                <div class="order-card-value"><%= commande.customer_name || commande.customerName %></div>
                            </div>
                            <div class="order-card-field">
                                <div class="order-card-label">Montant</div>
                                <div class="order-card-value">
                                    <% if (priceInfoMobile.hasDiscount) { %>
                                        <div style="text-decoration: line-through; color: var(--gray-medium); font-size: 0.8rem;">
                                            <%= priceInfoMobile.originalAmount.toFixed(2) %>€
                                        </div>
                                        <div class="amount" style="color: var(--primary-dark);">
                                            <%= priceInfoMobile.finalTotal.toFixed(2) %>€
                                        </div>
                                        <small style="color: var(--success);">-<%= priceInfoMobile.discountAmount.toFixed(2) %>€</small>
                                    <% } else { %>
                                        <div class="amount">
                                            <%= priceInfoMobile.finalTotal.toFixed(2) %>€
                                        </div>
                                    <% } %>
                                </div>
                            </div>
                            <div class="order-card-field">
                                <div class="order-card-label">Paiement</div>
                                <div class="order-card-value">
                                    <i class="fas fa-credit-card"></i> <%= getPaymentMethodDisplay(commande.payment_method) %>
                                </div>
                            </div>
                            <div class="order-card-field">
                                <div class="order-card-label">Code Promo</div>
                                <div class="order-card-value">
                                    <% if (commande.promo_code) { %>
                                        <span class="promo-info">
                                            <%= commande.promo_code %>
                                        </span>
                                    <% } else { %>
                                        <span style="color: var(--gray-medium);">Aucun</span>
                                    <% } %>
                                </div>
                            </div>
                            
                            <!-- Tailles pour mobile -->
                            <div class="order-card-field" style="grid-column: 1 / -1;">
                                <div class="order-card-label">
                                    <i class="fas fa-ruler"></i> Tailles commandées
                                </div>
                                <div class="order-card-value">
                                    <% if (sizesInfoMobile && sizesInfoMobile.hasSizeInfo) { %>
                                        <div class="sizes-card-info">
                                            <div class="sizes-label">
                                                <%= formatSizesDisplay(sizesInfoMobile) %>
                                            </div>
                                            <div style="display: flex; align-items: center; gap: 8px; flex-wrap: wrap; margin-top: 4px;">
                                                <% 
                                                const mobileCoverage = sizesInfoMobile.sizesCoverage || 0;
                                                let mobileCoverageClass = 'no-coverage';
                                                if (mobileCoverage === 100) mobileCoverageClass = 'full-coverage';
                                                else if (mobileCoverage > 50) mobileCoverageClass = 'partial-coverage';
                                                else if (mobileCoverage > 0) mobileCoverageClass = 'limited-coverage';
                                                %>
                                                <span class="size-coverage <%= mobileCoverageClass %>">
                                                    <%= sizesInfoMobile.itemsWithSizes %>/<%= sizesInfoMobile.totalItems %>
                                                </span>
                                                <span style="font-size: 0.7rem; opacity: 0.8;">
                                                    <%= getSizesCoverageIndicator(sizesInfoMobile) %>
                                                </span>
                                            </div>
                                        </div>
                                    <% } else { %>
                                        <div class="development-indicator">
                                            <i class="fas fa-question-circle"></i>
                                            Gestion des tailles en cours de développement
                                        </div>
                                    <% } %>
                                </div>
                            </div>
                        </div>
                        
                        <div class="order-card-actions">
                            <button class="action-btn view" 
                                    onclick="viewOrderDetails('<%= commande.id %>')">
                                <i class="fas fa-eye"></i>
                            </button>
                            <button class="action-btn edit" 
                                    onclick="editOrder('<%= commande.id %>')">
                                <i class="fas fa-edit"></i>
                            </button>
                        </div>
                    </div>
                <% }) %>
            <% } else { %>
                <div class="empty-state">
                    <i class="fas fa-inbox"></i>
                    <div>Aucune commande trouvée</div>
                </div>
            <% } %>
        </div>
    </main>
</div>

<!-- Modal de détails -->
<div id="orderModal" class="modal">
    <div class="modal-content">
        <div class="modal-header">
            <h2 class="modal-title" id="modalTitle">Détails de la commande</h2>
            <button class="close-modal" onclick="closeModal()">
                <i class="fas fa-times"></i>
            </button>
        </div>
        <div class="modal-body" id="modalBody">
            <!-- Contenu dynamique -->
        </div>
    </div>
</div>

<!-- Toast Notification -->
<div id="toast" class="toast">
    <i class="fas fa-check-circle"></i>
    <span id="toastMessage">Message</span>
</div>

<!-- Loading Overlay -->
<div id="loadingOverlay" class="loading-overlay">
    <div class="spinner"></div>
</div>

<script>

    // ✅ SCRIPT ADMIN COMMANDES - SOLUTION DIRECTE POUR orderId
// Configuration et variables globales
const config = {
    baseUrl: '',
    currentUser: typeof user !== 'undefined' ? (user?.name || "Admin") : 'Admin',
    totalOrders: typeof commandes !== 'undefined' ? commandes.length : 0,
    filters: { search: '', status: '', promo: '', date: '', payment: '' }
};

let allOrders = [];
let filteredOrders = [];

// ✅ INITIALISATION AVEC CORRECTION IMMÉDIATE DES BOUTONS
document.addEventListener('DOMContentLoaded', function() {
    console.log('🚀 Initialisation Admin Commandes - Solution directe orderId');
    initializeData();
    fixAllActionButtons(); // ✅ CORRECTION IMMÉDIATE
    setupEventListeners();
    debugOrderStructure();
});

// ✅ FONCTION POUR CORRIGER TOUS LES BOUTONS D'ACTION
function fixAllActionButtons() {
    console.log('🔧 Correction de tous les boutons d\'action');
    
    // ✅ CORRIGER LES BOUTONS DANS LE TABLEAU
    const tableRows = document.querySelectorAll('#commandesTableBody tr[data-order-id]');
    tableRows.forEach((row, index) => {
        const orderId = row.dataset.orderId;
        if (!orderId) {
            console.warn(`⚠️ Ligne ${index} sans orderId`);
            return;
        }
        
        console.log(`🔧 Correction boutons pour commande ${orderId}`);
        
        // Corriger bouton "Voir"
        const viewButton = row.querySelector('.action-btn.view');
        if (viewButton) {
            viewButton.setAttribute('data-order-id', orderId);
            viewButton.onclick = function(e) {
                e.preventDefault();
                console.log(`👁️ Clic Voir - orderId: ${orderId}`);
                viewOrderDetails(orderId);
            };
        }
        
        // Corriger bouton "Modifier"
        const editButton = row.querySelector('.action-btn.edit');
        if (editButton) {
            editButton.setAttribute('data-order-id', orderId);
            editButton.onclick = function(e) {
                e.preventDefault();
                console.log(`✏️ Clic Modifier - orderId: ${orderId}`);
                editOrder(orderId);
            };
        }
    });
    
    // ✅ CORRIGER LES BOUTONS DANS LES CARTES MOBILES
    const mobileCards = document.querySelectorAll('.order-card[data-order-id]');
    mobileCards.forEach((card, index) => {
        const orderId = card.dataset.orderId;
        if (!orderId) {
            console.warn(`⚠️ Carte ${index} sans orderId`);
            return;
        }
        
        console.log(`📱 Correction boutons mobile pour commande ${orderId}`);
        
        // Corriger boutons dans les cartes
        const viewButton = card.querySelector('.action-btn.view');
        const editButton = card.querySelector('.action-btn.edit');
        
        if (viewButton) {
            viewButton.onclick = function(e) {
                e.preventDefault();
                console.log(`👁️ Clic Mobile Voir - orderId: ${orderId}`);
                viewOrderDetails(orderId);
            };
        }
        
        if (editButton) {
            editButton.onclick = function(e) {
                e.preventDefault();
                console.log(`✏️ Clic Mobile Modifier - orderId: ${orderId}`);
                editOrder(orderId);
            };
        }
    });
    
    console.log('✅ Correction des boutons terminée');
}

// ✅ DEBUG POUR VOIR LA STRUCTURE EXACTE
function debugOrderStructure() {
    console.log('🔍 Debug structure des commandes:');
    
    const rows = document.querySelectorAll('#commandesTableBody tr[data-order-id]');
    console.log(`📊 Trouvé ${rows.length} lignes avec data-order-id`);
    
    rows.forEach((row, index) => {
        const orderId = row.dataset.orderId;
        const viewBtn = row.querySelector('.action-btn.view');
        const editBtn = row.querySelector('.action-btn.edit');
        
        console.log(`  Ligne ${index + 1}:`, {
            orderId: orderId,
            hasViewBtn: !!viewBtn,
            hasEditBtn: !!editBtn,
            viewOnclick: viewBtn?.getAttribute('onclick'),
            editOnclick: editBtn?.getAttribute('onclick')
        });
    });
}

// Fonctions utilitaires
// Fonctions utilitaires
function safeToFixed(value, decimals = 2) {
    if (value === null || value === undefined || isNaN(value)) return '0.00';
    return parseFloat(value).toFixed(decimals);
}

function safeParseFloat(value) {
    if (value === null || value === undefined || value === '') return 0;
    const parsed = parseFloat(value);
    return isNaN(parsed) ? 0 : parsed;
}

function formatCurrency(amount) {
    const safeAmount = safeParseFloat(amount);
    return safeAmount.toLocaleString('fr-FR', { 
        minimumFractionDigits: 2, 
        maximumFractionDigits: 2 
    }) + '€';
}

function formatDateTime(dateString) {
    if (!dateString || typeof dateString === 'string' && dateString.includes('Il y a')) {
        return 'Date à corriger';
    }
    try {
        const date = new Date(dateString);
        if (isNaN(date.getTime())) return 'Date invalide';
        return date.toLocaleString('fr-FR', {
            timeZone: 'Europe/Paris',
            day: '2-digit',
            month: '2-digit', 
            year: 'numeric',
            hour: '2-digit',
            minute: '2-digit',
            hour12: false
        });
    } catch (error) {
        return 'Erreur date';
    }
}

function getTimeAgo(dateString) {
    if (!dateString || typeof dateString === 'string' && dateString.includes('Il y a')) {
        return 'Temps à recalculer';
    }
    try {
        const date = new Date(dateString);
        if (isNaN(date.getTime())) return 'Date invalide';
        
        const now = new Date();
        const diffMs = Math.abs(now - date);
        const diffHours = Math.floor(diffMs / (1000 * 60 * 60));
        const diffDays = Math.floor(diffHours / 24);
        
        if (diffDays > 0) {
            return `Il y a ${diffDays} jour${diffDays > 1 ? 's' : ''}`;
        } else if (diffHours > 0) {
            return `Il y a ${diffHours} heure${diffHours > 1 ? 's' : ''}`;
        } else {
            return 'Récemment';
        }
    } catch (error) {
        return 'Erreur de date';
    }
}

function getStatusClass(status) {
    const statusMap = {
        'waiting': 'en-attente', 'preparing': 'preparation', 'shipped': 'expediee',
        'delivered': 'livree', 'cancelled': 'annulee', 'en_attente': 'en-attente',
        'preparation': 'preparation', 'expediee': 'expediee', 'livree': 'livree', 
        'annulee': 'annulee', 'en_preparation': 'preparation', 'confirmee': 'confirmee'
    };
    return statusMap[status] || 'en-attente';
}

function translateStatus(status) {
    const statusMap = {
        'waiting': 'En attente', 'preparing': 'En préparation', 'shipped': 'Expédiée',
        'delivered': 'Livrée', 'cancelled': 'Annulée', 'en_attente': 'En attente',
        'preparation': 'En préparation', 'expediee': 'Expédiée', 'livree': 'Livrée', 
        'annulee': 'Annulée', 'en_preparation': 'En préparation', 'confirmee': 'Confirmée'
    };
    return statusMap[status] || 'En attente';
}

function getPaymentMethodDisplay(paymentMethod) {
    const methods = {
        'card': 'Carte bancaire', 'credit_card': 'Carte bancaire',
        'paypal': 'PayPal', 'bank_transfer': 'Virement bancaire',
        'cash': 'Espèces'
    };
    return methods[paymentMethod] || 'Carte bancaire';
}

function initializeData() {
    const rows = document.querySelectorAll('#commandesTableBody tr[data-order-id]');
    allOrders = Array.from(rows).map(row => ({
        id: row.dataset.orderId, 
        status: row.dataset.status, 
        promo: row.dataset.promo,
        date: row.dataset.date, 
        element: row,
        cardElement: document.querySelector(`.order-card[data-order-id="${row.dataset.orderId}"]`)
    }));
    filteredOrders = [...allOrders];
    console.log(`📊 ${allOrders.length} commandes initialisées`);
}

function setupEventListeners() {
    const searchInput = document.getElementById('searchInput');
    if (searchInput) searchInput.addEventListener('input', debounce(handleSearch, 300));

    ['statusFilter', 'promoFilter', 'dateFilter', 'paymentFilter'].forEach(id => {
        const element = document.getElementById(id);
        if (element) element.addEventListener('change', applyFilters);
    });

    document.addEventListener('click', function(e) {
        if (e.target.classList.contains('modal')) closeModal();
    });

    document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape') { closeModal(); closeSidebar(); }
    });
}

// ✅ FONCTION VIEW ORDER DETAILS SIMPLIFIÉE
async function viewOrderDetails(orderId) {
    try {
        console.log(`🔍 ViewOrderDetails appelé avec orderId: "${orderId}"`);
        
        if (!orderId || orderId === 'undefined') {
            console.error('❌ orderId invalide dans viewOrderDetails');
            showToast('Erreur: ID de commande invalide', 'error');
            return;
        }
        
        orderId = String(orderId).trim();
        console.log(`🔍 Récupération détails commande: ${orderId}`);
        showLoading();
        
        const response = await fetch(`/admin/commandes/${orderId}/details`, {
            method: 'GET',
            headers: { 'Accept': 'application/json', 'Content-Type': 'application/json' }
        });
        
        if (!response.ok) throw new Error(`Erreur HTTP ${response.status}`);
        
        const data = await response.json();
        if (data.success) {
            displayOrderDetails(data, orderId);
            showModal();
        } else {
            showToast(data.message || 'Erreur lors du chargement', 'error');
        }
    } catch (error) {
        console.error('❌ Erreur détails commande:', error);
        showToast(`Erreur: ${error.message}`, 'error');
    } finally {
        hideLoading();
    }
}

// ✅ AFFICHAGE MODAL AVEC STYLE ORIGINAL COMPLET
function displayOrderDetails(data, orderId) {
    const { order, items, summary, modifications, history } = data;
    const safeOrder = order || {};
    const safeItems = items || [];
    const safeSummary = summary || {};
    const safeModifications = modifications || history || []; // ✅ Utiliser modifications OU history
    const finalOrderId = orderId || safeOrder.id;
    
    const realDate = safeOrder.created_at || safeOrder.order_date || safeOrder.date;
    const realTrackingNumber = safeOrder.tracking_number || ''; // ✅ TRACKING CORRIGÉ
    
    console.log(`📊 Affichage détails pour orderId: ${finalOrderId}`);
    console.log(`📦 Tracking number: "${realTrackingNumber}"`);
    console.log(`📋 Modifications trouvées: ${safeModifications.length}`);
    
    document.getElementById('modalTitle').innerHTML = `<i class="fas fa-receipt"></i> Commande ${safeOrder.numero_commande || 'CMD-' + finalOrderId}`;

    const modalContent = `
        <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 25px; margin-bottom: 25px;">
            <!-- Informations générales -->
            <div>
                <h4 style="color: var(--primary-dark); margin-bottom: 15px; padding-bottom: 10px; border-bottom: 2px solid var(--primary-light);">
                    <i class="fas fa-info-circle"></i> Informations générales
                </h4>
                <div style="background: #f8fafc; padding: 20px; border-radius: 10px; border-left: 4px solid var(--primary);">
                    <div style="display: flex; justify-content: space-between; padding: 10px 0; border-bottom: 1px solid #e5e7eb;">
                        <span style="color: #64748b; font-weight: 500;">Mode de livraison:</span>
                        <strong style="color: var(--dark);">${safeOrder.shipping_method || 'Standard'}</strong>
                    </div>
                    <div style="display: flex; justify-content: space-between; padding: 10px 0; border-bottom: 1px solid #e5e7eb;">
                        <span style="color: #64748b; font-weight: 500;">Mode de paiement:</span>
                        <strong style="color: var(--dark);">
                            <i class="fas fa-credit-card"></i> ${getPaymentMethodDisplay(safeOrder.payment_method)}
                        </strong>
                    </div>
                    ${realTrackingNumber ? `
                    <div style="display: flex; justify-content: space-between; padding: 10px 0;">
                        <span style="color: #64748b; font-weight: 500;">Numéro de suivi:</span>
                        <strong style="color: var(--primary-dark); font-family: monospace;">
                            <i class="fas fa-truck"></i> ${realTrackingNumber}
                        </strong>
                    </div>
                    ` : ''}
                    ${safeOrder.internal_notes ? `
                    <div style="margin-top: 15px; padding: 15px; background: #fffbeb; border-left: 4px solid #f59e0b; border-radius: 6px;">
                        <div style="font-weight: 600; color: #92400e; margin-bottom: 5px;">
                            <i class="fas fa-sticky-note"></i> Notes internes:
                        </div>
                        <div style="color: #78350f; font-size: 14px;">
                            ${safeOrder.internal_notes}
                        </div>
                    </div>
                    ` : ''}
                </div>
            </div>
            
            <!-- Informations client -->
            <div>
                <h4 style="color: var(--primary-dark); margin-bottom: 15px; padding-bottom: 10px; border-bottom: 2px solid var(--primary-light);">
                    <i class="fas fa-user"></i> Informations client
                </h4>
                <div style="background: #f8fafc; padding: 20px; border-radius: 10px; border-left: 4px solid var(--info);">
                    <div style="display: flex; justify-content: space-between; padding: 10px 0; border-bottom: 1px solid #e5e7eb;">
                        <span style="color: #64748b; font-weight: 500;">Nom:</span>
                        <strong style="color: var(--dark);">${safeOrder.customer_name || 'N/A'}</strong>
                    </div>
                    <div style="display: flex; justify-content: space-between; padding: 10px 0; border-bottom: 1px solid #e5e7eb;">
                        <span style="color: #64748b; font-weight: 500;">Email:</span>
                        <strong style="color: var(--dark);">${safeOrder.email || 'N/A'}</strong>
                    </div>
                    <div style="display: flex; justify-content: space-between; padding: 10px 0; border-bottom: 1px solid #e5e7eb;">
                        <span style="color: #64748b; font-weight: 500;">Téléphone:</span>
                        <strong style="color: var(--dark);">${safeOrder.shipping_phone || safeOrder.phone || 'N/A'}</strong>
                    </div>
                    <div style="display: flex; justify-content: space-between; padding: 10px 0;">
                        <span style="color: #64748b; font-weight: 500;">Adresse de livraison:</span>
                        <strong style="color: var(--dark); text-align: right; max-width: 200px;">
                            ${safeOrder.shipping_address || 'N/A'}
                            ${safeOrder.shipping_city ? '<br>' + safeOrder.shipping_city : ''}
                            ${safeOrder.shipping_postal_code ? '<br>' + safeOrder.shipping_postal_code : ''}
                            ${safeOrder.shipping_country ? '<br>' + safeOrder.shipping_country : ''}
                        </strong>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- ✅ SECTION HISTORIQUE DES MODIFICATIONS RESTAURÉE -->
        ${safeModifications.length > 0 ? `
        <div style="margin-bottom: 25px;">
            <h4 style="color: #f59e0b; margin-bottom: 15px; padding-bottom: 10px; border-bottom: 2px solid #fbbf24;">
                <i class="fas fa-history"></i> Historique des modifications (${safeModifications.length} entrée${safeModifications.length > 1 ? 's' : ''})
            </h4>
            <div style="background: linear-gradient(135deg, #fffbeb 0%, #fef3c7 100%); padding: 20px; border-radius: 10px; border-left: 4px solid #f59e0b;">
                <div style="position: relative;">
                    ${safeModifications.map((mod, index) => `
                        <div style="display: flex; align-items: flex-start; gap: 15px; margin-bottom: ${index === safeModifications.length - 1 ? '0' : '20px'}; position: relative;">
                            <div style="width: 12px; height: 12px; background: #f59e0b; border-radius: 50%; margin-top: 6px; z-index: 2; position: relative;">
                                ${index !== safeModifications.length - 1 ? `<div style="position: absolute; top: 12px; left: 50%; transform: translateX(-50%); width: 2px; height: 20px; background: #cbd5e1;"></div>` : ''}
                            </div>
                            <div style="flex: 1; background: white; padding: 15px; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); border-left: 3px solid #f59e0b;">
                                <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 8px;">
                                    <span style="font-weight: 600; color: #f59e0b; font-size: 14px;">
                                        <i class="fas fa-edit" style="font-size: 12px; margin-right: 6px;"></i>
                                        ${mod.modification_type === 'status_change' ? 'Changement de statut' :
                                          mod.modification_type === 'tracking_added' ? 'Numéro de suivi' :
                                          mod.modification_type === 'notes_updated' ? 'Notes mises à jour' :
                                          'Modification'}
                                    </span>
                                    <div style="text-align: right;">
                                        <div style="color: #64748b; font-size: 12px; font-weight: 500;">${getTimeAgo(mod.created_at)}</div>
                                        <div style="color: #64748b; font-size: 11px;">${formatDateTime(mod.created_at)}</div>
                                    </div>
                                </div>
                                <div style="color: var(--dark); font-size: 14px; margin-bottom: 8px;">
                                    ${mod.description || 'Modification effectuée'}
                                </div>
                                ${mod.old_value && mod.new_value ? `
                                <div style="display: flex; gap: 15px; font-size: 13px;">
                                    <div style="color: #ef4444;">
                                        <strong>Avant:</strong> ${mod.old_value}
                                    </div>
                                    <div style="color: #10b981;">
                                        <strong>Après:</strong> ${mod.new_value}
                                    </div>
                                </div>
                                ` : ''}
                                <div style="color: #64748b; font-size: 12px; margin-top: 8px;">
                                    <i class="fas fa-user"></i> Par ${mod.modified_by || 'Admin'}
                                </div>
                            </div>
                        </div>
                    `).join('')}
                </div>
            </div>
        </div>
        ` : ''}

        <!-- ✅ PRODUITS COMMANDÉS AVEC TAILLES -->
        ${safeItems.length > 0 ? `
        <div style="margin-bottom: 25px;">
            <h4 style="color: var(--primary-dark); margin-bottom: 15px; padding-bottom: 10px; border-bottom: 2px solid var(--primary-light);">
                <i class="fas fa-gem"></i> Produits commandés (${safeItems.length} article${safeItems.length > 1 ? 's' : ''})
            </h4>
            <div style="display: grid; gap: 15px;">
                ${safeItems.map(item => `
                    <div style="display: flex; align-items: center; gap: 20px; padding: 20px; background: #f8fafc; border-radius: 12px; border: 1px solid #e2e8f0; transition: var(--transition);">
                        <img src="${item.image || '/images/placeholder.jpg'}" 
                             alt="${item.name || 'Produit'}" 
                             style="width: 80px; height: 80px; object-fit: cover; border-radius: 10px; border: 2px solid var(--border);"
                             onerror="this.src='/images/placeholder.jpg'">
                        <div style="flex: 1;">
                            <div style="font-weight: 600; font-size: 16px; color: var(--dark); margin-bottom: 8px;">
                                ${item.name || 'Produit'}
                            </div>
                            <div style="color: #64748b; font-size: 14px; margin-bottom: 8px;">
                                <i class="fas fa-cube"></i> Quantité: <strong>${item.quantity || 1}</strong>
                                <span style="margin: 0 10px;">•</span>
                                <i class="fas fa-euro-sign"></i> Prix unitaire: <strong>${safeToFixed(item.price)}€</strong>
                                ${item.size && item.size !== 'Non spécifiée' ? `
                                <span style="margin: 0 10px;">•</span>
                                <i class="fas fa-ruler"></i> Taille: <strong style="color: var(--primary-dark);">${item.size}</strong>
                                ` : ''}
                            </div>
                            ${item.matiere ? `
                            <div style="color: #64748b; font-size: 13px;">
                                <i class="fas fa-info"></i> Matière: ${item.matiere}
                            </div>
                            ` : ''}
                        </div>
                        <div style="text-align: right;">
                            <div style="font-weight: 700; font-size: 18px; color: var(--primary-dark);">
                                ${safeToFixed(safeParseFloat(item.price) * safeParseFloat(item.quantity))}€
                            </div>
                            <div style="font-size: 12px; color: #64748b;">Total ligne</div>
                        </div>
                    </div>
                `).join('')}
            </div>
        </div>
        ` : ''}
        
        <!-- ✅ RÉCAPITULATIF FINANCIER AVEC CODES PROMO -->
        <div>
            <h4 style="color: var(--primary-dark); margin-bottom: 15px; padding-bottom: 10px; border-bottom: 2px solid var(--primary-light);">
                <i class="fas fa-receipt"></i> Récapitulatif financier
            </h4>
            <div style="background: linear-gradient(135deg, #f8fafc 0%, #f1f5f9 100%); padding: 25px; border-radius: 12px; border: 2px solid var(--border);">
                ${safeOrder.promo_code ? `
                <div style="display: flex; justify-content: space-between; padding: 12px 0; border-bottom: 1px solid #e2e8f0;">
                    <span style="color: #6b7280; font-weight: 500;">Sous-total avant réduction:</span>
                    <strong style="color: var(--dark);">${safeToFixed((safeOrder.subtotal || 0) + (safeOrder.promo_discount_amount || 0))}€</strong>
                </div>
                <div style="display: flex; justify-content: space-between; padding: 12px 0; border-bottom: 1px solid #e2e8f0;">
                    <span style="color: var(--success); font-weight: 500;">
                        <i class="fas fa-tag"></i> Réduction (${safeOrder.promo_code}):
                    </span>
                    <strong style="color: var(--success);">-${safeToFixed(safeOrder.promo_discount_amount)}€</strong>
                </div>
                <div style="display: flex; justify-content: space-between; padding: 12px 0; border-bottom: 1px solid #e2e8f0;">
                    <span style="color: #6b7280; font-weight: 500;">Sous-total après réduction:</span>
                    <strong style="color: var(--dark);">${safeToFixed(safeOrder.subtotal || 0)}€</strong>
                </div>
                ` : `
                <div style="display: flex; justify-content: space-between; padding: 12px 0; border-bottom: 1px solid #e2e8f0;">
                    <span style="color: #6b7280; font-weight: 500;">Sous-total articles:</span>
                    <strong style="color: var(--dark);">${safeToFixed(safeSummary.subtotal || safeOrder.subtotal || safeOrder.total)}€</strong>
                </div>
                `}
                <div style="display: flex; justify-content: space-between; padding: 12px 0; border-bottom: 1px solid #e2e8f0;">
                    <span style="color: #6b7280; font-weight: 500;">Frais de livraison:</span>
                    <strong style="color: var(--dark);">
                        ${safeParseFloat(safeOrder.shipping_price) === 0 ? 'Gratuit' : safeToFixed(safeOrder.shipping_price) + '€'}
                    </strong>
                </div>
                <div style="display: flex; justify-content: space-between; padding: 20px 0; border-top: 3px solid var(--primary); margin-top: 15px;">
                    <span style="font-weight: 700; font-size: 18px; color: var(--dark);">
                        <i class="fas fa-calculator"></i> Total final:
                    </span>
                    <span style="font-weight: 700; font-size: 22px; color: var(--primary-dark);">
                        ${safeToFixed(safeOrder.total)}€
                    </span>
                </div>
                ${safeOrder.promo_code ? `
                <div style="margin-top: 15px; padding: 15px; background: #dcfce7; border-radius: 8px; text-align: center;">
                    <div style="color: var(--success); font-weight: 600; font-size: 16px;">
                        <i class="fas fa-tags"></i> Économie réalisée avec le code ${safeOrder.promo_code}
                    </div>
                    <div style="color: var(--success); font-size: 24px; font-weight: 700; margin-top: 5px;">
                        ${safeToFixed(safeOrder.promo_discount_amount)}€
                    </div>
                </div>
                ` : ''}
            </div>
        </div>
        
        <!-- Actions avec orderId SÉCURISÉ -->
        <div style="margin-top: 30px; padding-top: 20px; border-top: 2px solid var(--border);">
            <div style="display: flex; gap: 12px; justify-content: center; flex-wrap: wrap;">
                <button onclick="editOrderDirect('${finalOrderId}')" 
                        data-order-id="${finalOrderId}"
                        style="padding: 12px 20px; background: var(--warning); color: white; border: none; border-radius: 8px; cursor: pointer; font-weight: 500; transition: var(--transition);">
                    <i class="fas fa-edit"></i> Modifier cette commande
                </button>
                <button onclick="window.print()" 
                        style="padding: 12px 20px; background: var(--primary); color: white; border: none; border-radius: 8px; cursor: pointer; font-weight: 500; transition: var(--transition);">
                    <i class="fas fa-print"></i> Imprimer
                </button>
                <button onclick="closeModal()" 
                        style="padding: 12px 20px; background: var(--gray-medium); color: white; border: none; border-radius: 8px; cursor: pointer; font-weight: 500; transition: var(--transition);">
                    <i class="fas fa-times"></i> Fermer
                </button>
            </div>
        </div>
    `;

    document.getElementById('modalBody').innerHTML = modalContent;
}

// ✅ FONCTION EDIT ORDER DIRECTE AVEC LOG COMPLET
function editOrderDirect(orderId) {
    console.log(`🎯 editOrderDirect appelé avec orderId: "${orderId}"`);
    editOrder(orderId);
}

// ✅ FONCTION EDIT ORDER ULTRA-SIMPLIFIÉE POUR DEBUG
// ✅ FONCTION EDIT ORDER COMPLÈTE ET CORRIGÉE
// ✅ FONCTION EDIT ORDER COMPLÈTE - Avec tracking pré-rempli et form complet
async function editOrder(orderId) {
    try {
        console.log(`🚀 EditOrder démarré avec orderId: "${orderId}"`);
        
        if (!orderId || orderId === 'undefined' || orderId === 'null') {
            console.error('❌ orderId complètement invalide');
            showToast('Erreur: ID de commande invalide', 'error');
            return;
        }

        const cleanOrderId = String(orderId).trim();
        console.log(`✅ orderId nettoyé: "${cleanOrderId}"`);
        
        // ✅ RÉCUPÉRER LES DONNÉES ACTUELLES DE LA COMMANDE
        showLoading();
        const response = await fetch(`/admin/commandes/${cleanOrderId}/details`);
        const data = await response.json();
        
        if (!response.ok || !data.success) {
            throw new Error(data.message || 'Erreur lors de la récupération des données');
        }
        
        const currentOrder = data.order;
        const currentStatus = currentOrder.status || 'waiting';
        const currentTracking = currentOrder.tracking_number || ''; // ✅ RÉCUPÉRER LE TRACKING ACTUEL
        const currentNotes = currentOrder.internal_notes || currentOrder.notes || '';
        
        console.log(`📊 Données actuelles:`, { 
            currentStatus, 
            currentTracking: `"${currentTracking}"`, 
            currentNotes: `"${currentNotes}"`,
            customerEmail: currentOrder.email
        });
        
        hideLoading();

        // Status options avec icônes
        const statusOptions = [
            { value: 'waiting', label: '⏳ En attente', color: '#f59e0b' },
            { value: 'preparing', label: '🔧 En préparation', color: '#3b82f6' },
            { value: 'shipped', label: '📦 Expédiée', color: '#10b981' },
            { value: 'delivered', label: '✅ Livrée', color: '#059669' },
            { value: 'cancelled', label: '❌ Annulée', color: '#ef4444' }
        ];

        let optionsHtml = statusOptions.map(option => {
            const selected = option.value === currentStatus ? 'selected' : '';
            return `<option value="${option.value}" ${selected} data-color="${option.color}">${option.label}</option>`;
        }).join('');

        const formHtml = `
            <div style="padding: 25px; max-height: 80vh; overflow-y: auto;">
                <h3 style="margin-bottom: 25px; color: var(--primary-dark); display: flex; align-items: center; gap: 10px;">
                    <i class="fas fa-edit" style="color: var(--warning);"></i> 
                    Modifier la commande 
                    <span style="font-family: monospace; background: #f3f4f6; padding: 4px 8px; border-radius: 4px; font-size: 14px;">#${cleanOrderId}</span>
                </h3>
                
                <!-- Info client -->
                <div style="background: linear-gradient(135deg, #f0f9ff 0%, #e0f2fe 100%); border: 1px solid #0ea5e9; border-radius: 8px; padding: 15px; margin-bottom: 20px;">
                    <div style="display: flex; align-items: center; gap: 10px; margin-bottom: 8px;">
                        <i class="fas fa-user" style="color: #0ea5e9; font-size: 16px;"></i>
                        <strong style="color: #0c4a6e;">Client: ${currentOrder.customer_name || 'N/A'}</strong>
                    </div>
                    <div style="color: #0c4a6e; font-size: 14px;">
                        📧 Email: ${currentOrder.email || 'Non renseigné'}<br>
                        💰 Total: ${safeToFixed(currentOrder.total)}€
                    </div>
                </div>
                
                <!-- Info notifications -->
                <div style="background: linear-gradient(135deg, #dbeafe 0%, #bfdbfe 100%); border: 1px solid #3b82f6; border-radius: 8px; padding: 15px; margin-bottom: 20px;">
                    <div style="display: flex; align-items: center; gap: 10px; margin-bottom: 8px;">
                        <i class="fas fa-info-circle" style="color: #3b82f6; font-size: 18px;"></i>
                        <strong style="color: #1e40af;">Notifications automatiques activées</strong>
                    </div>
                    <div style="color: #1e3a8a; font-size: 14px; line-height: 1.5;">
                        • Le client recevra un email automatique selon le nouveau statut<br>
                        • L'historique des modifications sera enregistré<br>
                        • Le numéro de suivi sera inclus dans les notifications
                    </div>
                </div>
                
                <form id="editOrderForm">
                    <!-- ✅ STOCKAGE SÉCURISÉ DE L'orderId -->
                    <input type="hidden" id="finalOrderId" value="${cleanOrderId}">
                    
                    <!-- Statut -->
                    <div style="margin-bottom: 20px;">
                        <label style="display: block; font-weight: 600; margin-bottom: 8px; color: var(--dark);">
                            <i class="fas fa-tasks" style="color: var(--info); margin-right: 6px;"></i> 
                            Statut de la commande :
                        </label>
                        <select id="orderStatus" required style="width: 100%; padding: 12px; border: 2px solid #e2e8f0; border-radius: 8px; font-size: 14px; background: white; cursor: pointer;">
                            ${optionsHtml}
                        </select>
                        <small style="color: #6b7280; display: block; margin-top: 5px; font-style: italic;">
                            <i class="fas fa-envelope" style="margin-right: 4px;"></i>
                            Un email personnalisé sera envoyé selon le statut choisi
                        </small>
                    </div>
                    
                    <!-- Numéro de suivi -->
                    <div style="margin-bottom: 20px;">
                        <label style="display: block; font-weight: 600; margin-bottom: 8px; color: var(--dark);">
                            <i class="fas fa-truck" style="color: var(--success); margin-right: 6px;"></i> 
                            Numéro de suivi :
                        </label>
                        <input type="text" 
                               id="trackingNumber" 
                               value="${currentTracking}"
                               placeholder="Ex: FR123456789, LP123456789FR"
                               style="width: 100%; padding: 12px; border: 2px solid #e2e8f0; border-radius: 8px; font-family: 'Courier New', monospace; font-size: 14px; background: #f8fafc;">
                        <small style="color: #6b7280; display: block; margin-top: 5px;">
                            <i class="fas fa-save" style="margin-right: 4px;"></i>
                            Sera sauvegardé dans la commande et inclus dans l'email client
                        </small>
                    </div>
                    
                    <!-- Notes internes -->
                    <div style="margin-bottom: 25px;">
                        <label style="display: block; font-weight: 600; margin-bottom: 8px; color: var(--dark);">
                            <i class="fas fa-sticky-note" style="color: var(--warning); margin-right: 6px;"></i> 
                            Notes internes :
                        </label>
                        <textarea id="orderNotes" 
                                  rows="4" 
                                  placeholder="Notes pour l'équipe (préparation, particularités, remarques...)"
                                  style="width: 100%; padding: 12px; border: 2px solid #e2e8f0; border-radius: 8px; resize: vertical; font-size: 14px; line-height: 1.5; background: #f8fafc;">${currentNotes}</textarea>
                        <small style="color: #6b7280; display: block; margin-top: 5px;">
                            <i class="fas fa-eye-slash" style="margin-right: 4px;"></i>
                            Ces notes ne sont visibles que par l'équipe administrative
                        </small>
                    </div>
                    
                    <!-- Aperçu des modifications -->
                    <div id="modificationPreview" style="background: #f9fafb; border: 1px solid #e5e7eb; border-radius: 8px; padding: 15px; margin-bottom: 20px; display: none;">
                        <h4 style="margin: 0 0 10px 0; color: var(--dark); font-size: 14px;">
                            <i class="fas fa-eye" style="color: var(--info); margin-right: 6px;"></i>
                            Aperçu des modifications :
                        </h4>
                        <div id="previewContent" style="font-size: 13px; color: #4b5563;"></div>
                    </div>
                    
                    <!-- Boutons d'action -->
                    <div style="display: flex; gap: 12px; justify-content: center; flex-wrap: wrap; padding-top: 20px; border-top: 1px solid #e5e7eb;">
                        <button type="button" 
                                onclick="closeModal()" 
                                style="padding: 12px 24px; background: #6b7280; color: white; border: none; border-radius: 8px; cursor: pointer; font-size: 14px; font-weight: 500; transition: all 0.2s ease;">
                            <i class="fas fa-times" style="margin-right: 6px;"></i>
                            Annuler
                        </button>
                        <button type="submit" 
                                id="saveOrderBtn" 
                                style="padding: 12px 24px; background: linear-gradient(135deg, #d89ab3 0%, #c084a1 100%); color: white; border: none; border-radius: 8px; cursor: pointer; font-size: 14px; font-weight: 500; transition: all 0.2s ease; box-shadow: 0 2px 4px rgba(216, 154, 179, 0.3);">
                            <i class="fas fa-save" style="margin-right: 6px;"></i>
                            Enregistrer et notifier
                        </button>
                    </div>
                </form>
            </div>
        `;

        document.getElementById('modalTitle').innerHTML = `<i class="fas fa-edit"></i> Modifier la commande ${currentOrder.numero_commande || '#' + cleanOrderId}`;
        document.getElementById('modalBody').innerHTML = formHtml;
        showModal();

        // ✅ AJOUTER LES EVENT LISTENERS POUR L'APERÇU
        const statusSelect = document.getElementById('orderStatus');
        const trackingInput = document.getElementById('trackingNumber');
        const notesTextarea = document.getElementById('orderNotes');
        const previewDiv = document.getElementById('modificationPreview');
        const previewContent = document.getElementById('previewContent');

        function updatePreview() {
            const changes = [];
            
            if (statusSelect.value !== currentStatus) {
                const newOption = statusSelect.options[statusSelect.selectedIndex];
                changes.push(`<span style="color: #059669;"><i class="fas fa-arrow-right"></i> Statut: ${currentStatus} → ${newOption.text}</span>`);
            }
            
            if (trackingInput.value.trim() !== currentTracking) {
                const newTracking = trackingInput.value.trim();
                if (newTracking) {
                    changes.push(`<span style="color: #3b82f6;"><i class="fas fa-truck"></i> Tracking: ${newTracking}</span>`);
                } else {
                    changes.push(`<span style="color: #ef4444;"><i class="fas fa-trash"></i> Tracking supprimé</span>`);
                }
            }
            
            if (notesTextarea.value.trim() !== currentNotes) {
                changes.push(`<span style="color: #f59e0b;"><i class="fas fa-sticky-note"></i> Notes mises à jour</span>`);
            }
            
            if (changes.length > 0) {
                previewContent.innerHTML = changes.join('<br>');
                previewDiv.style.display = 'block';
            } else {
                previewDiv.style.display = 'none';
            }
        }

        // Écouter les changements
        statusSelect.addEventListener('change', updatePreview);
        trackingInput.addEventListener('input', updatePreview);
        notesTextarea.addEventListener('input', updatePreview);

        // ✅ GESTIONNAIRE DE FORMULAIRE
        document.getElementById('editOrderForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const formOrderId = document.getElementById('finalOrderId').value;
            const newStatus = document.getElementById('orderStatus').value;
            const trackingNumber = document.getElementById('trackingNumber').value.trim();
            const notes = document.getElementById('orderNotes').value.trim();
            
            console.log('🔥 SOUMISSION FORMULAIRE:', {
                formOrderId, newStatus, trackingNumber, notes
            });
            
            if (!formOrderId) {
                console.error('❌ formOrderId est vide !');
                showToast('Erreur: ID de commande vide !', 'error');
                return;
            }
            
            if (!newStatus) {
                showToast('Veuillez sélectionner un statut', 'warning');
                return;
            }

            const saveBtn = document.getElementById('saveOrderBtn');
            const originalText = saveBtn.innerHTML;
            
            try {
                saveBtn.disabled = true;
                saveBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Enregistrement...';
                
                const payload = {
                    status: newStatus,
                    tracking_number: trackingNumber || null,
                    notes: notes || null
                };
                
                console.log('🚀 PAYLOAD:', JSON.stringify(payload, null, 2));
                
                showLoading();

                const response = await fetch(`/admin/commandes/${formOrderId}`, {
                    method: 'PUT',
                    headers: { 
                        'Accept': 'application/json', 
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                    body: JSON.stringify(payload)
                });

                console.log('📡 Réponse reçue, status:', response.status);

                const data = await response.json();
                console.log('📊 Data reçue:', data);

                if (!response.ok) {
                    throw new Error(data.message || `Erreur HTTP ${response.status}`);
                }

                if (data.success) {
                    showToast('✅ Commande mise à jour avec succès !', 'success');
                    
                    // ✅ AFFICHER INFO EMAIL
                    if (data.data?.emailSent) {
                        setTimeout(() => {
                            showToast('📧 Email de notification envoyé au client !', 'info');
                        }, 1000);
                    } else if (data.data?.statusChanged && !data.data?.emailSent) {
                        setTimeout(() => {
                            showToast('⚠️ Statut mis à jour mais email non envoyé', 'warning');
                        }, 1500);
                    }
                    
                    closeModal();
                    
                    // ✅ ACTUALISATION COMPLÈTE APRÈS DÉLAI
                    setTimeout(() => {
                        showToast('🔄 Actualisation des données...', 'info');
                        window.location.reload();
                    }, 2500);
                } else {
                    throw new Error(data.message || 'Erreur lors de la modification');
                }
                
            } catch (error) {
                console.error('❌ Erreur modification:', error);
                showToast(`Erreur: ${error.message}`, 'error');
            } finally {
                saveBtn.disabled = false;
                saveBtn.innerHTML = originalText;
                hideLoading();
            }
        });

    } catch (error) {
        console.error('❌ Erreur dans editOrder:', error);
        showToast('Erreur lors de l\'ouverture du formulaire', 'error');
        hideLoading();
    }
}

// ✅ MISE À JOUR AFFICHAGE AVEC NOUVEAU TRACKING NUMBER ET STATUT
function updateOrderDisplayAfterEdit(orderId, newStatus, newTrackingNumber) {
    try {
        console.log(`✅ Mise à jour affichage pour commande ${orderId}`, {
            newStatus,
            newTrackingNumber
        });
        
        // Mettre à jour tableau desktop
        const tableRow = document.querySelector(`tr[data-order-id="${orderId}"]`);
        if (tableRow) {
            // ✅ METTRE À JOUR LE STATUT
            const statusCell = tableRow.querySelector('.status');
            if (statusCell) {
                statusCell.className = `status ${getStatusClass(newStatus)}`;
                statusCell.innerHTML = `<i class="fas fa-circle" style="font-size: 0.5rem;"></i> ${translateStatus(newStatus)}`;
            }
            
            // ✅ METTRE À JOUR data-status
            tableRow.dataset.status = newStatus;
            
            // ✅ METTRE À JOUR LE TRACKING NUMBER
            if (newTrackingNumber && newTrackingNumber.trim()) {
                const orderNumberCell = tableRow.querySelector('.order-number').parentElement;
                
                // Supprimer l'ancien tracking
                const oldTracking = orderNumberCell.querySelector('small');
                if (oldTracking) {
                    oldTracking.remove();
                }
                
                // Ajouter le nouveau tracking
                const newTrackingElement = document.createElement('small');
                newTrackingElement.style.color = 'var(--gray-medium)';
                newTrackingElement.innerHTML = `📦 ${newTrackingNumber}`;
                orderNumberCell.appendChild(newTrackingElement);
            }
        }
        
        // Mettre à jour carte mobile
        const mobileCard = document.querySelector(`.order-card[data-order-id="${orderId}"]`);
        if (mobileCard) {
            const statusElement = mobileCard.querySelector('.status');
            if (statusElement) {
                statusElement.className = `status ${getStatusClass(newStatus)}`;
                statusElement.textContent = translateStatus(newStatus);
            }
            mobileCard.dataset.status = newStatus;
        }
        
        console.log(`✅ Affichage mis à jour - Statut: ${newStatus}, Tracking: ${newTrackingNumber}`);
    } catch (error) {
        console.error('❌ Erreur mise à jour affichage:', error);
    }
}
// Fonctions utilitaires et UI
function handleSearch(e) { config.filters.search = e.target.value.toLowerCase(); applyFilters(); }

function applyFilters() {
    // Implementation simplifiée des filtres
    console.log('Filtres appliqués');
}

function resetFilters() {
    ['searchInput', 'statusFilter', 'promoFilter', 'dateFilter', 'paymentFilter'].forEach(id => {
        const element = document.getElementById(id);
        if (element) element.value = '';
    });
    showToast('Filtres réinitialisés', 'info');
}

function exportData() {
    window.open('/admin/commandes/export', '_blank');
}

function refreshData() { 
    showLoading(); 
    setTimeout(() => window.location.reload(), 1000); 
}

function toggleSidebar() {
    const sidebar = document.querySelector('.sidebar');
    const overlay = document.querySelector('.sidebar-overlay');
    sidebar?.classList.toggle('open');
    overlay?.classList.toggle('show');
}

function closeSidebar() {
    const sidebar = document.querySelector('.sidebar');
    const overlay = document.querySelector('.sidebar-overlay');
    sidebar?.classList.remove('open');
    overlay?.classList.remove('show');
}

function showModal() {
    const modal = document.getElementById('orderModal');
    if (modal) {
        modal.style.display = 'flex';
        document.body.style.overflow = 'hidden';
    }
}

function closeModal() {
    const modal = document.getElementById('orderModal');
    if (modal) {
        modal.style.display = 'none';
        document.body.style.overflow = 'auto';
    }
}

function showToast(message, type = 'success') {
    const toast = document.getElementById('toast');
    const toastMessage = document.getElementById('toastMessage');
    
    if (toast && toastMessage) {
        toastMessage.textContent = message;
        toast.className = `toast ${type}`;
        toast.classList.add('show');
        setTimeout(() => toast.classList.remove('show'), 3000);
    } else {
        // Fallback si le toast n'existe pas
        alert(message);
    }
}

function showLoading() { 
    const loading = document.getElementById('loadingOverlay');
    if (loading) loading.style.display = 'flex';
}

function hideLoading() { 
    const loading = document.getElementById('loadingOverlay');
    if (loading) loading.style.display = 'none';
}

function debounce(func, wait) {
    let timeout;
    return function executedFunction(...args) {
        const later = () => { clearTimeout(timeout); func(...args); };
        clearTimeout(timeout);
        timeout = setTimeout(later, wait);
    };
}

// ✅ EXPORT GLOBAL DES FONCTIONS
window.viewOrderDetails = viewOrderDetails;
window.editOrder = editOrder;
window.editOrderDirect = editOrderDirect;
window.showModal = showModal;
window.closeModal = closeModal;
window.showLoading = showLoading;
window.hideLoading = hideLoading;
window.showToast = showToast;
window.exportData = exportData;
window.refreshData = refreshData;
window.resetFilters = resetFilters;
window.toggleSidebar = toggleSidebar;
window.closeSidebar = closeSidebar;

console.log('✅ Script Admin Commandes chargé - Solution directe orderId');
</script>
</body>
</html>
