<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %> - CrystosJewel</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" rel="stylesheet">
    <!-- Cropper.js CSS -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.6.1/cropper.min.css" rel="stylesheet">
 
    <style>

        /* ========================================== */
/* CSS COMPLET POUR LA GESTION DES CATÉGORIES */
/* ========================================== */

:root {
    --rose-gold: #b76e79;
    --rose-gold-light: #e8c2c8;
    --rose-gold-dark: #7d4b53;
    --cream: #fff8f0;
    --dark-text: #3a3a3a;
    --light-gray: #f5f5f5;
    --box-shadow: 0 8px 20px rgba(183, 110, 121, 0.15);
}

/* ========================================== */
/* BASE STYLES */
/* ========================================== */

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Inter', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    margin: 0;
    padding: 20px;
    background: linear-gradient(135deg, var(--cream) 0%, var(--rose-gold-light) 100%);
    min-height: 100vh;
    color: var(--dark-text);
}

/* ========================================== */
/* CONTAINER PRINCIPAL */
/* ========================================== */

.container {
    max-width: 1400px;
    margin: 0 auto;
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(10px);
    padding: 40px;
    border-radius: 20px;
    box-shadow: var(--box-shadow);
    border: 1px solid rgba(183, 110, 121, 0.1);
}

/* ========================================== */
/* HEADER */
/* ========================================== */

.header {
    text-align: center;
    margin-bottom: 50px;
    padding-bottom: 30px;
    position: relative;
}

.header::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 50%;
    transform: translateX(-50%);
    width: 100px;
    height: 4px;
    background: linear-gradient(45deg, var(--rose-gold), var(--rose-gold-dark));
    border-radius: 2px;
}

.header h1 {
    color: var(--dark-text);
    margin: 0 0 15px 0;
    font-size: 2.5rem;
    font-weight: 700;
    background: linear-gradient(45deg, var(--rose-gold), var(--rose-gold-dark));
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
}

.header p {
    color: var(--dark-text);
    opacity: 0.7;
    margin: 0;
    font-size: 1.1rem;
    font-weight: 400;
}

.back-link {
    display: inline-flex;
    align-items: center;
    gap: 8px;
    margin-bottom: 30px;
    color: var(--rose-gold);
    text-decoration: none;
    font-weight: 600;
    padding: 12px 20px;
    border-radius: 25px;
    background: rgba(183, 110, 121, 0.1);
    transition: all 0.3s ease;
    border: 2px solid rgba(183, 110, 121, 0.2);
}

.back-link:hover {
    color: white;
    background: var(--rose-gold);
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(183, 110, 121, 0.3);
}

/* ========================================== */
/* BARRE DE STATISTIQUES */
/* ========================================== */

.stats-bar {
    display: flex;
    justify-content: center;
    gap: 30px;
    margin-bottom: 40px;
    padding: 20px;
    background: linear-gradient(135deg, var(--cream), var(--light-gray));
    border-radius: 15px;
    border: 1px solid rgba(183, 110, 121, 0.1);
    box-shadow: var(--box-shadow);
}

.stat-item {
    text-align: center;
    padding: 10px 20px;
}

.stat-number {
    font-size: 2rem;
    font-weight: 700;
    color: var(--rose-gold);
    display: block;
}

.stat-label {
    font-size: 0.9rem;
    color: var(--dark-text);
    opacity: 0.7;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    margin-top: 5px;
}

/* ========================================== */
/* GRILLE DES CATÉGORIES */
/* ========================================== */

.categories-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
    gap: 30px;
}

.category-card {
    background: white;
    border-radius: 20px;
    padding: 25px;
    transition: all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    box-shadow: var(--box-shadow);
    border: 1px solid rgba(183, 110, 121, 0.1);
    position: relative;
    overflow: hidden;
    animation: fadeInUp 0.6s ease forwards;
}

.category-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 4px;
    background: linear-gradient(45deg, var(--rose-gold), var(--rose-gold-dark));
}

.category-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 20px 40px rgba(183, 110, 121, 0.2);
}

.category-card:nth-child(even) {
    animation-delay: 0.1s;
}

.category-card:nth-child(3n) {
    animation-delay: 0.2s;
}

/* ========================================== */
/* NOM DE CATÉGORIE */
/* ========================================== */

.category-name {
    font-size: 1.4rem;
    font-weight: 700;
    color: var(--dark-text);
    margin-bottom: 20px;
    text-align: center;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 10px;
}

.category-name::before {
    content: '💎';
    font-size: 1.2rem;
}

/* ========================================== */
/* PRÉVISUALISATION D'IMAGE */
/* ========================================== */

.image-preview {
    width: 100%;
    height: 220px;
    border: 3px dashed var(--rose-gold-light);
    border-radius: 15px;
    display: flex;
    align-items: center;
    justify-content: center;
    margin-bottom: 20px;
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    position: relative;
    overflow: hidden;
    transition: all 0.3s ease;
    cursor: pointer;
}

.image-preview.has-image {
    border: 3px solid var(--rose-gold);
    box-shadow: 0 5px 20px rgba(183, 110, 121, 0.2);
}

.image-preview.drag-over {
    border-color: var(--rose-gold-dark);
    background-color: rgba(183, 110, 121, 0.05);
    transform: scale(1.02);
}

.image-preview .placeholder {
    color: var(--rose-gold);
    text-align: center;
    transition: all 0.3s ease;
}

.image-preview:hover .placeholder {
    color: var(--rose-gold-dark);
    transform: scale(1.05);
}

.image-preview .placeholder i {
    font-size: 3.5rem;
    margin-bottom: 15px;
    display: block;
}

.image-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(183, 110, 121, 0.8);
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0;
    transition: opacity 0.3s ease;
    border-radius: 12px;
}

.image-preview:hover .image-overlay {
    opacity: 1;
}

.overlay-text {
    color: white;
    text-align: center;
    font-weight: 600;
}

/* ========================================== */
/* SECTION D'UPLOAD */
/* ========================================== */

.upload-section {
    display: flex;
    gap: 12px;
    align-items: center;
    margin-bottom: 15px;
}

.file-input-wrapper {
    position: relative;
    flex: 1;
}

.file-input {
    display: none;
}

.file-label {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 8px;
    padding: 12px 20px;
    background: linear-gradient(135deg, var(--rose-gold), var(--rose-gold-dark));
    color: white;
    border-radius: 10px;
    cursor: pointer;
    text-align: center;
    transition: all 0.3s ease;
    font-weight: 600;
    border: 2px solid transparent;
}

.file-label:hover {
    background: linear-gradient(135deg, var(--rose-gold-dark), #6a3d44);
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(183, 110, 121, 0.3);
}

/* ========================================== */
/* BOUTONS D'ACTION */
/* ========================================== */

.upload-btn, .crop-btn {
    padding: 12px 24px;
    color: white;
    border: none;
    border-radius: 10px;
    cursor: pointer;
    font-weight: 700;
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    gap: 8px;
    min-width: 120px;
    justify-content: center;
}

.upload-btn {
    background: linear-gradient(135deg, #4a9d5f, #3e8350);
}

.upload-btn:hover:not(:disabled) {
    background: linear-gradient(135deg, #3e8350, #2d5f3a);
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(74, 157, 95, 0.3);
}

.crop-btn {
    background: linear-gradient(135deg, #d4af37, #b8941f);
}

.crop-btn:hover:not(:disabled) {
    background: linear-gradient(135deg, #b8941f, #9a7a1a);
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(212, 175, 55, 0.3);
}

.upload-btn:disabled, .crop-btn:disabled {
    background: linear-gradient(135deg, #95a5a6, #7f8c8d);
    cursor: not-allowed;
    transform: none;
    box-shadow: none;
}

.delete-btn {
    padding: 10px 15px;
    background: linear-gradient(135deg, #c0392b, #a93226);
    color: white;
    border: none;
    border-radius: 10px;
    cursor: pointer;
    font-size: 0.9rem;
    width: 100%;
    font-weight: 600;
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 8px;
}

.delete-btn:hover {
    background: linear-gradient(135deg, #a93226, #8b281e);
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(192, 57, 43, 0.3);
}

.action-buttons {
    display: flex;
    gap: 10px;
    margin-top: 15px;
}

.btn-secondary {
    flex: 1;
    padding: 8px 12px;
    background: linear-gradient(135deg, var(--rose-gold-light), var(--rose-gold));
    color: var(--dark-text);
    border: none;
    border-radius: 8px;
    cursor: pointer;
    font-size: 0.8rem;
    font-weight: 600;
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 5px;
}

.btn-secondary:hover {
    background: linear-gradient(135deg, var(--rose-gold), var(--rose-gold-dark));
    color: white;
    transform: translateY(-1px);
}

/* ========================================== */
/* MODAL DE ROGNAGE COMPACTE */
/* ========================================== */

.crop-modal {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.95);
    z-index: 3000;
    backdrop-filter: blur(15px);
    overflow-y: auto;
    padding: 15px;
    box-sizing: border-box;
}

.crop-modal.show {
    display: flex;
    align-items: flex-start;
    justify-content: center;
    animation: fadeIn 0.3s ease;
    padding-top: 20px;
}

.crop-container {
    background: var(--cream);
    border-radius: 20px;
    padding: 25px;
    max-width: 90vw;
    max-height: 85vh;
    width: 900px;
    position: relative;
    box-shadow: 0 25px 50px rgba(0, 0, 0, 0.5);
    border: 2px solid var(--rose-gold);
    overflow: hidden;
    margin: auto;
}

.crop-header {
    text-align: center;
    margin-bottom: 20px;
    padding-bottom: 15px;
    border-bottom: 2px solid var(--rose-gold-light);
    position: relative;
}

.crop-header h3 {
    color: var(--dark-text);
    margin: 0 0 8px 0;
    font-size: 1.6rem;
    font-weight: 700;
    background: linear-gradient(45deg, var(--rose-gold), var(--rose-gold-dark));
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
}

.crop-header p {
    color: var(--dark-text);
    opacity: 0.7;
    margin: 0;
    font-size: 0.9rem;
}

.crop-close-btn {
    position: absolute;
    top: -8px;
    right: -8px;
    background: linear-gradient(135deg, #e74c3c, #c0392b);
    color: white;
    border: none;
    border-radius: 50%;
    width: 35px;
    height: 35px;
    cursor: pointer;
    font-size: 16px;
    font-weight: bold;
    transition: all 0.3s ease;
    box-shadow: 0 4px 15px rgba(231, 76, 60, 0.3);
    display: flex;
    align-items: center;
    justify-content: center;
}

.crop-close-btn:hover {
    background: linear-gradient(135deg, #c0392b, #a93226);
    transform: scale(1.1);
}

.crop-main-content {
    display: flex;
    gap: 20px;
    align-items: flex-start;
    max-height: calc(85vh - 160px);
    overflow-y: auto;
}

.crop-image-section {
    flex: 1.8;
    min-width: 0;
}

.crop-image-container {
    background: #000;
    border-radius: 12px;
    overflow: hidden;
    position: relative;
    max-height: 350px;
    border: 2px solid var(--rose-gold);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);
}

.crop-image {
    max-width: 100%;
    max-height: 350px;
    display: block;
}

.crop-controls-section {
    flex: 1;
    min-width: 220px;
    max-height: 100%;
    overflow-y: auto;
}

/* ========================================== */
/* CONTRÔLES DE ROGNAGE */
/* ========================================== */

.crop-presets, .crop-quality, .crop-preview {
    background: white;
    border-radius: 12px;
    padding: 15px;
    margin-bottom: 15px;
    border: 2px solid var(--rose-gold-light);
    box-shadow: var(--box-shadow);
}

.crop-presets h4, .crop-quality h4, .crop-preview h4 {
    color: var(--dark-text);
    margin: 0 0 12px 0;
    font-size: 1rem;
    font-weight: 600;
    display: flex;
    align-items: center;
    gap: 6px;
}

.ratio-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 8px;
}

.aspect-ratio-btn {
    padding: 10px 6px;
    background: var(--light-gray);
    border: 2px solid var(--rose-gold-light);
    border-radius: 8px;
    cursor: pointer;
    font-size: 0.8rem;
    font-weight: 600;
    transition: all 0.3s ease;
    color: var(--dark-text);
    text-align: center;
    position: relative;
    overflow: hidden;
}

.aspect-ratio-btn i {
    display: block;
    font-size: 1rem;
    margin-bottom: 4px;
}

.aspect-ratio-btn.active {
    background: linear-gradient(135deg, var(--rose-gold), var(--rose-gold-dark));
    color: white;
    border-color: var(--rose-gold);
    transform: scale(1.05);
    box-shadow: 0 4px 15px rgba(183, 110, 121, 0.3);
}

.aspect-ratio-btn:hover:not(.active) {
    background: var(--rose-gold-light);
    border-color: var(--rose-gold);
    transform: translateY(-2px);
}

/* ========================================== */
/* CONTRÔLES DE QUALITÉ */
/* ========================================== */

.quality-slider {
    width: 100%;
    margin: 8px 0;
}

.quality-input {
    width: 100%;
    height: 6px;
    border-radius: 3px;
    background: var(--light-gray);
    outline: none;
    -webkit-appearance: none;
    transition: all 0.3s ease;
}

.quality-input::-webkit-slider-thumb {
    -webkit-appearance: none;
    appearance: none;
    width: 16px;
    height: 16px;
    border-radius: 50%;
    background: linear-gradient(135deg, var(--rose-gold), var(--rose-gold-dark));
    cursor: pointer;
    box-shadow: 0 2px 8px rgba(183, 110, 121, 0.4);
    transition: all 0.3s ease;
}

.quality-input::-webkit-slider-thumb:hover {
    transform: scale(1.2);
    box-shadow: 0 4px 15px rgba(183, 110, 121, 0.6);
}

.quality-input::-moz-range-thumb {
    width: 16px;
    height: 16px;
    border-radius: 50%;
    background: linear-gradient(135deg, var(--rose-gold), var(--rose-gold-dark));
    cursor: pointer;
    border: none;
    box-shadow: 0 2px 8px rgba(183, 110, 121, 0.4);
}

.quality-labels {
    display: flex;
    justify-content: space-between;
    font-size: 0.8rem;
    color: var(--dark-text);
    opacity: 0.7;
}

/* ========================================== */
/* APERÇU */
/* ========================================== */

.crop-preview {
    text-align: center;
}

.preview-container {
    width: 120px;
    height: 120px;
    border: 2px solid var(--rose-gold-light);
    border-radius: 8px;
    margin: 0 auto 12px;
    overflow: hidden;
    background: var(--light-gray);
    position: relative;
}

.preview-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: all 0.3s ease;
}

/* ========================================== */
/* ACTIONS DE ROGNAGE */
/* ========================================== */

.crop-actions {
    position: absolute;
    bottom: 15px;
    left: 15px;
    right: 15px;
    display: flex;
    gap: 12px;
    justify-content: center;
    flex-wrap: wrap;
}

.crop-btn-large {
    padding: 12px 20px;
    border: none;
    border-radius: 10px;
    cursor: pointer;
    font-weight: 700;
    font-size: 0.9rem;
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    gap: 8px;
    min-width: 120px;
    justify-content: center;
    position: relative;
    overflow: hidden;
}

.crop-save-btn {
    background: linear-gradient(135deg, #27ae60, #2ecc71);
    color: white;
    box-shadow: 0 4px 15px rgba(46, 204, 113, 0.3);
}

.crop-save-btn:hover {
    background: linear-gradient(135deg, #229954, #27ae60);
    transform: translateY(-2px);
    box-shadow: 0 6px 20px rgba(46, 204, 113, 0.4);
}

.crop-reset-btn {
    background: linear-gradient(135deg, var(--rose-gold), var(--rose-gold-dark));
    color: white;
    box-shadow: 0 4px 15px rgba(183, 110, 121, 0.3);
}

.crop-reset-btn:hover {
    background: linear-gradient(135deg, var(--rose-gold-dark), #6a3d44);
    transform: translateY(-2px);
    box-shadow: 0 6px 20px rgba(183, 110, 121, 0.4);
}

.crop-cancel-btn {
    background: linear-gradient(135deg, #95a5a6, #7f8c8d);
    color: white;
    box-shadow: 0 4px 15px rgba(149, 165, 166, 0.3);
}

.crop-cancel-btn:hover {
    background: linear-gradient(135deg, #7f8c8d, #6c757d);
    transform: translateY(-2px);
    box-shadow: 0 6px 20px rgba(149, 165, 166, 0.4);
}

/* ========================================== */
/* SCROLL CUSTOMISÉ */
/* ========================================== */

.crop-controls-section::-webkit-scrollbar,
.crop-main-content::-webkit-scrollbar {
    width: 6px;
}

.crop-controls-section::-webkit-scrollbar-track,
.crop-main-content::-webkit-scrollbar-track {
    background: var(--light-gray);
    border-radius: 3px;
}

.crop-controls-section::-webkit-scrollbar-thumb,
.crop-main-content::-webkit-scrollbar-thumb {
    background: var(--rose-gold);
    border-radius: 3px;
}

.crop-controls-section::-webkit-scrollbar-thumb:hover,
.crop-main-content::-webkit-scrollbar-thumb:hover {
    background: var(--rose-gold-dark);
}

/* ========================================== */
/* NOTIFICATIONS */
/* ========================================== */

.notification {
    position: fixed;
    top: 30px;
    right: 30px;
    padding: 20px 25px;
    border-radius: 12px;
    color: white;
    font-weight: 600;
    z-index: 1000;
    transform: translateX(120%);
    transition: all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    box-shadow: var(--box-shadow);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.2);
    min-width: 300px;
}

.notification.show {
    transform: translateX(0);
}

.notification.success {
    background: linear-gradient(135deg, #4a9d5f, #3e8350);
}

.notification.error {
    background: linear-gradient(135deg, #c0392b, #a93226);
}

.notification.info {
    background: linear-gradient(135deg, var(--rose-gold), var(--rose-gold-dark));
}

/* ========================================== */
/* INDICATEURS DE CHARGEMENT */
/* ========================================== */

.loading {
    display: none;
    text-align: center;
    color: var(--rose-gold);
    margin: 15px 0;
    padding: 10px;
    background: rgba(183, 110, 121, 0.1);
    border-radius: 8px;
}

.loading i {
    animation: spin 1s linear infinite;
    margin-right: 8px;
}

.progress-bar {
    width: 100%;
    height: 6px;
    background: var(--light-gray);
    border-radius: 3px;
    overflow: hidden;
    margin: 10px 0;
    display: none;
}

.progress-fill {
    height: 100%;
    background: linear-gradient(45deg, var(--rose-gold), var(--rose-gold-dark));
    width: 0%;
    transition: width 0.3s ease;
}

/* ========================================== */
/* OUTILS ADMIN */
/* ========================================== */

.admin-tools {
    position: fixed;
    bottom: 30px;
    right: 30px;
    display: flex;
    flex-direction: column;
    gap: 10px;
    z-index: 100;
}

.admin-btn {
    padding: 12px 15px;
    background: linear-gradient(135deg, var(--rose-gold), var(--rose-gold-dark));
    color: white;
    border: none;
    border-radius: 50px;
    cursor: pointer;
    font-weight: 600;
    transition: all 0.3s ease;
    box-shadow: var(--box-shadow);
    min-width: 50px;
    display: flex;
    align-items: center;
    justify-content: center;
}

.admin-btn:hover {
    background: linear-gradient(135deg, var(--rose-gold-dark), #6a3d44);
    transform: translateY(-3px);
    box-shadow: 0 8px 25px rgba(183, 110, 121, 0.4);
}

/* ========================================== */
/* ANIMATIONS */
/* ========================================== */

@keyframes fadeIn {
    from { 
        opacity: 0; 
        transform: scale(0.95) translateY(-20px); 
    }
    to { 
        opacity: 1; 
        transform: scale(1) translateY(0); 
    }
}

@keyframes fadeInUp {
    from {
        opacity: 0;
        transform: translateY(30px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}

.crop-container {
    animation: fadeIn 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

/* ========================================== */
/* RESPONSIVE DESIGN */
/* ========================================== */

@media (max-width: 1024px) {
    .crop-container {
        width: 95vw;
        max-height: 90vh;
    }
    
    .crop-main-content {
        flex-direction: column;
        max-height: calc(90vh - 140px);
    }
    
    .crop-controls-section {
        min-width: 100%;
        max-height: 200px;
    }
    
    .ratio-grid {
        grid-template-columns: repeat(3, 1fr);
    }
    
    .crop-image-container {
        max-height: 250px;
    }
    
    .crop-image {
        max-height: 250px;
    }
}

@media (max-width: 768px) {
    body {
        padding: 10px;
    }

    .container {
        padding: 20px;
    }

    .categories-grid {
        grid-template-columns: 1fr;
        gap: 20px;
    }
    
    .upload-section {
        flex-direction: column;
    }
    
    .file-input-wrapper {
        width: 100%;
    }

    .stats-bar {
        flex-direction: column;
        gap: 15px;
    }

    .header h1 {
        font-size: 2rem;
    }

    .crop-modal {
        padding: 10px;
    }
    
    .crop-container {
        margin: 0;
        padding: 15px;
        width: 100%;
        max-height: 95vh;
        border-radius: 15px;
    }
    
    .crop-main-content {
        gap: 15px;
        max-height: calc(95vh - 120px);
    }
    
    .crop-actions {
        position: static;
        margin-top: 15px;
        flex-direction: column;
        gap: 8px;
    }
    
    .crop-btn-large {
        width: 100%;
        min-width: auto;
    }
    
    .ratio-grid {
        grid-template-columns: 1fr 1fr;
    }
    
    .crop-image-container {
        max-height: 200px;
    }
    
    .crop-image {
        max-height: 200px;
    }
    
    .preview-container {
        width: 100px;
        height: 100px;
    }

    .admin-tools {
        bottom: 20px;
        right: 20px;
    }
}

@media (max-width: 480px) {
    .categories-grid {
        grid-template-columns: 1fr;
    }

    .category-card {
        padding: 20px;
    }

    .image-preview {
        height: 180px;
    }
    
    .crop-container {
        padding: 12px;
    }
    
    .crop-header h3 {
        font-size: 1.4rem;
    }
    
    .crop-main-content {
        gap: 12px;
    }
    
    .crop-presets, .crop-quality, .crop-preview {
        padding: 12px;
        margin-bottom: 12px;
    }
    
    .aspect-ratio-btn {
        padding: 8px 4px;
        font-size: 0.75rem;
    }
    
    .aspect-ratio-btn i {
        font-size: 0.9rem;
        margin-bottom: 3px;
    }
}

/* ========================================== */
/* STYLES SPÉCIAUX POUR LES EFFETS */
/* ========================================== */

/* Effet de brillance sur les boutons */
.crop-btn-large::before,
.aspect-ratio-btn::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255,255,255,0.3), transparent);
    transition: left 0.6s ease;
}

.crop-btn-large:hover::before,
.aspect-ratio-btn:hover::before {
    left: 100%;
}

/* Effet de pulsation pour les éléments actifs */
.aspect-ratio-btn.active {
    animation: pulse 2s infinite;
}

@keyframes pulse {
    0% {
        box-shadow: 0 4px 15px rgba(183, 110, 121, 0.3);
    }
    50% {
        box-shadow: 0 4px 20px rgba(183, 110, 121, 0.5);
    }
    100% {
        box-shadow: 0 4px 15px rgba(183, 110, 121, 0.3);
    }
}

/* Effet de shimmer pour le placeholder */
.image-preview .placeholder::before {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: linear-gradient(45deg, transparent, rgba(255,255,255,0.1), transparent);
    animation: shimmer 3s infinite;
    pointer-events: none;
}

@keyframes shimmer {
    0% { transform: translateX(-100%) translateY(-100%) rotate(45deg); }
    100% { transform: translateX(100%) translateY(100%) rotate(45deg); }
}

/* ========================================== */
/* ÉTATS DE FOCUS POUR L'ACCESSIBILITÉ */
/* ========================================== */

.file-label:focus,
.upload-btn:focus,
.crop-btn:focus,
.delete-btn:focus,
.btn-secondary:focus,
.aspect-ratio-btn:focus,
.crop-btn-large:focus,
.admin-btn:focus {
    outline: 3px solid var(--rose-gold-light);
    outline-offset: 2px;
}

.quality-input:focus {
    outline: 2px solid var(--rose-gold);
    outline-offset: 2px;
}

/* ========================================== */
/* STYLES POUR LES ÉTATS DISABLED */
/* ========================================== */

.category-card.disabled {
    opacity: 0.6;
    pointer-events: none;
}

.crop-btn-large:disabled {
    background: linear-gradient(135deg, #95a5a6, #7f8c8d) !important;
    cursor: not-allowed !important;
    transform: none !important;
    box-shadow: none !important;
}

/* ========================================== */
/* STYLES POUR LE MODE SOMBRE (OPTIONNEL) */
/* ========================================== */

@media (prefers-color-scheme: dark) {
    :root {
        --dark-text: #e0e0e0;
        --light-gray: #2a2a2a;
        --cream: #1a1a1a;
    }
    
    .container {
        background: rgba(42, 42, 42, 0.95);
    }
    
    .category-card {
        background: #2a2a2a;
    }
    
    .crop-presets, .crop-quality, .crop-preview {
        background: #2a2a2a;
    }
    
    .crop-container {
        background: #1a1a1a;
    }
}

/* ========================================== */
/* STYLES POUR L'IMPRESSION (OPTIONNEL) */
/* ========================================== */

@media print {
    .crop-modal,
    .notification,
    .admin-tools,
    .upload-section,
    .action-buttons {
        display: none !important;
    }
    
    .category-card {
        break-inside: avoid;
        box-shadow: none;
        border: 1px solid #ccc;
    }
    
    .categories-grid {
        grid-template-columns: repeat(2, 1fr);
        gap: 20px;
    }
}

/* ========================================== */
/* STYLES POUR LES ANIMATIONS RÉDUITES */
/* ========================================== */

@media (prefers-reduced-motion: reduce) {
    * {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
    }
    
    .category-card:hover {
        transform: none;
    }
    
    .crop-btn-large:hover,
    .upload-btn:hover,
    .crop-btn:hover {
        transform: none;
    }
}

/* ========================================== */
/* UTILITAIRES */
/* ========================================== */

.sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
}

.hidden {
    display: none !important;
}

.invisible {
    visibility: hidden !important;
}

.text-center {
    text-align: center !important;
}

.text-left {
    text-align: left !important;
}

.text-right {
    text-align: right !important;
}

/* ========================================== */
/* FIN DU CSS */
/* ========================================== */
    </style>

</head>
<body>
    <%- include('partials/navbarre.ejs') %>
    
    <div class="container">
        <a href="/" class="back-link">
            <i class="fas fa-arrow-left"></i>
            Retour à l'accueil
        </a>
        
        <div class="header">
            <h1><i class="fas fa-images"></i> <%= title %></h1>
            <p>Gérez et rognez les images qui s'affichent pour chaque catégorie sur la page d'accueil</p>
        </div>

        <% if (stats) { %>
        <div class="stats-bar">
            <div class="stat-item">
                <span class="stat-number"><%= stats.total || categories.length %></span>
                <div class="stat-label">Total Catégories</div>
            </div>
            <div class="stat-item">
                <span class="stat-number"><%= stats.with_images || categories.filter(c => c.image).length %></span>
                <div class="stat-label">Avec Images</div>
            </div>
            <div class="stat-item">
                <span class="stat-number"><%= stats.without_images || categories.filter(c => !c.image).length %></span>
                <div class="stat-label">Sans Images</div>
            </div>
        </div>
        <% } %>
        
        <div class="categories-grid">
            <% categories.forEach(category => { %>
                <div class="category-card" data-category-id="<%= category.id %>">
                    <div class="category-name"><%= category.name %></div>
                    
                    <div class="image-preview <%= category.image ? 'has-image' : '' %>" 
                         id="preview-<%= category.id %>"
                         ondrop="handleDrop(event, <%= category.id %>)"
                         ondragover="handleDragOver(event)"
                         ondragleave="handleDragLeave(event)"
                         onclick="document.getElementById('file-<%= category.id %>').click()">
                        <% if (category.image) { %>
                            <div style="
                                background-image: url('/images/categories/<%= category.image %>');
                                background-size: cover;
                                background-position: center;
                                width: 100%;
                                height: 100%;
                                border-radius: 12px;
                            "></div>
                            <div class="image-overlay">
                                <div class="overlay-text">
                                    <i class="fas fa-edit"></i><br>
                                    Cliquer pour changer
                                </div>
                            </div>
                        <% } else { %>
                            <div class="placeholder">
                                <i class="fas fa-gem"></i>
                                <div>Glissez une image ici<br>ou cliquez pour choisir</div>
                            </div>
                        <% } %>
                    </div>
                    
                    <div class="progress-bar" id="progress-<%= category.id %>">
                        <div class="progress-fill"></div>
                    </div>
                    
                    <div class="upload-section">
                        <div class="file-input-wrapper">
                            <input type="file" 
                                   class="file-input" 
                                   id="file-<%= category.id %>" 
                                   accept="image/*"
                                   onchange="handleFileSelect(<%= category.id %>, this)">
                            <label for="file-<%= category.id %>" class="file-label">
                                <i class="fas fa-gem"></i>
                                Choisir
                            </label>
                        </div>
                        
                        <button class="crop-btn" 
                                id="crop-<%= category.id %>" 
                                onclick="openCropModal(<%= category.id %>)"
                                disabled>
                            <i class="fas fa-crop-alt"></i>
                            Rogner
                        </button>

                        <button class="upload-btn" 
                                id="upload-<%= category.id %>" 
                                onclick="uploadImage(<%= category.id %>)"
                                disabled>
                            <i class="fas fa-upload"></i>
                            Upload
                        </button>
                    </div>
                    
                    <div class="loading" id="loading-<%= category.id %>">
                        <i class="fas fa-spinner"></i>
                        Traitement en cours...
                    </div>
                    
                    <% if (category.image) { %>
                        <div class="action-buttons">
                            <button class="btn-secondary" onclick="previewImage('<%= category.image %>')">
                                <i class="fas fa-eye"></i>
                                Aperçu
                            </button>
                            <button class="delete-btn" onclick="deleteImage(<%= category.id %>)">
                                <i class="fas fa-trash"></i>
                                Supprimer
                            </button>
                        </div>
                    <% } %>
                </div>
            <% }); %>
        </div>
    </div>

    <div class="admin-tools">
        <button class="admin-btn" onclick="cleanupImages()" title="Nettoyer les images orphelines">
            <i class="fas fa-broom"></i>
        </button>
        <button class="admin-btn" onclick="refreshStats()" title="Actualiser les statistiques">
            <i class="fas fa-sync-alt"></i>
        </button>
        <button class="admin-btn" onclick="exportData()" title="Exporter les données">
            <i class="fas fa-download"></i>
        </button>
    </div>

    <!-- Modal pour l'aperçu des images -->
    <div id="imageModal" style="display: none; position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(58, 58, 58, 0.9); z-index: 2000; align-items: center; justify-content: center;" onclick="closeModal()">
        <div style="max-width: 90%; max-height: 90%; position: relative;">
            <img id="modalImage" style="max-width: 100%; max-height: 100%; border-radius: 10px; box-shadow: var(--box-shadow);">
            <button onclick="closeModal()" style="position: absolute; top: -40px; right: 0; background: var(--rose-gold); border: none; border-radius: 50%; width: 35px; height: 35px; cursor: pointer; color: white; font-size: 18px; box-shadow: var(--box-shadow);">×</button>
        </div>
    </div>

    <!-- Modal pour le rognage -->
    <!-- Modal de rognage amélioré -->
<div id="cropModal" class="crop-modal">
    <div class="crop-container">
        <button class="crop-close-btn" onclick="closeCropModal()">×</button>
        
        <div class="crop-header">
            <h3><i class="fas fa-magic"></i> Rognage Intelligent</h3>
            <p>Ajustez votre image avec des outils professionnels</p>
        </div>
        
        <div class="crop-main-content">
            <div class="crop-image-section">
                <div class="crop-image-container">
                    <img id="cropImage" class="crop-image" alt="Image à rogner">
                </div>
            </div>
            
            <div class="crop-controls-section">
                <div class="crop-presets">
                    <h4><i class="fas fa-crop-alt"></i> Formats prédéfinis</h4>
                    <div class="ratio-grid">
                        <button class="aspect-ratio-btn active" data-ratio="free">
                            <i class="fas fa-expand-arrows-alt"></i>
                            Libre
                        </button>
                        <button class="aspect-ratio-btn" data-ratio="1">
                            <i class="fas fa-square"></i>
                            Carré
                        </button>
                        <button class="aspect-ratio-btn" data-ratio="1.33">
                            <i class="fas fa-tv"></i>
                            4:3
                        </button>
                        <button class="aspect-ratio-btn" data-ratio="1.78">
                            <i class="fas fa-desktop"></i>
                            16:9
                        </button>
                        <button class="aspect-ratio-btn" data-ratio="0.75">
                            <i class="fas fa-mobile-alt"></i>
                            Portrait
                        </button>
                        <button class="aspect-ratio-btn" data-ratio="2.35">
                            <i class="fas fa-film"></i>
                            Cinéma
                        </button>
                    </div>
                </div>
                
                <div class="crop-quality">
                    <h4><i class="fas fa-sliders-h"></i> Qualité d'export</h4>
                    <div class="quality-slider">
                        <input type="range" 
                               id="qualitySlider" 
                               class="quality-input" 
                               min="0.1" 
                               max="1" 
                               step="0.1" 
                               value="0.9"
                               oninput="updateQualityDisplay(this.value)">
                    </div>
                    <div class="quality-labels">
                        <span>Rapide</span>
                        <span id="qualityValue">90%</span>
                        <span>HD</span>
                    </div>
                </div>
                
                <div class="crop-preview">
                    <h4><i class="fas fa-eye"></i> Aperçu</h4>
                    <div class="preview-container">
                        <canvas id="previewCanvas" class="preview-image"></canvas>
                    </div>
                    <small style="color: var(--dark-text); opacity: 0.7;">
                        Aperçu en temps réel
                    </small>
                </div>
            </div>
        </div>
        
        <div class="crop-actions">
            <button class="crop-btn-large crop-reset-btn" onclick="resetCrop()">
                <i class="fas fa-undo"></i>
                Réinitialiser
            </button>
            <button class="crop-btn-large crop-cancel-btn" onclick="closeCropModal()">
                <i class="fas fa-times"></i>
                Annuler
            </button>
            <button class="crop-btn-large crop-save-btn" onclick="applyCrop()">
                <i class="fas fa-check"></i>
                Appliquer et Uploader
            </button>
        </div>
    </div>
</div>

    
    <div id="notification" class="notification"></div>

    <!-- Cropper.js JavaScript -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.6.1/cropper.min.js"></script>
    
  // ✅ SCRIPT JAVASCRIPT CORRIGÉ

<script>
    // Variables globales
    let selectedFiles = {};
    let croppers = {};
    let currentCropCategoryId = null;
    let previewCanvas, previewCtx; // Variables pour l'aperçu

    // ==========================================
    // FONCTIONS DRAG & DROP
    // ==========================================
    
    function handleDragOver(e) {
        e.preventDefault();
        e.currentTarget.classList.add('drag-over');
    }

    function handleDragLeave(e) {
        e.currentTarget.classList.remove('drag-over');
    }

    function handleDrop(e, categoryId) {
        e.preventDefault();
        e.currentTarget.classList.remove('drag-over');
        
        const files = e.dataTransfer.files;
        if (files.length > 0) {
            const file = files[0];
            if (file.type.startsWith('image/')) {
                const input = document.getElementById(`file-${categoryId}`);
                const dataTransfer = new DataTransfer();
                dataTransfer.items.add(file);
                input.files = dataTransfer.files;
                handleFileSelect(categoryId, input);
            } else {
                showNotification('Veuillez sélectionner un fichier image valide', 'error');
            }
        }
    }
    
    // ==========================================
    // SÉLECTION DE FICHIERS
    // ==========================================
    
    function handleFileSelect(categoryId, input) {
        const file = input.files[0];
        const uploadBtn = document.getElementById(`upload-${categoryId}`);
        const cropBtn = document.getElementById(`crop-${categoryId}`);
        const preview = document.getElementById(`preview-${categoryId}`);
        
        if (file) {
            // Validation de la taille
            if (file.size > 10 * 1024 * 1024) {
                showNotification('La taille du fichier ne doit pas dépasser 10MB', 'error');
                input.value = '';
                return;
            }

            selectedFiles[categoryId] = file;
            uploadBtn.disabled = false;
            cropBtn.disabled = false;
            
            // Prévisualisation
            const reader = new FileReader();
            reader.onload = function(e) {
                preview.innerHTML = `
                    <div style="
                        background-image: url('${e.target.result}');
                        background-size: cover;
                        background-position: center;
                        width: 100%;
                        height: 100%;
                        border-radius: 12px;
                    "></div>
                    <div class="image-overlay">
                        <div class="overlay-text">
                            <i class="fas fa-crop-alt"></i><br>
                            Prêt à rogner
                        </div>
                    </div>
                `;
                preview.classList.add('has-image');
            };
            reader.readAsDataURL(file);
            
            showNotification(`💎 Image sélectionnée: ${file.name}`, 'info');
        } else {
            delete selectedFiles[categoryId];
            uploadBtn.disabled = true;
            cropBtn.disabled = true;
        }
    }

    // ==========================================
    // FONCTIONS DE ROGNAGE
    // ==========================================
    
    function openCropModal(categoryId) {
        const file = selectedFiles[categoryId];
        if (!file) {
            showNotification('Aucun fichier sélectionné', 'error');
            return;
        }

        currentCropCategoryId = categoryId;
        const modal = document.getElementById('cropModal');
        const cropImage = document.getElementById('cropImage');

        // Initialiser le canvas de prévisualisation
        previewCanvas = document.getElementById('previewCanvas');
        if (previewCanvas) {
            previewCtx = previewCanvas.getContext('2d');
            previewCanvas.width = 150;
            previewCanvas.height = 150;
        }

        const reader = new FileReader();
        reader.onload = function(e) {
            cropImage.src = e.target.result;
            modal.classList.add('show');
            
            // Initialiser Cropper.js avec de meilleures options
            setTimeout(() => {
                if (croppers[categoryId]) {
                    croppers[categoryId].destroy();
                }
                
                croppers[categoryId] = new Cropper(cropImage, {
                    aspectRatio: NaN,
                    viewMode: 1,
                    dragMode: 'move',
                    autoCropArea: 0.8,
                    responsive: true,
                    guides: true,
                    center: true,
                    highlight: false,
                    cropBoxMovable: true,
                    cropBoxResizable: true,
                    toggleDragModeOnDblclick: false,
                    ready: function() {
                        updatePreview();
                    },
                    crop: function() {
                        updatePreview();
                    }
                });
            }, 100);
        };
        reader.readAsDataURL(file);
    }

    function closeCropModal() {
        const modal = document.getElementById('cropModal');
        modal.classList.remove('show');
        
        if (currentCropCategoryId && croppers[currentCropCategoryId]) {
            croppers[currentCropCategoryId].destroy();
            delete croppers[currentCropCategoryId];
        }
        
        currentCropCategoryId = null;
        
        // Nettoyer le canvas de prévisualisation
        if (previewCtx) {
            previewCtx.clearRect(0, 0, 150, 150);
        }
    }

    function resetCrop() {
        if (currentCropCategoryId && croppers[currentCropCategoryId]) {
            croppers[currentCropCategoryId].reset();
            
            // Réinitialiser les boutons de ratio
            document.querySelectorAll('.aspect-ratio-btn').forEach(btn => {
                btn.classList.remove('active');
            });
            const freeBtn = document.querySelector('.aspect-ratio-btn[data-ratio="free"]');
            if (freeBtn) {
                freeBtn.classList.add('active');
            }
            
            // Réinitialiser la qualité
            const qualitySlider = document.getElementById('qualitySlider');
            if (qualitySlider) {
                qualitySlider.value = 0.9;
                updateQualityDisplay(0.9);
            }
            
            setTimeout(() => {
                updatePreview();
            }, 200);
            
            showNotification('🔄 Image réinitialisée', 'info');
        }
    }

    // ==========================================
    // FONCTIONS D'APERÇU ET QUALITÉ
    // ==========================================
    
    function updateQualityDisplay(value) {
        const qualityValue = document.getElementById('qualityValue');
        if (qualityValue) {
            qualityValue.textContent = Math.round(value * 100) + '%';
        }
        updatePreview();
    }

    function updatePreview() {
        if (!currentCropCategoryId || !croppers[currentCropCategoryId] || !previewCtx) {
            return;
        }

        const cropper = croppers[currentCropCategoryId];
        const qualitySlider = document.getElementById('qualitySlider');
        const quality = qualitySlider ? parseFloat(qualitySlider.value) : 0.9;
        
        // Obtenir les données de crop
        const canvas = cropper.getCroppedCanvas({
            width: 150,
            height: 150,
            imageSmoothingEnabled: true,
            imageSmoothingQuality: quality > 0.7 ? 'high' : quality > 0.4 ? 'medium' : 'low',
        });
        
        if (canvas) {
            // Effacer le canvas de prévisualisation
            previewCtx.clearRect(0, 0, 150, 150);
            
            // Dessiner l'image rognée
            previewCtx.drawImage(canvas, 0, 0, 150, 150);
        }
    }

    // ==========================================
    // FONCTION APPLYCROP AMÉLIORÉE
    // ==========================================
    
    async function applyCrop() {
        if (!currentCropCategoryId || !croppers[currentCropCategoryId]) {
            showNotification('Erreur lors du rognage', 'error');
            return;
        }

        const cropper = croppers[currentCropCategoryId];
        const qualitySlider = document.getElementById('qualitySlider');
        const quality = qualitySlider ? parseFloat(qualitySlider.value) : 0.9;
        
        // Afficher un indicateur de traitement
        const saveBtn = document.querySelector('.crop-save-btn');
        if (!saveBtn) {
            showNotification('Bouton de sauvegarde non trouvé', 'error');
            return;
        }
        
        const originalText = saveBtn.innerHTML;
        saveBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Traitement...';
        saveBtn.disabled = true;

        try {
            const canvas = cropper.getCroppedCanvas({
                width: 800,
                height: 600,
                imageSmoothingEnabled: true,
                imageSmoothingQuality: quality > 0.7 ? 'high' : quality > 0.4 ? 'medium' : 'low',
            });

            canvas.toBlob(async (blob) => {
                if (blob) {
                    // Créer le fichier rogné
                    const originalFile = selectedFiles[currentCropCategoryId];
                    const croppedFile = new File([blob], originalFile.name, {
                        type: originalFile.type,
                        lastModified: Date.now()
                    });
                    
                    selectedFiles[currentCropCategoryId] = croppedFile;
                    
                    // Fermer le modal
                    closeCropModal();
                    
                    // Uploader automatiquement
                    showNotification('✨ Image rognée avec succès! Upload en cours...', 'success');
                    
                    // Attendre un peu pour que l'utilisateur voie le message
                    setTimeout(async () => {
                        try {
                            await uploadImage(currentCropCategoryId);
                        } catch (uploadError) {
                            showNotification('Erreur lors de l\'upload: ' + uploadError.message, 'error');
                        }
                    }, 500);
                    
                } else {
                    throw new Error('Impossible de générer l\'image rognée');
                }
            }, 'image/jpeg', quality);
            
        } catch (error) {
            console.error('Erreur rognage:', error);
            showNotification('Erreur lors du rognage: ' + error.message, 'error');
        } finally {
            // Restaurer le bouton
            saveBtn.innerHTML = originalText;
            saveBtn.disabled = false;
        }
    }

    // ==========================================
    // FONCTION D'UPLOAD
    // ==========================================
    
    async function uploadImage(categoryId) {
        const file = selectedFiles[categoryId];
        if (!file) {
            showNotification('Aucun fichier sélectionné', 'error');
            return;
        }
        
        const uploadBtn = document.getElementById(`upload-${categoryId}`);
        const loading = document.getElementById(`loading-${categoryId}`);
        const progressBar = document.getElementById(`progress-${categoryId}`);
        const progressFill = progressBar ? progressBar.querySelector('.progress-fill') : null;
        
        if (uploadBtn) uploadBtn.disabled = true;
        if (loading) loading.style.display = 'block';
        if (progressBar) progressBar.style.display = 'block';
        
        try {
            const formData = new FormData();
            formData.append('image', file);
            formData.append('categoryId', categoryId);
            
            // Simulation de progression
            let progress = 0;
            const progressInterval = setInterval(() => {
                progress += Math.random() * 30;
                if (progress > 90) progress = 90;
                if (progressFill) progressFill.style.width = progress + '%';
            }, 200);
            
            const response = await fetch('/admin/category-images/upload', {
                method: 'POST',
                body: formData
            });
            
            clearInterval(progressInterval);
            if (progressFill) progressFill.style.width = '100%';
            
            const result = await response.json();
            
            if (result.success) {
                showNotification(`✨ Image mise à jour pour ${result.categoryName}`, 'success');
                setTimeout(() => location.reload(), 1500);
            } else {
                showNotification(result.message, 'error');
                if (uploadBtn) uploadBtn.disabled = false;
            }
            
        } catch (error) {
            showNotification('Erreur lors de l\'upload: ' + error.message, 'error');
            if (uploadBtn) uploadBtn.disabled = false;
        } finally {
            if (loading) loading.style.display = 'none';
            setTimeout(() => {
                if (progressBar) progressBar.style.display = 'none';
                if (progressFill) progressFill.style.width = '0%';
            }, 1000);
        }
    }
    
    // ==========================================
    // AUTRES FONCTIONS
    // ==========================================
    
    async function deleteImage(categoryId) {
        if (!confirm('🗑️ Êtes-vous sûr de vouloir supprimer cette image ?')) {
            return;
        }
        
        try {
            const response = await fetch(`/admin/category-images/${categoryId}`, {
                method: 'DELETE'
            });
            
            const result = await response.json();
            
            if (result.success) {
                showNotification('🗑️ Image supprimée avec succès', 'success');
                setTimeout(() => location.reload(), 1500);
            } else {
                showNotification(result.message, 'error');
            }
            
        } catch (error) {
            showNotification('Erreur lors de la suppression: ' + error.message, 'error');
        }
    }

    function previewImage(imageName) {
        const modal = document.getElementById('imageModal');
        const modalImg = document.getElementById('modalImage');
        if (modal && modalImg) {
            modalImg.src = `/images/categories/${imageName}`;
            modal.style.display = 'flex';
        }
    }

    function closeModal() {
        const modal = document.getElementById('imageModal');
        if (modal) {
            modal.style.display = 'none';
        }
    }

    async function cleanupImages() {
        if (!confirm('🧹 Nettoyer les images orphelines ?')) return;
        
        try {
            const response = await fetch('/admin/category-images/cleanup', {
                method: 'POST'
            });
            const result = await response.json();
            
            if (result.success) {
                showNotification(`🧹 ${result.cleaned} images nettoyées`, 'success');
            } else {
                showNotification(result.message, 'error');
            }
        } catch (error) {
            showNotification('Erreur lors du nettoyage', 'error');
        }
    }

    async function refreshStats() {
        showNotification('🔄 Actualisation des statistiques...', 'info');
        setTimeout(() => location.reload(), 1000);
    }

    function exportData() {
        const data = {
            categories: Array.from(document.querySelectorAll('.category-card')).map(card => ({
                id: card.dataset.categoryId,
                name: card.querySelector('.category-name').textContent.trim(),
                hasImage: card.querySelector('.image-preview').classList.contains('has-image')
            })),
            timestamp: new Date().toISOString()
        };
        
        const blob = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' });
        const url = URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.href = url;
        a.download = `categories-${new Date().toISOString().split('T')[0]}.json`;
        document.body.appendChild(a);
        a.click();
        document.body.removeChild(a);
        URL.revokeObjectURL(url);
        showNotification('📄 Données exportées avec succès', 'success');
    }
    
    function showNotification(message, type) {
        const notification = document.getElementById('notification');
        if (notification) {
            notification.innerHTML = `
                <div style="display: flex; align-items: center; gap: 10px;">
                    <i class="fas fa-${type === 'success' ? 'check-circle' : type === 'error' ? 'exclamation-circle' : 'info-circle'}"></i>
                    <span>${message}</span>
                </div>
            `;
            notification.className = `notification ${type} show`;
            
            setTimeout(() => {
                notification.classList.remove('show');
            }, 4000);
        }
    }

    // ==========================================
    // ÉVÉNEMENTS DOM
    // ==========================================
    
    document.addEventListener('DOMContentLoaded', function() {
        console.log('🚀 Initialisation de l\'interface...');
        
        // Animation des cartes
        const cards = document.querySelectorAll('.category-card');
        cards.forEach((card, index) => {
            card.style.animationDelay = `${index * 0.1}s`;
        });

        // Gestion des ratios d'aspect
        const aspectRatioButtons = document.querySelectorAll('.aspect-ratio-btn');
        aspectRatioButtons.forEach(btn => {
            btn.addEventListener('click', function() {
                // Animation de transition
                aspectRatioButtons.forEach(b => {
                    b.classList.remove('active');
                    b.style.transform = 'scale(1)';
                });
                
                this.classList.add('active');
                this.style.transform = 'scale(1.05)';
                
                const ratio = this.dataset.ratio;
                if (currentCropCategoryId && croppers[currentCropCategoryId]) {
                    const aspectRatio = ratio === 'free' ? NaN : parseFloat(ratio);
                    croppers[currentCropCategoryId].setAspectRatio(aspectRatio);
                    
                    // Petit délai pour l'animation puis mise à jour de l'aperçu
                    setTimeout(() => {
                        updatePreview();
                    }, 200);
                }
                
                // Feedback visuel
                showNotification(`📐 Format ${this.textContent.trim()} sélectionné`, 'info');
            });
        });

        // Raccourcis clavier
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape') {
                closeModal();
                closeCropModal();
            }
        });

        // Message de bienvenue
        setTimeout(() => {
            showNotification('💎 Interface de gestion rose-gold chargée', 'success');
        }, 500);

        console.log('✅ Interface initialisée avec succès');
    });
</script>
</body>
</html>