<link rel="stylesheet" href="css/favoris.css">

<%- include('partials/navbarre.ejs') %>


<section class="favorites-section">
  <div class="container">
    <div class="section-title">
      <h3>Mes Favoris</h3>
    </div>

    <% if (favorites && favorites.length > 0) { %>
      <div class="favorites-grid">
        <% favorites.forEach(jewel => { %>
          <div class="favorite-card" data-jewel-id="<%= jewel.id %>">
            <div class="favorite-img-container">
              <img src="<%= jewel.images && jewel.images.length > 0 ? jewel.images[0] : jewel.image || '/images/placeholder.jpg' %>" alt="<%= jewel.name %>" class="favorite-img">
              <button class="remove-favorite-btn" data-jewel-id="<%= jewel.id %>">
                <i class="fas fa-heart"></i>
              </button>
            </div>
            <div class="favorite-info">
              <h4 class="favorite-name"><a href="/bijoux/<%= jewel.id %>"><%= jewel.name %></a></h4>
              <p class="favorite-category"><%= jewel.category_name %></p>
              <p class="favorite-price"><%= jewel.price_ttc.toFixed(2) %> €</p>
              <div class="favorite-actions">
                <% if (jewel.stock > 0) { %>
                  <button class="add-to-cart-btn" data-jewel-id="<%= jewel.id %>">
                    Ajouter au panier <i class="fas fa-shopping-cart"></i>
                  </button>
                <% } else { %>
                  <button class="out-of-stock-btn" disabled>
                    Indisponible <i class="fas fa-times-circle"></i>
                  </button>
                <% } %>
              </div>
            </div>
          </div>
        <% }); %>
      </div>
    <% } else { %>
      <div class="empty-favorites">
        <i class="far fa-heart empty-icon"></i>
        <h4>Votre liste de favoris est vide</h4>
        <p>Explorez notre collection et ajoutez des bijoux à vos favoris pour les retrouver facilement.</p>
        <a href="/bijoux" class="btn">Découvrir nos bijoux</a>
      </div>
    <% } %>
  </div>
</section>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Gérer la suppression d'un favori
    const removeFavoriteBtns = document.querySelectorAll('.remove-favorite-btn');
    
    removeFavoriteBtns.forEach(btn => {
      btn.addEventListener('click', function() {
        const jewelId = this.getAttribute('data-jewel-id');
        const card = document.querySelector(`.favorite-card[data-jewel-id="${jewelId}"]`);
        
        fetch(`/favoris/supprimer/${jewelId}`, {
          method: 'DELETE',
          headers: {
            'Accept': 'application/json'
          }
        })
        .then(response => response.json())
        .then(data => {
          if (data.success) {
            // Animation de suppression
            card.style.opacity = '0';
            setTimeout(() => {
              card.remove();
              
              // Vérifier s'il reste des favoris
              const remainingCards = document.querySelectorAll('.favorite-card');
              if (remainingCards.length === 0) {
                const favoritesGrid = document.querySelector('.favorites-grid');
                favoritesGrid.innerHTML = `
                  <div class="empty-favorites">
                    <i class="far fa-heart empty-icon"></i>
                    <h4>Votre liste de favoris est vide</h4>
                    <p>Explorez notre collection et ajoutez des bijoux à vos favoris pour les retrouver facilement.</p>
                    <a href="/bijoux" class="btn">Découvrir nos bijoux</a>
                  </div>
                `;
              }
            }, 300);
          } else {
            alert('Erreur: ' + data.message);
          }
        })
        .catch(error => {
          console.error('Erreur:', error);
          alert('Une erreur est survenue lors de la suppression du favori');
        });
      });
    });
    
    // Gérer l'ajout au panier
    const addToCartBtns = document.querySelectorAll('.add-to-cart-btn');
    
    addToCartBtns.forEach(btn => {
      btn.addEventListener('click', function() {
        const jewelId = this.getAttribute('data-jewel-id');
        
        fetch('/panier/ajouter', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'Accept': 'application/json'
          },
          body: JSON.stringify({
            jewelId: jewelId,
            quantity: 1
          })
        })
        .then(response => response.json())
        .then(data => {
          if (data.success) {
            // Notifier l'utilisateur
            showToast(`${data.jewelName} a été ajouté à votre panier`, 'success');
            
            // Animation du bouton
            this.innerHTML = 'Ajouté ! <i class="fas fa-check"></i>';
            this.classList.add('added');
            
            setTimeout(() => {
              this.innerHTML = 'Ajouter au panier <i class="fas fa-shopping-cart"></i>';
              this.classList.remove('added');
            }, 2000);
          } else {
            showToast(data.message, 'error');
          }
        })
        .catch(error => {
          console.error('Erreur:', error);
          showToast('Une erreur est survenue', 'error');
        });
      });
    });
    
    // Fonction pour afficher une notification toast
    function showToast(message, type = 'info') {
      const toast = document.createElement('div');
      toast.className = `toast toast-${type}`;
      toast.innerHTML = `
        <div class="toast-content">
          <i class="fas ${type === 'success' ? 'fa-check-circle' : 'fa-exclamation-circle'}"></i>
          <span>${message}</span>
        </div>
        <button class="toast-close"><i class="fas fa-times"></i></button>
      `;
      
      document.body.appendChild(toast);
      
      // Afficher avec animation
      setTimeout(() => {
        toast.classList.add('show');
      }, 10);
      
      // Supprimer après 3 secondes
      setTimeout(() => {
        toast.classList.remove('show');
        setTimeout(() => {
          toast.remove();
        }, 300);
      }, 3000);
      
      // Fermeture manuelle
      toast.querySelector('.toast-close').addEventListener('click', () => {
        toast.classList.remove('show');
        setTimeout(() => {
          toast.remove();
        }, 300);
      });
    }
  });
</script>