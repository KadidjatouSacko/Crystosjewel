<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title || 'ParamÃ¨tres Administration' %></title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        :root {
            --primary: #b76e79;
            --primary-light: #e8c2c8;
            --primary-dark: #7d4b53;
            --success: #2ecc71;
            --warning: #f39c12;
            --danger: #e74c3c;
            --info: #3498db;
            --light: #f8f9fa;
            --dark: #343a40;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #fff8f0 0%, #f5f5f5 100%);
            color: #333;
            line-height: 1.6;
        }

        /* ===== HEADER ===== */
        .header {
            background: white;
            padding: 2rem;
            margin-bottom: 2rem;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            border-left: 5px solid var(--primary);
        }

        .header h1 {
            color: var(--primary);
            font-size: 2.5rem;
            margin-bottom: 0.5rem;
            display: flex;
            align-items: center;
            gap: 1rem;
        }

        .header p {
            color: #666;
            font-size: 1.1rem;
        }

        /* ===== CONTAINER ===== */
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 1rem;
        }

        /* ===== GRILLE DES SECTIONS ===== */
        .sections-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(500px, 1fr));
            gap: 2rem;
            margin-bottom: 2rem;
        }

        /* ===== CARTES SECTION ===== */
        .section-card {
            background: white;
            border-radius: 15px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            padding: 2rem;
            transition: transform 0.3s ease;
        }

        .section-card:hover {
            transform: translateY(-5px);
        }

        .section-header {
            display: flex;
            align-items: center;
            margin-bottom: 2rem;
            padding-bottom: 1rem;
            border-bottom: 2px solid var(--light);
        }

        .section-icon {
            width: 60px;
            height: 60px;
            background: linear-gradient(135deg, var(--primary), var(--primary-dark));
            border-radius: 15px;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-right: 1rem;
        }

        .section-icon i {
            font-size: 1.5rem;
            color: white;
        }

        .section-title {
            font-size: 1.4rem;
            font-weight: bold;
            color: var(--dark);
            margin-bottom: 0.3rem;
        }

        .section-description {
            color: #666;
            font-size: 0.9rem;
        }

        /* ===== FORMULAIRES ===== */
        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 600;
            color: var(--dark);
            font-size: 0.95rem;
        }

        .form-input, .form-textarea, .form-select {
            width: 100%;
            padding: 0.75rem;
            border: 2px solid #e9ecef;
            border-radius: 8px;
            font-size: 0.95rem;
            transition: all 0.3s ease;
            background: white;
        }

        .form-input:focus, .form-textarea:focus, .form-select:focus {
            outline: none;
            border-color: var(--primary);
            box-shadow: 0 0 0 3px rgba(183, 110, 121, 0.1);
        }

        .form-textarea {
            resize: vertical;
            min-height: 80px;
        }

        /* ===== SWITCH TOGGLE ===== */
        .switch {
            position: relative;
            display: inline-block;
            width: 60px;
            height: 34px;
        }

        .switch input {
            opacity: 0;
            width: 0;
            height: 0;
        }

        .slider {
            position: absolute;
            cursor: pointer;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: #ccc;
            transition: .4s;
            border-radius: 34px;
        }

        .slider:before {
            position: absolute;
            content: "";
            height: 26px;
            width: 26px;
            left: 4px;
            bottom: 4px;
            background-color: white;
            transition: .4s;
            border-radius: 50%;
        }

        input:checked + .slider {
            background-color: var(--success);
        }

        input:checked + .slider:before {
            transform: translateX(26px);
        }

        /* ===== BOUTONS ===== */
        .save-btn {
            background: linear-gradient(135deg, var(--primary), var(--primary-dark));
            color: white;
            border: none;
            padding: 0.75rem 1.5rem;
            border-radius: 8px;
            font-weight: 600;
            cursor: pointer;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            transition: all 0.3s ease;
            font-size: 0.95rem;
        }

        .save-btn:hover {
            background: linear-gradient(135deg, var(--primary-dark), var(--primary));
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(183, 110, 121, 0.3);
        }

        .save-btn:disabled {
            background: #ccc;
            cursor: not-allowed;
            transform: none;
        }

        /* ===== MAINTENANCE SECTION ===== */
        .maintenance-card {
            grid-column: 1 / -1;
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
        }

        .maintenance-card .section-icon {
            background: rgba(255, 255, 255, 0.2);
        }

        .maintenance-status {
            padding: 8px 16px;
            border-radius: 20px;
            font-size: 14px;
            font-weight: bold;
            text-align: center;
            min-width: 100px;
            margin-left: auto;
        }

        .maintenance-status.active {
            background: #e74c3c;
            color: white;
        }

        .maintenance-status.inactive {
            background: #2ecc71;
            color: white;
        }

        .maintenance-actions {
            margin-top: 1.5rem;
        }

        .action-group {
            background: rgba(255, 255, 255, 0.1);
            padding: 1.5rem;
            border-radius: 10px;
            margin-bottom: 1.5rem;
            border-left: 4px solid rgba(255, 255, 255, 0.3);
        }

        .action-group h4 {
            color: white;
            margin-bottom: 0.5rem;
            font-size: 1.1rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .action-group p {
            color: rgba(255, 255, 255, 0.8);
            margin-bottom: 1rem;
            font-size: 0.9rem;
        }

        .button-group {
            display: flex;
            gap: 1rem;
            flex-wrap: wrap;
        }

        .scheduled-form {
            display: flex;
            gap: 1rem;
            align-items: flex-end;
            flex-wrap: wrap;
        }

        .scheduled-form .form-group {
            flex: 1;
            min-width: 200px;
            margin-bottom: 0;
        }

        .btn {
            padding: 0.75rem 1.5rem;
            border: none;
            border-radius: 8px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            font-size: 0.9rem;
            text-decoration: none;
        }

        .btn-warning {
            background: #f39c12;
            color: white;
        }

        .btn-warning:hover {
            background: #e67e22;
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(243, 156, 18, 0.3);
        }

        .btn-success {
            background: #2ecc71;
            color: white;
        }

        .btn-success:hover {
            background: #27ae60;
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(46, 204, 113, 0.3);
        }

        .btn-info {
            background: #3498db;
            color: white;
        }

        .btn-info:hover {
            background: #2980b9;
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(52, 152, 219, 0.3);
        }

        .btn:disabled {
            opacity: 0.6;
            cursor: not-allowed;
            transform: none !important;
        }

        /* ===== NOTIFICATIONS ===== */
        .notification {
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 1rem 1.5rem;
            border-radius: 8px;
            color: white;
            font-weight: 500;
            z-index: 1000;
            transform: translateX(400px);
            transition: transform 0.3s ease;
            max-width: 300px;
        }

        .notification.show {
            transform: translateX(0);
        }

        .notification.success {
            background: var(--success);
        }

        .notification.error {
            background: var(--danger);
        }

        .notification.info {
            background: var(--info);
        }

        /* ===== RESPONSIVE ===== */
        @media (max-width: 768px) {
            .sections-grid {
                grid-template-columns: 1fr;
            }
            
            .section-card {
                padding: 1.5rem;
            }
            
            .header h1 {
                font-size: 2rem;
            }
            
            .scheduled-form {
                flex-direction: column;
                align-items: stretch;
            }
            
            .button-group {
                flex-direction: column;
            }
            
            .btn {
                justify-content: center;
            }
        }
    </style>
</head>
<body>
    <%- include('partials/navbarre.ejs') %>
    
    <div class="container">
        <div class="header">
            <h1><i class="fas fa-cogs"></i> ParamÃ¨tres du Site</h1>
            <p>Configuration des Ã©lÃ©ments essentiels de votre boutique</p>
        </div>

        <div class="sections-grid">
            <!-- Section Paiements -->
            <div class="section-card">
                <div class="section-header">
                    <div class="section-icon">
                        <i class="fas fa-credit-card"></i>
                    </div>
                    <div>
                        <div class="section-title">Paiements</div>
                        <div class="section-description">Configuration des moyens de paiement</div>
                    </div>
                </div>
                
                <form id="form-payment">
                    <div class="form-group">
                        <label class="form-label">ClÃ© publique Stripe</label>
                        <input type="text" class="form-input" name="stripe_public_key" 
                               value="<%= settings.payment?.stripe_public_key?.value || '' %>" 
                               placeholder="pk_live_...">
                    </div>
                    
                    <div class="form-group">
                        <label class="form-label">ClÃ© secrÃ¨te Stripe</label>
                        <input type="password" class="form-input" name="stripe_secret_key" 
                               value="<%= settings.payment?.stripe_secret_key?.value || '' %>" 
                               placeholder="sk_live_...">
                    </div>
                    
                    <div class="form-group">
                        <label class="form-label">Client ID PayPal</label>
                        <input type="text" class="form-input" name="paypal_client_id" 
                               value="<%= settings.payment?.paypal_client_id?.value || '' %>" 
                               placeholder="AYiPOwl...">
                    </div>
                    
                    <div class="form-group">
                        <label class="form-label">Accepter les cartes de crÃ©dit</label>
                        <label class="switch">
                            <input type="checkbox" name="accept_credit_cards" 
                                   <%= settings.payment?.accept_credit_cards?.value ? 'checked' : '' %>>
                            <span class="slider"></span>
                        </label>
                    </div>
                    
                    <div class="form-group">
                        <label class="form-label">Accepter PayPal</label>
                        <label class="switch">
                            <input type="checkbox" name="accept_paypal" 
                                   <%= settings.payment?.accept_paypal?.value ? 'checked' : '' %>>
                            <span class="slider"></span>
                        </label>
                    </div>
                    
                    <button type="button" class="save-btn" onclick="saveSection('payment')">
                        <i class="fas fa-save"></i> Sauvegarder
                    </button>
                </form>
            </div>

            <!-- Section Livraison -->
            <div class="section-card">
                <div class="section-header">
                    <div class="section-icon">
                        <i class="fas fa-truck"></i>
                    </div>
                    <div>
                        <div class="section-title">Livraison</div>
                        <div class="section-description">Frais et zones de livraison</div>
                    </div>
                </div>
                
                <form id="form-shipping">
                    <div class="form-group">
                        <label class="form-label">Livraison gratuite Ã  partir de (â¬)</label>
                        <input type="number" class="form-input" name="free_shipping_threshold" 
                               value="<%= settings.shipping?.free_shipping_threshold?.value || '100' %>" 
                               step="0.01">
                    </div>
                    
                    <div class="form-group">
                        <label class="form-label">Frais livraison standard (â¬)</label>
                        <input type="number" class="form-input" name="standard_shipping_cost" 
                               value="<%= settings.shipping?.standard_shipping_cost?.value || '7.50' %>" 
                               step="0.01">
                    </div>
                    
                    <div class="form-group">
                        <label class="form-label">Frais livraison express (â¬)</label>
                        <input type="number" class="form-input" name="express_shipping_cost" 
                               value="<%= settings.shipping?.express_shipping_cost?.value || '15.00' %>" 
                               step="0.01">
                    </div>
                    
                    <div class="form-group">
                        <label class="form-label">Zones de livraison</label>
                        <input type="text" class="form-input" name="shipping_zones" 
                               value="<%= settings.shipping?.shipping_zones?.value || 'France, Europe, International' %>" 
                               placeholder="France, Europe, International">
                    </div>
                    
                    <button type="button" class="save-btn" onclick="saveSection('shipping')">
                        <i class="fas fa-save"></i> Sauvegarder
                    </button>
                </form>
            </div>

            <!-- Section SÃ©curitÃ© -->
            <div class="section-card">
                <div class="section-header">
                    <div class="section-icon">
                        <i class="fas fa-shield-alt"></i>
                    </div>
                    <div>
                        <div class="section-title">SÃ©curitÃ©</div>
                        <div class="section-description">ParamÃ¨tres de sÃ©curitÃ©</div>
                    </div>
                </div>
                
                <form id="form-security">
                    <div class="form-group">
                        <label class="form-label">Timeout session (secondes)</label>
                        <input type="number" class="form-input" name="session_timeout" 
                               value="<%= settings.security?.session_timeout?.value || '3600' %>">
                    </div>
                    
                    <div class="form-group">
                        <label class="form-label">Tentatives de connexion max</label>
                        <input type="number" class="form-input" name="max_login_attempts" 
                               value="<%= settings.security?.max_login_attempts?.value || '5' %>">
                    </div>
                    
                    <div class="form-group">
                        <label class="form-label">VÃ©rification email obligatoire</label>
                        <label class="switch">
                            <input type="checkbox" name="require_email_verification" 
                                   <%= settings.security?.require_email_verification?.value ? 'checked' : '' %>>
                            <span class="slider"></span>
                        </label>
                    </div>
                    
                    <button type="button" class="save-btn" onclick="saveSection('security')">
                        <i class="fas fa-save"></i> Sauvegarder
                    </button>
                </form>
            </div>

            <!-- Section CoordonnÃ©es Entreprise -->
            <div class="section-card">
                <div class="section-header">
                    <div class="section-icon">
                        <i class="fas fa-building"></i>
                    </div>
                    <div>
                        <div class="section-title">CoordonnÃ©es Entreprise</div>
                        <div class="section-description">Informations pour les factures</div>
                    </div>
                </div>
                
                <form id="form-company">
                    <div class="form-group">
                        <label class="form-label">Nom de l'entreprise</label>
                        <input type="text" class="form-input" name="company_name" 
                               value="<%= settings.company?.company_name?.value || 'Crystos Jewel' %>">
                    </div>
                    
                    <div class="form-group">
                        <label class="form-label">Adresse de facturation</label>
                        <textarea class="form-textarea" name="company_address"><%= settings.company?.company_address?.value || '123 Rue de la Paix, 75001 Paris' %></textarea>
                    </div>
                    
                    <div class="form-group">
                        <label class="form-label">TÃ©lÃ©phone</label>
                        <input type="tel" class="form-input" name="company_phone" 
                               value="<%= settings.company?.company_phone?.value || '+33 1 23 45 67 89' %>">
                    </div>
                    
                    <div class="form-group">
                        <label class="form-label">Email officiel</label>
                        <input type="email" class="form-input" name="company_email" 
                               value="<%= settings.company?.company_email?.value || 'contact@crystosjewel.com' %>">
                    </div>
                    
                    <div class="form-group">
                        <label class="form-label">NumÃ©ro SIRET</label>
                        <input type="text" class="form-input" name="siret" 
                               value="<%= settings.company?.siret?.value || '' %>" 
                               placeholder="12345678901234">
                    </div>
                    
                    <div class="form-group">
                        <label class="form-label">NumÃ©ro TVA</label>
                        <input type="text" class="form-input" name="vat_number" 
                               value="<%= settings.company?.vat_number?.value || '' %>" 
                               placeholder="FR12345678901">
                    </div>
                    
                    <button type="button" class="save-btn" onclick="saveSection('company')">
                        <i class="fas fa-save"></i> Sauvegarder
                    </button>
                </form>
            </div>

            <!-- Section Footer & RÃ©seaux sociaux -->
            <div class="section-card">
                <div class="section-header">
                    <div class="section-icon">
                        <i class="fas fa-link"></i>
                    </div>
                    <div>
                        <div class="section-title">Footer & RÃ©seaux sociaux</div>
                        <div class="section-description">Liens du pied de page</div>
                    </div>
                </div>
                
                <form id="form-footer">
                    <div class="form-group">
                        <label class="form-label">Instagram URL</label>
                        <input type="url" class="form-input" name="instagram_url" 
                               value="<%= settings.footer?.instagram_url?.value || '' %>" 
                               placeholder="https://instagram.com/...">
                    </div>
                    
                    <div class="form-group">
                        <label class="form-label">Facebook URL</label>
                        <input type="url" class="form-input" name="facebook_url" 
                               value="<%= settings.footer?.facebook_url?.value || '' %>" 
                               placeholder="https://facebook.com/...">
                    </div>
                    
                    <div class="form-group">
                        <label class="form-label">Pinterest URL</label>
                        <input type="url" class="form-input" name="pinterest_url" 
                               value="<%= settings.footer?.pinterest_url?.value || '' %>" 
                               placeholder="https://pinterest.com/...">
                    </div>
                    
                    <div class="form-group">
                        <label class="form-label">TikTok URL</label>
                        <input type="url" class="form-input" name="tiktok_url" 
                               value="<%= settings.footer?.tiktok_url?.value || '' %>" 
                               placeholder="https://tiktok.com/@...">
                    </div>
                    
                    <div class="form-group">
                        <label class="form-label">Texte copyright</label>
                        <input type="text" class="form-input" name="copyright_text" 
                               value="<%= settings.footer?.copyright_text?.value || '2025 CrystosJewel - Tous droits rÃ©servÃ©s.' %>">
                    </div>
                    
                    <button type="button" class="save-btn" onclick="saveSection('footer')">
                        <i class="fas fa-save"></i> Sauvegarder
                    </button>
                </form>
            </div>

            <!-- Section Maintenance -->
            <div class="section-card maintenance-card">
                <div class="section-header">
                    <div class="section-icon">
                        <i class="fas fa-tools"></i>
                    </div>
                    <div>
                        <div class="section-title">Maintenance du Site</div>
                        <div class="section-description">Gestion du mode maintenance</div>
                    </div>
                    <div id="maintenanceStatus" class="maintenance-status inactive">
                        â <strong>INACTIVE</strong>
                    </div>
                </div>
                
                <form id="form-maintenance">
                    <div class="form-group">
                        <label class="form-label">Message de maintenance</label>
                        <textarea class="form-textarea" id="maintenanceMessage" name="maintenanceMessage" 
                                  placeholder="Site temporairement indisponible pour maintenance. Nous reviendrons bientÃ´t !"></textarea>
                    </div>
                    
                    <div class="form-group">
                        <label class="form-label">DurÃ©e estimÃ©e (optionnel)</label>
                        <input type="text" class="form-input" id="estimatedDuration" name="estimatedDuration" 
                               placeholder="Ex: 30 minutes, 2 heures...">
                    </div>
                    
                    <div class="maintenance-actions">
                        <div class="action-group">
                            <h4><i class="fas fa-power-off"></i> Maintenance ImmÃ©diate</h4>
                            <p>Activer ou dÃ©sactiver la maintenance instantanÃ©ment</p>
                            <div class="button-group">
                                <button type="button" id="activateMaintenanceBtn" class="btn btn-warning"
                                        onclick="MaintenanceManager.activate()">
                                    <i class="fas fa-power-off"></i> Activer Maintenance
                                </button>
                                
                                <button type="button" id="deactivateMaintenanceBtn" class="btn btn-success" 
                                        onclick="MaintenanceManager.deactivate()" style="display: none;">
                                    <i class="fas fa-check"></i> DÃ©sactiver Maintenance
                                </button>
                            </div>
                        </div>
                        
                        <div class="action-group">
                            <h4><i class="fas fa-calendar-alt"></i> Maintenance ProgrammÃ©e</h4>
                            <p>Programmer une maintenance pour plus tard</p>
                            <div class="scheduled-form">
                                <div class="form-group">
                                    <label class="form-label">Date et heure :</label>
                                    <input type="datetime-local" class="form-input" id="scheduledTime" name="scheduledTime">
                                </div>
                                <button type="button" class="btn btn-info" onclick="MaintenanceManager.schedule()">
                                    <i class="fas fa-calendar-plus"></i> Programmer
                                </button>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <script>
        // ===== FONCTION GÃNÃRALE DE SAUVEGARDE =====
        function saveSection(sectionName) {
            const form = document.getElementById(`form-${sectionName}`);
            const btn = form.querySelector('.save-btn');
            
            // DÃ©sactiver le bouton
            btn.disabled = true;
            btn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Sauvegarde...';
            
            // Collecter les donnÃ©es du formulaire
            const formData = new FormData(form);
            const settings = {};
            
            for (let [key, value] of formData.entries()) {
                const input = form.querySelector(`[name="${key}"]`);
                if (input.type === 'checkbox') {
                    settings[key] = input.checked;
                } else if (input.type === 'number') {
                    settings[key] = parseFloat(value) || 0;
                } else {
                    settings[key] = value;
                }
            }
            
            // Envoyer au serveur
            fetch('/admin/parametres/save', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    section: sectionName,
                    settings: settings
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    showNotification('â ParamÃ¨tres sauvegardÃ©s avec succÃ¨s', 'success');
                } else {
                    showNotification(data.message || 'Erreur lors de la sauvegarde', 'error');
                }
            })
            .catch(error => {
                console.error('Erreur:', error);
                showNotification('Erreur de connexion', 'error');
            })
            .finally(() => {
                // RÃ©activer le bouton
                btn.disabled = false;
                btn.innerHTML = '<i class="fas fa-save"></i> Sauvegarder';
            });
        }

        // ===== GESTIONNAIRE DE MAINTENANCE =====
        const MaintenanceManager = {
            async getStatus() {
                try {
                    const response = await fetch('/api/maintenance/status');
                    const data = await response.json();
                    this.updateUI(data.status);
                } catch (error) {
                    console.error('Erreur statut maintenance:', error);
                }
            },
            
            async activate() {
                const message = document.getElementById('maintenanceMessage')?.value || 'Site en maintenance';
                const estimatedDuration = document.getElementById('estimatedDuration')?.value || null;
                
                if (!confirm('â ï¸ Activer la maintenance maintenant ? Le site sera inaccessible aux visiteurs.')) {
                    return;
                }
                
                try {
                    const response = await fetch('/api/maintenance/activate', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ message, estimatedDuration })
                    });
                    
                    const data = await response.json();
                    if (data.success) {
                        showNotification('ð§ Maintenance activÃ©e avec succÃ¨s', 'success');
                        this.getStatus();
                    } else {
                        showNotification(data.message || 'Erreur activation', 'error');
                    }
                } catch (error) {
                    showNotification('Erreur de connexion', 'error');
                }
            },
            
            async schedule() {
                const scheduledTime = document.getElementById('scheduledTime')?.value;
                const message = document.getElementById('maintenanceMessage')?.value || 'Maintenance programmÃ©e';
                const estimatedDuration = document.getElementById('estimatedDuration')?.value || null;
                
                if (!scheduledTime) {
                    showNotification('â° Veuillez sÃ©lectionner une date et heure', 'error');
                    return;
                }
                
                const scheduledDate = new Date(scheduledTime);
                if (scheduledDate <= new Date()) {
                    showNotification('â° La date doit Ãªtre dans le futur', 'error');
                    return;
                }
                
                try {
                    const response = await fetch('/api/maintenance/schedule', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ scheduledTime, message, estimatedDuration })
                    });
                    
                    const data = await response.json();
                    if (data.success) {
                        showNotification(`ð ${data.message}`, 'success');
                        this.getStatus();
                        // Vider le champ
                        document.getElementById('scheduledTime').value = '';
                    } else {
                        showNotification(data.message || 'Erreur programmation', 'error');
                    }
                } catch (error) {
                    showNotification('Erreur de connexion', 'error');
                }
            },
            
            async deactivate() {
                if (!confirm('â DÃ©sactiver la maintenance ? Le site redeviendra accessible Ã  tous.')) {
                    return;
                }
                
                try {
                    const response = await fetch('/api/maintenance/deactivate', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' }
                    });
                    
                    const data = await response.json();
                    if (data.success) {
                        showNotification('â Maintenance dÃ©sactivÃ©e', 'success');
                        this.getStatus();
                    } else {
                        showNotification(data.message || 'Erreur dÃ©sactivation', 'error');
                    }
                } catch (error) {
                    showNotification('Erreur de connexion', 'error');
                }
            },
            
            updateUI(status) {
                const statusIndicator = document.getElementById('maintenanceStatus');
                const activateBtn = document.getElementById('activateMaintenanceBtn');
                const deactivateBtn = document.getElementById('deactivateMaintenanceBtn');
                
                if (!statusIndicator || !activateBtn || !deactivateBtn) return;
                
                if (status.active) {
                    statusIndicator.innerHTML = 'ð§ <strong>ACTIVE</strong>';
                    statusIndicator.className = 'maintenance-status active';
                    activateBtn.style.display = 'none';
                    deactivateBtn.style.display = 'inline-flex';
                } else {
                    statusIndicator.innerHTML = 'â <strong>INACTIVE</strong>';
                    statusIndicator.className = 'maintenance-status inactive';
                    activateBtn.style.display = 'inline-flex';
                    deactivateBtn.style.display = 'none';
                }
                
                // Remplir les champs avec les valeurs actuelles
                if (status.message) {
                    document.getElementById('maintenanceMessage').value = status.message;
                }
                if (status.estimatedEnd) {
                    document.getElementById('estimatedDuration').value = status.estimatedEnd;
                }
            }
        };

        // ===== SYSTÃME DE NOTIFICATIONS =====
        function showNotification(message, type = 'info') {
            // Supprimer les notifications existantes
            const existingNotification = document.querySelector('.notification');
            if (existingNotification) {
                existingNotification.remove();
            }
            
            // CrÃ©er la nouvelle notification
            const notification = document.createElement('div');
            notification.className = `notification ${type}`;
            notification.innerHTML = message;
            
            // Ajouter au DOM
            document.body.appendChild(notification);
            
            // Afficher avec animation
            setTimeout(() => {
                notification.classList.add('show');
            }, 100);
            
            // Masquer aprÃ¨s 4 secondes
            setTimeout(() => {
                notification.classList.remove('show');
                setTimeout(() => {
                    notification.remove();
                }, 300);
            }, 4000);
        }

        // ===== INITIALISATION =====
        document.addEventListener('DOMContentLoaded', function() {
            console.log('ð§ Page paramÃ¨tres chargÃ©e');
            
            // Initialiser la maintenance si les Ã©lÃ©ments existent
            if (document.getElementById('maintenanceStatus')) {
                MaintenanceManager.getStatus();
                // VÃ©rifier le statut toutes les 30 secondes
                setInterval(() => MaintenanceManager.getStatus(), 30000);
            }
            
            // Ajouter des validations en temps rÃ©el
            const inputs = document.querySelectorAll('.form-input, .form-textarea');
            inputs.forEach(input => {
                input.addEventListener('input', function() {
                    // Retirer les classes d'erreur si l'utilisateur tape
                    this.classList.remove('error');
                });
            });
            
            // Validation des URLs
            const urlInputs = document.querySelectorAll('input[type="url"]');
            urlInputs.forEach(input => {
                input.addEventListener('blur', function() {
                    if (this.value && !isValidUrl(this.value)) {
                        this.classList.add('error');
                        showNotification('URL invalide', 'error');
                    }
                });
            });
            
            // Validation des emails
            const emailInputs = document.querySelectorAll('input[type="email"]');
            emailInputs.forEach(input => {
                input.addEventListener('blur', function() {
                    if (this.value && !isValidEmail(this.value)) {
                        this.classList.add('error');
                        showNotification('Email invalide', 'error');
                    }
                });
            });
        });

        // ===== FONCTIONS DE VALIDATION =====
        function isValidUrl(string) {
            try {
                new URL(string);
                return true;
            } catch (_) {
                return false;
            }
        }

        function isValidEmail(email) {
            const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            return emailRegex.test(email);
        }

        // ===== GESTION DES ERREURS GLOBALES =====
        window.addEventListener('error', function(e) {
            console.error('Erreur JavaScript:', e.error);
            showNotification('Une erreur inattendue s\'est produite', 'error');
        });

        // ===== RACCOURCIS CLAVIER =====
        document.addEventListener('keydown', function(e) {
            // Ctrl+S pour sauvegarder la section active
            if (e.ctrlKey && e.key === 's') {
                e.preventDefault();
                const activeSection = document.activeElement.closest('.section-card');
                if (activeSection) {
                    const form = activeSection.querySelector('form');
                    if (form) {
                        const sectionName = form.id.replace('form-', '');
                        saveSection(sectionName);
                    }
                }
            }
        });
    </script>

    <style>
        /* ===== STYLES POUR LES ERREURS =====  */
        .form-input.error, .form-textarea.error {
            border-color: var(--danger);
            background-color: #fff5f5;
        }
        
        .form-input.error:focus, .form-textarea.error:focus {
            border-color: var(--danger);
            box-shadow: 0 0 0 3px rgba(231, 76, 60, 0.1);
        }
        
        /* ===== ANIMATIONS SUPPLÃMENTAIRES ===== */
        .section-card {
            animation: fadeInUp 0.6s ease-out;
            animation-fill-mode: both;
        }
        
        .section-card:nth-child(1) { animation-delay: 0.1s; }
        .section-card:nth-child(2) { animation-delay: 0.2s; }
        .section-card:nth-child(3) { animation-delay: 0.3s; }
        .section-card:nth-child(4) { animation-delay: 0.4s; }
        .section-card:nth-child(5) { animation-delay: 0.5s; }
        .section-card:nth-child(6) { animation-delay: 0.6s; }
        
        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
        
        /* ===== LOADING STATES ===== */
        .btn.loading {
            pointer-events: none;
            opacity: 0.7;
        }
        
        .btn.loading i {
            animation: spin 1s linear infinite;
        }
        
        @keyframes spin {
            from { transform: rotate(0deg); }
            to { transform: rotate(360deg); }
        }
        
        /* ===== AMÃLIORATION MOBILE ===== */
        @media (max-width: 480px) {
            .container {
                padding: 0 0.5rem;
            }
            
            .header {
                padding: 1rem;
                text-align: center;
            }
            
            .header h1 {
                font-size: 1.8rem;
                flex-direction: column;
                gap: 0.5rem;
            }
            
            .section-card {
                padding: 1rem;
            }
            
            .section-header {
                flex-direction: column;
                text-align: center;
                gap: 1rem;
            }
            
            .maintenance-status {
                margin-left: 0;
            }
        }
    </style>
</body>
</html>