<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %> - crystosjewel</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="/css/featured.css">
  <style>
    
        :root {
            --rose-gold: #b76e79;
            --rose-gold-light: #e8c2c8;
            --rose-gold-dark: #7d4b53;
            --cream: #fff8f0;
            --white: #ffffff;
            --dark-text: #2d3748;
            --success: #48bb78;
            --danger: #f56565;
            --shadow: 0 10px 25px rgba(0,0,0,0.08);
            --transition: all 0.3s ease;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

          html,body {
                width: 100%;
            overflow-x: hidden; /* Évite le scroll horizontal */
                }

        body {
            font-family: 'Poppins', sans-serif;
            background: linear-gradient(135deg, var(--cream) 0%, #f8f9ff 100%);
            color: var(--dark-text);
            line-height: 1.6;
        }

        .container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 20px;
        }

        .admin-header {
            background: linear-gradient(135deg, var(--rose-gold), var(--rose-gold-dark));
            color: white;
            padding: 30px 0;
            margin-bottom: 40px;
            text-align: center;
        }

        .admin-header h1 {
            font-size: 2.5rem;
            margin-bottom: 10px;
        }

        .section {
            background: var(--white);
            border-radius: 16px;
            box-shadow: var(--shadow);
            padding: 30px;
            margin-bottom: 30px;
        }

        .section-title {
            font-size: 1.5rem;
            color: var(--rose-gold-dark);
            margin-bottom: 25px;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .featured-grid {
            display: grid;
            grid-template-columns: repeat(4, 1fr);
            gap: 20px;
            margin-bottom: 30px;
        }

        .featured-slot {
            border: 2px dashed var(--rose-gold-light);
            border-radius: 12px;
            min-height: 300px;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            position: relative;
            transition: var(--transition);
        }

        .featured-slot.occupied {
            border: 2px solid var(--rose-gold);
            background: var(--white);
        }

        .featured-slot.empty {
            background: #fafafa;
        }

        .featured-slot.empty:hover {
            border-color: var(--rose-gold);
            background: var(--rose-gold-light);
        }

        .featured-jewel {
            text-align: center;
            width: 100%;
            padding: 15px;
        }

        .featured-jewel-img {
            width: 120px;
            height: 120px;
            border-radius: 12px;
            object-fit: cover;
            margin-bottom: 15px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.1);
        }

        .featured-jewel h4 {
            color: var(--rose-gold-dark);
            margin-bottom: 5px;
            font-size: 1.1rem;
        }

        .featured-jewel .price {
            color: var(--rose-gold);
            font-weight: 600;
            margin-bottom: 10px;
        }

        .remove-featured {
            background: var(--danger);
            color: white;
            border: none;
            padding: 8px 12px;
            border-radius: 6px;
            cursor: pointer;
            font-size: 0.9rem;
            transition: var(--transition);
        }

        .remove-featured:hover {
            background: #e53e3e;
            transform: translateY(-1px);
        }

        .jewels-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 20px;
            max-height: 600px;
            overflow-y: auto;
            padding: 20px;
            border: 1px solid #e2e8f0;
            border-radius: 12px;
            background: #fafafa;
        }

        .jewel-card {
            background: var(--white);
            border-radius: 12px;
            padding: 15px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.05);
            transition: var(--transition);
            cursor: pointer;
        }

        .jewel-card:hover {
            transform: translateY(-4px);
            box-shadow: 0 8px 20px rgba(0,0,0,0.1);
        }

        .jewel-card.featured {
            border: 2px solid var(--rose-gold);
            background: var(--rose-gold-light);
        }

        .jewel-img {
            width: 100%;
            height: 150px;
            border-radius: 8px;
            object-fit: cover;
            margin-bottom: 10px;
        }

        .jewel-placeholder {
            width: 100%;
            height: 150px;
            background: #e2e8f0;
            border-radius: 8px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: #a0aec0;
            font-size: 2rem;
            margin-bottom: 10px;
        }

        .jewel-name {
            font-weight: 600;
            color: var(--dark-text);
            margin-bottom: 5px;
            font-size: 1rem;
        }

        .jewel-category {
            color: #666;
            font-size: 0.9rem;
            margin-bottom: 5px;
        }

        .jewel-price {
            color: var(--rose-gold);
            font-weight: 600;
            font-size: 1.1rem;
        }

        .add-featured {
            background: var(--rose-gold);
            color: white;
            border: none;
            padding: 8px 12px;
            border-radius: 6px;
            cursor: pointer;
            font-size: 0.9rem;
            margin-top: 10px;
            width: 100%;
            transition: var(--transition);
        }

        .add-featured:hover {
            background: var(--rose-gold-dark);
            transform: translateY(-1px);
        }

        .add-featured:disabled {
            background: #ccc;
            cursor: not-allowed;
            transform: none;
        }

        .notification {
            position: fixed;
            top: 20px;
            right: 20px;
            z-index: 1000;
            transform: translateX(400px);
            transition: var(--transition);
        }

        .notification.show {
            transform: translateX(0);
        }

        .notification-content {
            background: var(--success);
            color: white;
            padding: 15px 20px;
            border-radius: 8px;
            box-shadow: var(--shadow);
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .notification.error .notification-content {
            background: var(--danger);
        }

        .search-box {
            margin-bottom: 20px;
            position: relative;
        }

        .search-input {
            width: 100%;
            padding: 12px 45px 12px 15px;
            border: 2px solid #e2e8f0;
            border-radius: 8px;
            font-size: 1rem;
            transition: var(--transition);
        }

        .search-input:focus {
            outline: none;
            border-color: var(--rose-gold);
        }

        .search-icon {
            position: absolute;
            right: 15px;
            top: 50%;
            transform: translateY(-50%);
            color: #a0aec0;
        }

        .back-link {
            display: inline-flex;
            align-items: center;
            gap: 8px;
            color: var(--rose-gold);
            text-decoration: none;
            margin-bottom: 20px;
            transition: var(--transition);
        }

        .back-link:hover {
            color: var(--rose-gold-dark);
        }

        @media (max-width: 768px) {
            .featured-grid {
                grid-template-columns: repeat(2, 1fr);
            }

            .jewels-grid {
                grid-template-columns: repeat(2, 1fr);
            }
        }
  
  </style>
</head>
<body>
    <%- include('partials/navbarre.ejs') %>

    <div class="admin-header">
        <div class="container">
            <h1><i class="fas fa-star"></i> <%= title %></h1>
            <p>Sélectionnez jusqu'à 4 bijoux à mettre en avant sur la page d'accueil</p>
        </div>
    </div>

    <div class="container">
        <a href="/" class="back-link">
            <i class="fas fa-arrow-left"></i>
            Retour à l'accueil
        </a>

        <!-- Section des coups de cœur actuels -->
        <div class="section">
            <h2 class="section-title">
                <i class="fas fa-heart"></i>
                Coups de Cœur Actuels (<span id="featured-count"><%= featuredJewels.length %></span>/4)
            </h2>
            
            <div class="featured-grid" id="featured-grid">
                <% for (let i = 0; i < 4; i++) { %>
                    <div class="featured-slot <%= featuredJewels[i] ? 'occupied' : 'empty' %>" data-slot="<%= i + 1 %>">
                        <% if (featuredJewels[i]) { %>
                            <div class="featured-jewel" data-jewel-id="<%= featuredJewels[i].id %>">
                                <% if (featuredJewels[i].image) { %>
                                    <img src="/uploads/jewels/<%= featuredJewels[i].image %>" alt="<%= featuredJewels[i].name %>" class="featured-jewel-img">
                                <% } else { %>
                                    <div class="jewel-placeholder featured-jewel-img">
                                        <i class="fas fa-gem"></i>
                                    </div>
                                <% } %>
                                <h4><%= featuredJewels[i].name %></h4>
                                <div class="price"><%= Number(featuredJewels[i].price_ttc).toFixed(2) %> €</div>
                                <button class="remove-featured" onclick="removeFromFeatured(<%= featuredJewels[i].id %>)">
                                    <i class="fas fa-times"></i> Retirer
                                </button>
                            </div>
                        <% } else { %>
                            <div class="empty-slot">
                                <i class="fas fa-plus-circle fa-3x" style="color: var(--rose-gold-light); margin-bottom: 10px;"></i>
                                <p style="color: #666;">Slot <%= i + 1 %> libre</p>
                            </div>
                        <% } %>
                    </div>
                <% } %>
            </div>
        </div>

        <!-- Section de sélection des bijoux -->
        <div class="section">
            <h2 class="section-title">
                <i class="fas fa-gems"></i>
                Tous les Bijoux
            </h2>
            
            <div class="search-box">
                <input type="text" class="search-input" id="search-input" placeholder="Rechercher un bijou par nom...">
                <i class="fas fa-search search-icon"></i>
            </div>

            <div class="jewels-grid" id="jewels-grid">
                <% allJewels.forEach(jewel => { %>
                    <div class="jewel-card <%= jewel.is_featured ? 'featured' : '' %>" data-jewel-id="<%= jewel.id %>" data-name="<%= jewel.name.toLowerCase() %>">
                        <% if (jewel.image) { %>
                            <img src="/uploads/jewels/<%= jewel.image %>" alt="<%= jewel.name %>" class="jewel-img">
                        <% } else { %>
                            <div class="jewel-placeholder">
                                <i class="fas fa-gem"></i>
                            </div>
                        <% } %>
                        
                        <div class="jewel-name"><%= jewel.name %></div>
                        <div class="jewel-category"><%= jewel.category?.name || 'Sans catégorie' %></div>
                        <div class="jewel-price"><%= Number(jewel.price_ttc).toFixed(2) %> €</div>
                        
                        <% if (jewel.is_featured) { %>
                            <button class="remove-featured" onclick="removeFromFeatured(<%= jewel.id %>)">
                                <i class="fas fa-heart-broken"></i> Retirer des coups de cœur
                            </button>
                        <% } else { %>
                            <button class="add-featured" onclick="addToFeatured(<%= jewel.id %>, '<%= jewel.name %>')" <%= featuredJewels.length >= 4 ? 'disabled' : '' %>>
                                <i class="fas fa-heart"></i> Ajouter aux coups de cœur
                            </button>
                        <% } %>
                    </div>
                <% }); %>
            </div>
        </div>
    </div>

    <!-- Notification -->
    <div id="notification" class="notification">
        <div class="notification-content">
            <i class="fas fa-check-circle"></i>
            <span id="notification-message"></span>
        </div>
    </div>

    <script>

        window.addEventListener('unhandledrejection', function(event) {
    console.error('❌ Promesse rejetée:', event.reason);
    showNotification('Une erreur inattendue s\'est produite', true);
});

window.addEventListener('error', function(event) {
    console.error('❌ Erreur JavaScript:', event.error);
});

        // Recherche en temps réel
        document.getElementById('search-input').addEventListener('input', function() {
            const searchTerm = this.value.toLowerCase();
            const jewelCards = document.querySelectorAll('.jewel-card');
            
            jewelCards.forEach(card => {
                const jewelName = card.dataset.name;
                if (jewelName.includes(searchTerm)) {
                    card.style.display = 'block';
                } else {
                    card.style.display = 'none';
                }
            });
        });

        // Ajouter aux coups de cœur
        async function addToFeatured(jewelId, jewelName) {
            try {
                const response = await fetch('/admin/featured/add', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ jewelId })
                });

                const data = await response.json();

                if (data.success) {
                    showNotification(`${jewelName} ajouté aux coups de cœur !`);
                    setTimeout(() => location.reload(), 1000);
                } else {
                    showNotification(data.message, true);
                }
            } catch (error) {
                showNotification('Erreur lors de l\'ajout', true);
            }
        }

        // Retirer des coups de cœur
      async function removeFromFeatured(jewelId) {
    try {
        console.log('🔄 Suppression coup de cœur:', jewelId);
        
        // Afficher un loader
        showNotification('Suppression en cours...', false);
        
        const response = await fetch('/admin/coups-de-coeur/retirer', {
            method: 'POST',
            headers: { 
                'Content-Type': 'application/json',
                'Accept': 'application/json'
            },
            body: JSON.stringify({ jewelId: parseInt(jewelId) })
        });

        // Vérifier si la réponse est OK
        if (!response.ok) {
            throw new Error(`Erreur HTTP: ${response.status}`);
        }

        const data = await response.json();
        console.log('📥 Réponse serveur:', data);

        if (data.success) {
            showNotification('✅ Bijou retiré des coups de cœur avec succès !', false);
            
            // Mettre à jour l'interface immédiatement
            updateUIAfterRemoval(jewelId);
            
            // Recharger après un délai pour synchroniser
            setTimeout(() => {
                window.location.reload();
            }, 1500);
        } else {
            throw new Error(data.message || 'Erreur inconnue');
        }
        
    } catch (error) {
        console.error('❌ Erreur frontend:', error);
        showNotification(`❌ Erreur: ${error.message}`, true);
        
        // Ne pas recharger en cas d'erreur
        // setTimeout(() => location.reload(), 1000); // ← SUPPRIMÉ
    }
}

// Fonction pour mettre à jour l'interface immédiatement
function updateUIAfterRemoval(jewelId) {
    // Trouver et supprimer l'élément de la liste des coups de cœur
    const featuredItem = document.querySelector(`[data-jewel-id="${jewelId}"]`);
    if (featuredItem) {
        featuredItem.style.opacity = '0.5';
        featuredItem.style.pointerEvents = 'none';
        
        // Ajouter un indicateur visuel
        const indicator = document.createElement('div');
        indicator.innerHTML = '✅ Retiré';
        indicator.style.cssText = `
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: #4caf50;
            color: white;
            padding: 5px 10px;
            border-radius: 4px;
            font-size: 12px;
            z-index: 1000;
        `;
        featuredItem.style.position = 'relative';
        featuredItem.appendChild(indicator);
    }
    
    // Mettre à jour le bouton dans la liste principale
    const mainListButton = document.querySelector(`button[onclick*="${jewelId}"][onclick*="removeFromFeatured"]`);
    if (mainListButton) {
        mainListButton.textContent = '+ Ajouter';
        mainListButton.className = mainListButton.className.replace('btn-danger', 'btn-success');
        mainListButton.setAttribute('onclick', `addToFeatured(${jewelId}, 'Bijou')`);
    }
}

        // Afficher notification
       
           function showNotification(message, isError = false) {
    // Supprimer les anciennes notifications
    const existingNotifications = document.querySelectorAll('.notification.show');
    existingNotifications.forEach(notif => notif.classList.remove('show'));
    
    const notification = document.getElementById('notification');
    const messageEl = document.getElementById('notification-message');
    const icon = notification.querySelector('i');
    
    notification.className = `notification ${isError ? 'error' : 'success'} show`;
    messageEl.textContent = message;
    icon.className = isError ? 'fas fa-exclamation-triangle' : 'fas fa-check-circle';
    
    // Auto-masquer après 4 secondes
    setTimeout(() => {
        notification.classList.remove('show');
    }, 4000);
}
    </script>
</body>
</html>