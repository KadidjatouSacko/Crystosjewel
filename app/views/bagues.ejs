<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title || 'Bagues - CrystoJewel' %></title>
    <link rel="stylesheet" href="/css/bijoux.css">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">

    <style>
        :root {
            --rose-gold: #b76e79;
            --rose-gold-light: #e8c2c8;
            --rose-gold-dark: #7d4b53;
            --cream: #fff8f0;
            --dark-text: #3a3a3a;
            --light-text: #666;
            --border-light: #e0e0e0;
            --white-soft: #fafafa;
            --shadow-soft: 0 4px 15px rgba(0, 0, 0, 0.1);
            --shadow-hover: 0 8px 25px rgba(0, 0, 0, 0.15);
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', sans-serif;
            background: var(--white-soft);
            color: var(--dark-text);
            line-height: 1.6;
        }

        /* Header avec navigation existante */
        .header-clean {
            background: white;
            padding: 15px 0;
            border-bottom: 1px solid var(--border-light);
            position: sticky;
            top: 0;
            z-index: 1000;
            box-shadow: var(--shadow-soft);
        }

        .header-content {
            max-width: 1400px;
            margin: 0 auto;
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0 20px;
        }

        .logo {
            font-size: 24px;
            font-weight: 600;
            color: var(--rose-gold);
            letter-spacing: -0.5px;
        }

        .nav-links {
            display: flex;
            gap: 40px;
            list-style: none;
        }

        .nav-links a {
            text-decoration: none;
            color: var(--dark-text);
            font-weight: 400;
            transition: color 0.2s ease;
        }

        .nav-links a:hover {
            color: var(--rose-gold);
        }

        /* Container principal */
        .main-container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 40px 20px;
            display: grid;
            grid-template-columns: 280px 1fr;
            gap: 60px;
        }

        /* Sidebar filtres avec couleurs rose gold */
        .filters-sidebar {
            background: white;
            border-radius: 12px;
            padding: 30px;
            height: fit-content;
            box-shadow: var(--shadow-soft);
            position: sticky;
            top: 120px;
            border: 1px solid var(--rose-gold-light);
        }

        .filters-title {
            font-size: 18px;
            font-weight: 600;
            margin-bottom: 25px;
            color: var(--rose-gold-dark);
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .filter-group {
            margin-bottom: 25px;
            padding-bottom: 20px;
            border-bottom: 1px solid var(--rose-gold-light);
        }

        .filter-group:last-child {
            border-bottom: none;
            margin-bottom: 0;
        }

        .filter-label {
            font-size: 14px;
            font-weight: 500;
            color: var(--rose-gold-dark);
            margin-bottom: 12px;
            display: block;
        }

        .filter-options {
            display: flex;
            flex-direction: column;
            gap: 8px;
        }

        .filter-option {
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 8px 0;
            cursor: pointer;
            transition: all 0.2s ease;
        }

        .filter-option:hover {
            color: var(--rose-gold);
        }

        .filter-option input[type="checkbox"] {
            margin-right: 10px;
            accent-color: var(--rose-gold);
            transform: scale(1.1);
        }

        .filter-option label {
            flex: 1;
            cursor: pointer;
            font-size: 13px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .filter-count {
            background: linear-gradient(135deg, var(--rose-gold), var(--rose-gold-dark));
            color: white;
            padding: 2px 6px;
            border-radius: 10px;
            font-size: 11px;
            font-weight: 500;
            min-width: 20px;
            text-align: center;
            transition: all 0.3s ease;
        }

        /* Boutons d'action */
        .filter-actions {
            margin-top: 25px;
            display: flex;
            flex-direction: column;
            gap: 10px;
        }

        .btn-filter {
            padding: 12px 20px;
            border: none;
            border-radius: 8px;
            font-size: 13px;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.2s ease;
        }

        .btn-apply {
            background: linear-gradient(135deg, var(--rose-gold), var(--rose-gold-dark));
            color: white;
        }

        .btn-apply:hover {
            background: linear-gradient(135deg, var(--rose-gold-dark), #6d3f47);
            transform: translateY(-1px);
        }

        .btn-clear {
            background: #f5f5f5;
            color: var(--dark-text);
            border: 1px solid var(--border-light);
        }

        .btn-clear:hover {
            background: #e5e5e5;
        }

        /* Section produits */
        .products-section {
            min-height: 100vh;
        }

        .products-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 30px;
        }

        .products-title {
            font-size: 28px;
            font-weight: 600;
            color: var(--rose-gold-dark);
        }

        .products-count {
            font-size: 14px;
            color: var(--light-text);
        }

        .sort-select {
            padding: 8px 15px;
            border: 1px solid var(--rose-gold-light);
            border-radius: 6px;
            background: white;
            font-size: 13px;
            cursor: pointer;
            color: var(--dark-text);
        }

        .sort-select:focus {
            outline: none;
            border-color: var(--rose-gold);
        }

        /* Grille produits responsive */
        .products-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
            gap: 30px;
        }

        /* Mobile : 2 colonnes */
        @media (max-width: 768px) {
            .products-grid {
                grid-template-columns: repeat(2, 1fr);
                gap: 15px;
            }
        }

        /* Cartes produits avec couleurs rose gold */
        .product-card {
            background: white;
            border-radius: 12px;
            overflow: hidden;
            box-shadow: var(--shadow-soft);
            transition: all 0.3s ease;
            position: relative;
            cursor: pointer;
            border: 1px solid var(--border-light);
        }

        .product-card:hover {
            transform: translateY(-5px);
            box-shadow: var(--shadow-hover);
            border-color: var(--rose-gold-light);
        }

        /* Image container avec carousel */
        .product-image-container {
            position: relative;
            height: 300px;
            overflow: hidden;
            background: var(--cream);
        }

        @media (max-width: 768px) {
            .product-image-container {
                height: 200px;
            }
        }

        .product-images {
            display: flex;
            height: 100%;
            transition: transform 0.4s ease;
        }

        .product-image {
            min-width: 100%;
            height: 100%;
            object-fit: contain;
            object-position: center;
        }

        .placeholder-image {
            width: 100%;
            height: 100%;
            display: flex;
            align-items: center;
            justify-content: center;
            background: linear-gradient(135deg, var(--rose-gold-light), var(--cream));
            color: var(--rose-gold);
            font-size: 3rem;
        }

        /* Navigation images */
        .image-nav {
            position: absolute;
            bottom: 15px;
            left: 50%;
            transform: translateX(-50%);
            display: flex;
            gap: 6px;
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        .product-card:hover .image-nav {
            opacity: 1;
        }

        .image-dot {
            width: 8px;
            height: 8px;
            border-radius: 50%;
            background: rgba(255,255,255,0.5);
            cursor: pointer;
            transition: all 0.2s ease;
        }

        .image-dot.active {
            background: var(--rose-gold);
            transform: scale(1.2);
        }

        /* Badge produit */
        .product-badge {
            position: absolute;
            top: 12px;
            left: 12px;
            background: var(--rose-gold);
            color: white;
            padding: 4px 8px;
            border-radius: 12px;
            font-size: 11px;
            font-weight: 500;
            z-index: 2;
        }

        .product-badge.promo {
            background: #E74C3C;
        }

        .product-badge.nouveau {
            background: #27AE60;
        }

        /* Favori */
        .product-favorite {
            position: absolute;
            top: 12px;
            right: 12px;
            width: 36px;
            height: 36px;
            border-radius: 50%;
            background: rgba(255,255,255,0.9);
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: all 0.2s ease;
            z-index: 2;
        }

        .product-favorite:hover {
            background: var(--rose-gold);
            color: white;
        }

        /* Info produit */
        .product-info {
            padding: 20px;
        }

        @media (max-width: 768px) {
            .product-info {
                padding: 15px;
            }
        }

        .product-name {
            font-size: 16px;
            font-weight: 600;
            margin-bottom: 8px;
            color: var(--dark-text);
        }

        @media (max-width: 768px) {
            .product-name {
                font-size: 14px;
            }
        }

        .product-description {
            font-size: 13px;
            color: var(--light-text);
            margin-bottom: 8px;
            line-height: 1.4;
        }

        @media (max-width: 768px) {
            .product-description {
                font-size: 12px;
                margin-bottom: 6px;
            }
        }

        .product-materials {
            font-size: 12px;
            color: var(--light-text);
            margin-bottom: 12px;
        }

        @media (max-width: 768px) {
            .product-materials {
                font-size: 11px;
                margin-bottom: 8px;
            }
        }

        .product-price {
            font-size: 18px;
            font-weight: 600;
            color: var(--rose-gold);
            margin-bottom: 12px;
        }

        @media (max-width: 768px) {
            .product-price {
                font-size: 16px;
                margin-bottom: 8px;
            }
        }

        /* Bouton panier */
        .product-actions {
            display: flex;
            gap: 8px;
        }

        .product-btn {
            flex: 1;
            padding: 10px 16px;
            border: none;
            border-radius: 6px;
            font-size: 13px;
            font-weight: 500;
            cursor: pointer;
            text-align: center;
            text-decoration: none;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 6px;
        }

        @media (max-width: 768px) {
            .product-btn {
                padding: 8px 12px;
                font-size: 12px;
            }
        }

        .view-jewel-btn {
            background: linear-gradient(135deg, var(--rose-gold), var(--rose-gold-dark));
            color: white;
            box-shadow: 0 4px 15px rgba(183, 110, 121, 0.3);
        }

        .view-jewel-btn:hover {
            background: linear-gradient(135deg, var(--rose-gold-dark), #6d3f47);
            box-shadow: 0 6px 20px rgba(183, 110, 121, 0.4);
            color: white;
            text-decoration: none;
            transform: translateY(-1px);
        }

        /* Responsive Design */
        @media (max-width: 1024px) {
            .main-container {
                grid-template-columns: 1fr;
                gap: 30px;
            }

            .filters-sidebar {
                position: relative;
                top: 0;
                order: 2;
            }
        }

        @media (max-width: 768px) {
            .main-container {
                padding: 20px 15px;
            }

            .filters-sidebar {
                padding: 20px;
            }

            .nav-links {
                display: none;
            }

            .products-header {
                flex-direction: column;
                gap: 15px;
                align-items: flex-start;
            }
        }

        /* Animation d'entrée */
        .product-card {
            opacity: 0;
            transform: translateY(20px);
            animation: fadeInUp 0.6s ease forwards;
        }

        @keyframes fadeInUp {
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .product-card:nth-child(1) { animation-delay: 0.1s; }
        .product-card:nth-child(2) { animation-delay: 0.2s; }
        .product-card:nth-child(3) { animation-delay: 0.3s; }
        .product-card:nth-child(4) { animation-delay: 0.4s; }
        .product-card:nth-child(5) { animation-delay: 0.5s; }
        .product-card:nth-child(6) { animation-delay: 0.6s; }
    </style>
</head>
<body>
    <!-- Header avec navigation existante -->
    <header class="header-clean">
        <%- include('partials/navbarre.ejs') %>
    </header>

    <!-- Container principal -->
    <div class="main-container">
        <!-- Sidebar filtres -->
        <aside class="filters-sidebar">
            <div class="filters-title">
                <i class="fas fa-filter"></i>
                Filtres
            </div>

            <form method="GET" action="/bijoux/bagues" id="filterForm">
                <!-- Filtre Matériau -->
                <% if (typeof availableFilters !== 'undefined' && availableFilters && availableFilters.materials && availableFilters.materials.length > 0) { %>
                <div class="filter-group">
                    <label class="filter-label">Matériau</label>
                    <div class="filter-options">
                        <% availableFilters.materials.forEach(material => { %>
                            <% if (material.count > 0) { %>
                            <div class="filter-option">
                                <input type="checkbox" name="matiere" value="<%= material.name %>" id="mat_<%= material.name.replace(/\s+/g, '_') %>"
                                    <% if (filters && filters.matiere && filters.matiere.includes(material.name)) { %>checked<% } %>>
                                <label for="mat_<%= material.name.replace(/\s+/g, '_') %>">
                                    <span><%= material.name %></span>
                                    <span class="filter-count" data-original="<%= material.count %>"><%= material.count %></span>
                                </label>
                            </div>
                            <% } %>
                        <% }); %>
                    </div>
                </div>
                <% } %>

                <!-- Filtre Prix -->
                <div class="filter-group">
                    <label class="filter-label">Prix</label>
                    <div class="filter-options">
                        <% 
                        const priceRanges = [
                            { value: '0-20', label: 'Moins de 20€' },
                            { value: '21-40', label: '21€ - 40€' },
                            { value: '41-60', label: '41€ - 60€' },
                            { value: '61-80', label: '61€ - 80€' },
                            { value: '80+', label: 'Plus de 80€' }
                        ];
                        %>
                        <% priceRanges.forEach(priceRange => { %>
                            <% 
                            let count = 0;
                            if (typeof availableFilters !== 'undefined' && availableFilters && availableFilters.priceRangeOptions) {
                                const found = availableFilters.priceRangeOptions.find(p => p.value === priceRange.value);
                                count = found ? found.count : 0;
                            }
                            %>
                            <% if (count > 0) { %>
                            <div class="filter-option">
                                <input type="checkbox" name="prix" value="<%= priceRange.value %>" id="price_<%= priceRange.value %>"
                                    <% if (filters && filters.prix && filters.prix.includes(priceRange.value)) { %>checked<% } %>>
                                <label for="price_<%= priceRange.value %>">
                                    <span><%= priceRange.label %></span>
                                    <span class="filter-count" data-original="<%= count %>"><%= count %></span>
                                </label>
                            </div>
                            <% } %>
                        <% }); %>
                    </div>
                </div>

                <!-- Filtre Tailles -->
                <% if (typeof availableFilters !== 'undefined' && availableFilters && availableFilters.sizes && availableFilters.sizes.length > 0) { %>
                <div class="filter-group">
                    <label class="filter-label">Taille</label>
                    <div class="filter-options">
                        <% availableFilters.sizes.forEach(size => { %>
                            <% if (size.count > 0) { %>
                            <div class="filter-option">
                                <input type="checkbox" name="tailles" value="<%= size.name %>" id="size_<%= size.name.replace(/\s+/g, '_') %>"
                                    <% if (filters && filters.tailles && filters.tailles.includes(size.name)) { %>checked<% } %>>
                                <label for="size_<%= size.name.replace(/\s+/g, '_') %>">
                                    <span><%= size.name %></span>
                                    <span class="filter-count" data-original="<%= size.count %>"><%= size.count %></span>
                                </label>
                            </div>
                            <% } %>
                        <% }); %>
                    </div>
                </div>
                <% } %>

                <!-- Filtre Carats -->
                <% if (typeof availableFilters !== 'undefined' && availableFilters && availableFilters.carats && availableFilters.carats.length > 0) { %>
                <div class="filter-group">
                    <label class="filter-label">Carat</label>
                    <div class="filter-options">
                        <% availableFilters.carats.forEach(carat => { %>
                            <% if (carat.count > 0) { %>
                            <div class="filter-option">
                                <input type="checkbox" name="carat" value="<%= carat.carat %>" id="carat_<%= carat.carat %>"
                                    <% if (filters && filters.carat && filters.carat.includes(carat.carat.toString())) { %>checked<% } %>>
                                <label for="carat_<%= carat.carat %>">
                                    <span><%= carat.carat %>k</span>
                                    <span class="filter-count" data-original="<%= carat.count %>"><%= carat.count %></span>
                                </label>
                            </div>
                            <% } %>
                        <% }); %>
                    </div>
                </div>
                <% } %>

                <!-- Actions -->
                <div class="filter-actions">
                    <button type="submit" class="btn-filter btn-apply">
                        <i class="fas fa-check"></i> Appliquer
                    </button>
                    <button type="button" class="btn-filter btn-clear" onclick="clearFilters()">
                        <i class="fas fa-times"></i> Effacer
                    </button>
                </div>
            </form>
        </aside>

        <!-- Section produits -->
        <main class="products-section">
            <!-- Header produits -->
            <div class="products-header">
                <div>
                    <h1 class="products-title">Bagues</h1>
                    <% if (jewels && jewels.length > 0) { %>
                        <div class="products-count">
                            <%= jewels.length %> produit<%= jewels.length > 1 ? 's' : '' %>
                            <% 
                            const activeFiltersCount = (filters && filters.matiere ? filters.matiere.length : 0) + 
                                                     (filters && filters.prix ? filters.prix.length : 0) + 
                                                     (filters && filters.tailles ? filters.tailles.length : 0) + 
                                                     (filters && filters.carat ? filters.carat.length : 0);
                            %>
                            <% if (activeFiltersCount > 0) { %>
                                · <%= activeFiltersCount %> filtre<%= activeFiltersCount > 1 ? 's' : '' %>
                            <% } %>
                        </div>
                    <% } %>
                </div>
                <select name="sort" class="sort-select" onchange="document.getElementById('filterForm').submit()">
                    <option value="newest" <% if (filters && filters.sort === 'newest') { %>selected<% } %>>Nouveautés</option>
                    <option value="price_asc" <% if (filters && filters.sort === 'price_asc') { %>selected<% } %>>Prix croissant</option>
                    <option value="price_desc" <% if (filters && filters.sort === 'price_desc') { %>selected<% } %>>Prix décroissant</option>
                    <option value="popular" <% if (filters && filters.sort === 'popular') { %>selected<% } %>>Popularité</option>
                    <option value="name_asc" <% if (filters && filters.sort === 'name_asc') { %>selected<% } %>>Nom A-Z</option>
                </select>
            </div>

            <!-- Grille produits -->
            <div class="products-grid">
                <% if (jewels && jewels.length > 0) { %>
                    <% jewels.forEach((jewel, index) => { %>
                        <div class="product-card" data-jewel-id="<%= jewel.id %>" style="animation-delay: <%= (index % 6) * 0.1 %>s">
                            <!-- Badge -->
                            <% if (jewel.badge) { %>
                                <div class="product-badge <%= jewel.badgeClass %>"><%= jewel.badge %></div>
                            <% } %>

                            <!-- Favori -->
                            <div class="product-favorite">
                                <i class="far fa-heart"></i>
                            </div>

                            <!-- Images avec carousel -->
                            <div class="product-image-container" data-current-image="0">
                                <div class="product-images">
                                    <% if (jewel.image && jewel.image !== 'no-image.jpg') { %>
                                        <img src="/uploads/jewels/<%= jewel.image %>" alt="<%= jewel.name %>" class="product-image"
                                             onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';">
                                        <!-- Images supplémentaires simulées -->
                                        <img src="/uploads/jewels/<%= jewel.image %>" alt="<%= jewel.name %> - vue 2" class="product-image">
                                        <img src="/uploads/jewels/<%= jewel.image %>" alt="<%= jewel.name %> - vue 3" class="product-image">
                                    <% } else { %>
                                        <div class="placeholder-image">
                                            <i class="fas fa-gem"></i>
                                        </div>
                                    <% } %>
                                </div>
                                
                                <!-- Navigation images -->
                                <div class="image-nav">
                                    <span class="image-dot active" data-image="0"></span>
                                    <span class="image-dot" data-image="1"></span>
                                    <span class="image-dot" data-image="2"></span>
                                </div>
                            </div>

                            <!-- Info produit -->
                            <div class="product-info">
                                <h3 class="product-name"><%= jewel.name %></h3>
                                <p class="product-description"><%= jewel.description || 'Magnifique bague de notre collection' %></p>
                                
                                <% if (jewel.matiere || (jewel.tailles && jewel.tailles.length > 0) || jewel.carat) { %>
                                <div class="product-materials">
                                    <% if (jewel.matiere) { %>
                                        <%= jewel.matiere %>
                                    <% } %>
                                    <% if (jewel.tailles && jewel.tailles.length > 0) { %>
                                        <% if (jewel.matiere) { %> · <% } %>
                                        Tailles: <% jewel.tailles.forEach((taille, index) => { %>
                                            <%= taille.taille %><% if (index < jewel.tailles.length - 1) { %>, <% } %>
                                        <% }); %>
                                    <% } %>
                                    <% if (jewel.carat) { %>
                                        <% if (jewel.matiere || (jewel.tailles && jewel.tailles.length > 0)) { %> · <% } %>
                                        <%= jewel.carat %>k
                                    <% } %>
                                </div>
                                <% } %>
                                
                                <div class="product-price">
                                    <% if (jewel.hasDiscount) { %>
                                        <%= jewel.formattedCurrentPrice %>
                                        <del style="font-size: 14px; color: #999; margin-left: 8px;"><%= jewel.formattedOriginalPrice %></del>
                                    <% } else { %>
                                        <%= jewel.formattedCurrentPrice || jewel.formattedPrice %>
                                    <% } %>
                                </div>
                                
                                <!-- Actions avec panier -->
                                <div class="product-actions">
                                    <a href="/bijoux/<%= jewel.slug %>" class="product-btn view-jewel-btn">
                                        <i class="fas fa-eye"></i> Voir détails
                                    </a>
                                </div>
                            </div>
                        </div>
                    <% }); %>
                <% } else { %>
                    <div style="grid-column: 1 / -1; text-align: center; padding: 60px 20px; color: var(--light-text);">
                        <h3 style="font-size: 1.5rem; margin-bottom: 15px; color: var(--rose-gold);">Aucune bague trouvée</h3>
                        <p>Essayez de modifier vos filtres ou effacez-les pour voir tous les produits.</p>
                        <button onclick="clearFilters()" style="margin-top: 20px; padding: 12px 24px; background: var(--rose-gold); color: white; border: none; border-radius: 8px; cursor: pointer;">
                            Voir tous les produits
                        </button>
                    </div>
                    <% } %>
            </div>

            <!-- Pagination -->
            <% if (pagination && pagination.totalPages > 1) { %>
                <div style="display: flex; justify-content: center; align-items: center; gap: 10px; margin-top: 50px;">
                    <% if (pagination.hasPrevPage) { %>
                        <a href="?page=<%= pagination.prevPage %>" style="display: flex; align-items: center; justify-content: center; width: 45px; height: 45px; border-radius: 50%; border: 2px solid var(--border-light); text-decoration: none; color: var(--dark-text); font-size: 14px; font-weight: 600; transition: all 0.3s ease; background: white;">
                            <i class="fas fa-chevron-left"></i>
                        </a>
                    <% } %>
                    
                    <% 
                    const currentPage = pagination.currentPage;
                    const totalPages = pagination.totalPages;
                    let startPage = Math.max(1, currentPage - 2);
                    let endPage = Math.min(totalPages, currentPage + 2);
                    
                    if (currentPage <= 3) {
                        endPage = Math.min(5, totalPages);
                    }
                    if (currentPage > totalPages - 3) {
                        startPage = Math.max(1, totalPages - 4);
                    }
                    %>
                    
                    <% if (startPage > 1) { %>
                        <a href="?page=1" style="display: flex; align-items: center; justify-content: center; width: 45px; height: 45px; border-radius: 50%; border: 2px solid var(--border-light); text-decoration: none; color: var(--dark-text); font-size: 14px; font-weight: 600; transition: all 0.3s ease; background: white;">1</a>
                        <% if (startPage > 2) { %>
                            <span style="color: var(--light-text); padding: 0 10px;">...</span>
                        <% } %>
                    <% } %>
                    
                    <% for (let i = startPage; i <= endPage; i++) { %>
                        <% if (i === currentPage) { %>
                            <span style="display: flex; align-items: center; justify-content: center; width: 45px; height: 45px; border-radius: 50%; background: linear-gradient(135deg, var(--rose-gold), var(--rose-gold-dark)); color: white; border: 2px solid var(--rose-gold); font-size: 14px; font-weight: 600; box-shadow: 0 4px 15px rgba(183, 110, 121, 0.3);"><%= i %></span>
                        <% } else { %>
                            <a href="?page=<%= i %>" style="display: flex; align-items: center; justify-content: center; width: 45px; height: 45px; border-radius: 50%; border: 2px solid var(--border-light); text-decoration: none; color: var(--dark-text); font-size: 14px; font-weight: 600; transition: all 0.3s ease; background: white;"><%= i %></a>
                        <% } %>
                    <% } %>
                    
                    <% if (endPage < totalPages) { %>
                        <% if (endPage < totalPages - 1) { %>
                            <span style="color: var(--light-text); padding: 0 10px;">...</span>
                        <% } %>
                        <a href="?page=<%= totalPages %>" style="display: flex; align-items: center; justify-content: center; width: 45px; height: 45px; border-radius: 50%; border: 2px solid var(--border-light); text-decoration: none; color: var(--dark-text); font-size: 14px; font-weight: 600; transition: all 0.3s ease; background: white;"><%= totalPages %></a>
                    <% } %>
                    
                    <% if (pagination.hasNextPage) { %>
                        <a href="?page=<%= pagination.nextPage %>" style="display: flex; align-items: center; justify-content: center; width: 45px; height: 45px; border-radius: 50%; border: 2px solid var(--border-light); text-decoration: none; color: var(--dark-text); font-size: 14px; font-weight: 600; transition: all 0.3s ease; background: white;">
                            <i class="fas fa-chevron-right"></i>
                        </a>
                    <% } %>
                </div>
            <% } %>
        </main>
    </div>

    <!-- Footer -->
    <%- include('partials/footer') %>

    <!-- JavaScript pour carousel et filtres -->
    <script>
        // Carousel d'images
        class ProductCarousel {
            constructor() {
                this.initCarousels();
            }

            initCarousels() {
                document.querySelectorAll('.product-image-container').forEach(container => {
                    let currentImage = 0;
                    const images = container.querySelector('.product-images');
                    const dots = container.querySelectorAll('.image-dot');
                    const totalImages = dots.length;

                    // Auto-play carousel
                    const autoPlay = setInterval(() => {
                        currentImage = (currentImage + 1) % totalImages;
                        this.showImage(container, currentImage);
                    }, 3000);

                    // Pause on hover
                    container.addEventListener('mouseenter', () => clearInterval(autoPlay));
                    
                    // Click on dots
                    dots.forEach((dot, index) => {
                        dot.addEventListener('click', (e) => {
                            e.stopPropagation();
                            currentImage = index;
                            this.showImage(container, currentImage);
                        });
                    });

                    // Click to advance
                    container.addEventListener('click', (e) => {
                        e.stopPropagation();
                        currentImage = (currentImage + 1) % totalImages;
                        this.showImage(container, currentImage);
                    });
                });
            }

            showImage(container, index) {
                const images = container.querySelector('.product-images');
                const dots = container.querySelectorAll('.image-dot');
                
                images.style.transform = `translateX(-${index * 100}%)`;
                
                dots.forEach((dot, i) => {
                    dot.classList.toggle('active', i === index);
                });
            }
        }

        // Gestion des filtres avec adaptation dynamique
        class FilterManager {
            constructor() {
                this.originalCounts = new Map();
                this.setupEventListeners();
                this.storeOriginalCounts();
            }

            storeOriginalCounts() {
                document.querySelectorAll('.filter-count').forEach(count => {
                    const option = count.closest('.filter-option');
                    const input = option.querySelector('input[type="checkbox"]');
                    if (input) {
                        const key = `${input.name}:${input.value}`;
                        const originalCount = parseInt(count.dataset.original || count.textContent);
                        this.originalCounts.set(key, originalCount);
                    }
                });
                console.log(`📊 ${this.originalCounts.size} compteurs originaux stockés`);
            }

            setupEventListeners() {
                // Auto-submit sur changement de checkbox avec adaptation
                let filterTimeout;
                document.querySelectorAll('input[type="checkbox"]').forEach(checkbox => {
                    checkbox.addEventListener('change', () => {
                        console.log(`🔄 Filtre ${checkbox.name}: ${checkbox.value} ${checkbox.checked ? 'activé' : 'désactivé'}`);
                        
                        clearTimeout(filterTimeout);
                        filterTimeout = setTimeout(() => {
                            this.updateFilterCounts();
                            document.getElementById('filterForm').submit();
                        }, 1000);
                    });
                });

                // Favoris avec couleurs rose gold
                document.querySelectorAll('.product-favorite').forEach(fav => {
                    fav.addEventListener('click', (e) => {
                        e.stopPropagation();
                        const icon = fav.querySelector('i');
                        const isFavorite = icon.classList.contains('fas');
                        
                        if (isFavorite) {
                            icon.classList.remove('fas');
                            icon.classList.add('far');
                            fav.style.background = 'rgba(255,255,255,0.9)';
                            fav.style.color = '#666';
                        } else {
                            icon.classList.remove('far');
                            icon.classList.add('fas');
                            fav.style.background = 'var(--rose-gold)';
                            fav.style.color = 'white';
                        }
                    });
                });

                // Clic sur carte produit - LIEN CORRIGÉ
                document.querySelectorAll('.product-card').forEach(card => {
                    card.addEventListener('click', (e) => {
                        if (!e.target.closest('.product-favorite') && 
                            !e.target.closest('.image-nav') && 
                            !e.target.closest('.product-btn')) {
                            
                            const jewelId = card.dataset.jewelId;
                            const jewelName = card.querySelector('.product-name').textContent;
                            const slug = this.generateSlug(jewelName, jewelId);
                            
                            // Redirection vers la page produit avec le bon format
                            window.location.href = `/bijoux/${slug}`;
                        }
                    });
                });
            }

            generateSlug(name, id) {
                const slug = name
                    .toLowerCase()
                    .normalize('NFD')
                    .replace(/[\u0300-\u036f]/g, '')
                    .replace(/[^a-z0-9]+/g, '-')
                    .replace(/^-+|-+$/g, '');
                return `${slug}-${id}`;
            }

            updateFilterCounts() {
                const activeFilters = this.getActiveFiltersByType();
                const totalActiveFilters = Object.values(activeFilters).reduce((sum, filters) => sum + filters.length, 0);
                
                document.querySelectorAll('.filter-count').forEach(count => {
                    const option = count.closest('.filter-option');
                    const input = option.querySelector('input[type="checkbox"]');
                    
                    if (input && !input.checked) {
                        const key = `${input.name}:${input.value}`;
                        const originalCount = this.originalCounts.get(key) || parseInt(count.textContent);
                        
                        // Calculer la réduction basée sur les autres filtres actifs
                        const reductionFactor = this.calculateReductionFactor(input.name, activeFilters);
                        const adjustedCount = Math.max(0, Math.floor(originalCount * (1 - reductionFactor)));
                        
                        // Animation de changement
                        if (parseInt(count.textContent) !== adjustedCount) {
                            this.animateCountChange(count, adjustedCount);
                        }
                        
                        // Masquer les options avec 0 résultat
                        option.style.display = adjustedCount === 0 ? 'none' : 'flex';
                        option.style.opacity = adjustedCount === 0 ? '0.3' : '1';
                    }
                });
            }

            getActiveFiltersByType() {
                const grouped = {};
                document.querySelectorAll('input[type="checkbox"]:checked').forEach(checkbox => {
                    if (!grouped[checkbox.name]) grouped[checkbox.name] = [];
                    grouped[checkbox.name].push(checkbox.value);
                });
                return grouped;
            }

            calculateReductionFactor(filterType, activeFiltersByType) {
                let reductionFactor = 0;
                
                Object.entries(activeFiltersByType).forEach(([type, filters]) => {
                    if (type !== filterType) {
                        reductionFactor += filters.length * 0.2; // 20% de réduction par filtre actif
                    }
                });
                
                return Math.min(reductionFactor, 0.85); // Maximum 85% de réduction
            }

            animateCountChange(countElement, newCount) {
                countElement.style.transform = 'scale(1.2)';
                countElement.style.background = '#E74C3C';
                countElement.style.transition = 'all 0.3s ease';
                
                setTimeout(() => {
                    countElement.textContent = newCount;
                    countElement.style.transform = 'scale(1)';
                    countElement.style.background = 'linear-gradient(135deg, var(--rose-gold), var(--rose-gold-dark))';
                }, 150);
            }
        }

        // Fonction globale pour effacer les filtres
        function clearFilters() {
            document.querySelectorAll('input[type="checkbox"]').forEach(checkbox => {
                checkbox.checked = false;
            });
            document.querySelector('select[name="sort"]').value = 'newest';
            document.getElementById('filterForm').submit();
        }

        // Utilitaires pour la performance
        function debounce(func, wait) {
            let timeout;
            return function executedFunction(...args) {
                const later = () => {
                    clearTimeout(timeout);
                    func(...args);
                };
                clearTimeout(timeout);
                timeout = setTimeout(later, wait);
            };
        }

        // Initialisation principale
        document.addEventListener('DOMContentLoaded', function() {
            console.log('🎯 Initialisation CrystoJewel avec couleurs rose gold');
            
            // Initialiser le carousel
            new ProductCarousel();
            
            // Initialiser les filtres
            new FilterManager();
            
            // Animation d'entrée des cartes
            const observer = new IntersectionObserver((entries) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        entry.target.style.opacity = '1';
                        entry.target.style.transform = 'translateY(0)';
                    }
                });
            }, { threshold: 0.1 });

            document.querySelectorAll('.product-card').forEach(card => {
                observer.observe(card);
            });

            // Performance: Lazy loading des images
            if ('IntersectionObserver' in window) {
                const imageObserver = new IntersectionObserver((entries) => {
                    entries.forEach(entry => {
                        if (entry.isIntersecting) {
                            const img = entry.target;
                            if (img.dataset.src) {
                                img.src = img.dataset.src;
                                img.removeAttribute('data-src');
                                imageObserver.unobserve(img);
                            }
                        }
                    });
                });

                document.querySelectorAll('img[data-src]').forEach(img => {
                    imageObserver.observe(img);
                });
            }

            // Gestion responsive mobile
            const handleMobileLayout = () => {
                if (window.innerWidth <= 768) {
                    // Ajustements spécifiques mobile
                    document.querySelectorAll('.product-image-container').forEach(container => {
                        container.style.height = '200px';
                    });
                    
                    document.querySelectorAll('.product-info').forEach(info => {
                        info.style.padding = '15px';
                    });
                } else {
                    document.querySelectorAll('.product-image-container').forEach(container => {
                        container.style.height = '300px';
                    });
                    
                    document.querySelectorAll('.product-info').forEach(info => {
                        info.style.padding = '20px';
                    });
                }
            };

            window.addEventListener('resize', debounce(handleMobileLayout, 250));
            handleMobileLayout();

            // Smooth scroll pour la pagination
            document.querySelectorAll('a[href*="page="]').forEach(link => {
                link.addEventListener('click', () => {
                    window.scrollTo({ top: 0, behavior: 'smooth' });
                });
            });

            // Affichage du nombre de produits
            const productCount = document.querySelectorAll('.product-card').length;
            console.log(`✅ ${productCount} bagues affichées avec design CrystoJewel épuré`);

            // Notification de chargement avec couleurs rose gold
            if (productCount > 0) {
                const notification = document.createElement('div');
                notification.style.cssText = `
                    position: fixed; bottom: 20px; right: 20px;
                    background: linear-gradient(135deg, var(--rose-gold), var(--rose-gold-dark));
                    color: white; padding: 12px 20px; border-radius: 25px;
                    font-size: 14px; font-weight: 500; z-index: 1000;
                    transform: translateY(100px); transition: transform 0.3s ease;
                    box-shadow: 0 4px 20px rgba(183, 110, 121, 0.3);
                `;
                notification.innerHTML = `<i class="fas fa-check"></i> ${productCount} bagues CrystoJewel chargées`;
                document.body.appendChild(notification);

                setTimeout(() => {
                    notification.style.transform = 'translateY(0)';
                }, 500);

                setTimeout(() => {
                    notification.style.transform = 'translateY(100px)';
                    setTimeout(() => notification.remove(), 300);
                }, 3000);
            }

            // Messages de debug avec style
            console.log('%c✨ CrystoJewel Design System Ready', 'color: #b76e79; font-weight: bold; font-size: 16px;');
            console.log('%c🎨 Rose Gold Theme Applied', 'color: #e8c2c8; font-weight: bold;');
            console.log('%c📱 Mobile Responsive (2 colonnes)', 'color: #7d4b53; font-weight: bold;');
            console.log('%c🔄 Filtres adaptatifs activés', 'color: #b76e79;');
        });

        // Gestion des erreurs d'images avec fallback
        function handleImageError(img) {
            img.style.display = 'none';
            const placeholder = img.nextElementSibling;
            if (placeholder && placeholder.classList.contains('placeholder-image')) {
                placeholder.style.display = 'flex';
            }
        }

        // Export des classes pour usage externe
        window.ProductCarousel = ProductCarousel;
        window.FilterManager = FilterManager;
        window.clearFilters = clearFilters;
    </script>
</body>
</html>