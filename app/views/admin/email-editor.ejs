<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %> | CrystosJewel Admin</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/quill/1.3.7/quill.snow.min.css" rel="stylesheet">
    <style>
        :root {
            /* Couleurs principales de votre site */
            --rose-gold: #b76e79;
            --rose-gold-light: #e8c2c8;
            --rose-gold-dark: #7d4b53;
            --rose-gold-hover: #c98490;
            --cream: #fff8f0;
            --dark-text: #3a3a3a;
            --light-text: #f5f5f5;
            
            /* Couleurs système adaptées */
            --primary: var(--rose-gold);
            --primary-dark: var(--rose-gold-dark);
            --primary-light: var(--rose-gold-light);
            --success: #28a745;
            --warning: #ffc107;
            --danger: #dc3545;
            --dark: var(--dark-text);
            --gray-light: #f9f9f9;
            --gray-medium: #e0e0e0;
            --white: #ffffff;
            
            /* Effets */
            --border-radius: 12px;
            --shadow: 0 4px 12px rgba(183, 110, 121, 0.1);
            --shadow-lg: 0 6px 20px rgba(183, 110, 121, 0.15);
            --transition: all 0.3s ease;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Montserrat', -apple-system, BlinkMacSystemFont, sans-serif;
            background: linear-gradient(135deg, var(--cream) 0%, var(--rose-gold-light) 100%);
            color: var(--dark);
            line-height: 1.6;
            min-height: 100vh;
        }

        .container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 20px;
        }

        .header {
            background: var(--white);
            border-radius: var(--border-radius);
            padding: 30px;
            margin-bottom: 30px;
            box-shadow: var(--shadow);
        }

        .header h1 {
            font-size: 2rem;
            font-weight: 700;
            color: var(--rose-gold);
            margin-bottom: 10px;
        }

        .breadcrumb {
            color: var(--gray-medium);
            font-size: 0.9rem;
        }

        .breadcrumb a {
            color: var(--rose-gold);
            text-decoration: none;
        }

        .main-grid {
            display: grid;
            grid-template-columns: 1fr 350px;
            gap: 30px;
            height: calc(100vh - 200px);
        }

        .editor-panel {
            background: var(--white);
            border-radius: var(--border-radius);
            box-shadow: var(--shadow);
            display: flex;
            flex-direction: column;
            overflow: hidden;
        }

        .editor-header {
            padding: 20px 30px;
            border-bottom: 1px solid #e5e7eb;
            background: var(--gray-light);
        }

        .editor-tabs {
            display: flex;
            gap: 10px;
            margin-bottom: 20px;
        }

        .tab-btn {
            padding: 10px 20px;
            background: var(--white);
            border: 2px solid #e5e7eb;
            border-radius: 8px;
            cursor: pointer;
            font-weight: 500;
            transition: var(--transition);
        }

        .tab-btn.active {
            background: var(--rose-gold);
            color: var(--white);
            border-color: var(--rose-gold);
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-label {
            display: block;
            font-weight: 600;
            margin-bottom: 8px;
            color: var(--dark);
        }

        .form-control {
            width: 100%;
            padding: 12px 16px;
            border: 2px solid #e5e7eb;
            border-radius: 8px;
            font-size: 14px;
            transition: var(--transition);
        }

        .form-control:focus {
            outline: none;
            border-color: var(--rose-gold);
            box-shadow: 0 0 0 3px rgba(183, 110, 121, 0.1);
        }

        .editor-content {
            flex: 1;
            padding: 30px;
            overflow-y: auto;
        }

        .quill-container {
            height: 400px;
            border: 2px solid #e5e7eb;
            border-radius: 8px;
        }

        .sidebar {
            background: var(--white);
            border-radius: var(--border-radius);
            box-shadow: var(--shadow);
            display: flex;
            flex-direction: column;
            overflow: hidden;
        }

        .sidebar-section {
            border-bottom: 1px solid #e5e7eb;
        }

        .sidebar-header {
            padding: 20px;
            background: var(--gray-light);
            font-weight: 600;
            color: var(--dark);
        }

        .sidebar-content {
            padding: 20px;
        }

        .stats-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 15px;
            margin-bottom: 20px;
        }

        .stat-card {
            text-align: center;
            padding: 15px;
            background: var(--gray-light);
            border-radius: 8px;
        }

        .stat-value {
            font-size: 1.5rem;
            font-weight: 700;
            color: var(--rose-gold);
        }

        .stat-label {
            font-size: 0.8rem;
            color: var(--gray-medium);
            margin-top: 5px;
        }

        .recipient-selector {
            margin-bottom: 20px;
        }

        .recipient-option {
            display: flex;
            align-items: center;
            gap: 10px;
            padding: 12px;
            border: 2px solid #e5e7eb;
            border-radius: 8px;
            margin-bottom: 10px;
            cursor: pointer;
            transition: var(--transition);
        }

        .recipient-option:hover {
            background: var(--gray-light);
        }

        .recipient-option input[type="radio"] {
            margin: 0;
        }

        .templates-list {
            max-height: 300px;
            overflow-y: auto;
        }

        .template-item {
            padding: 15px;
            border: 1px solid #e5e7eb;
            border-radius: 8px;
            margin-bottom: 10px;
            cursor: pointer;
            transition: var(--transition);
        }

        .template-item:hover {
            background: var(--gray-light);
            border-color: var(--rose-gold);
        }

        .template-name {
            font-weight: 600;
            color: var(--dark);
            margin-bottom: 5px;
        }

        .template-subject {
            font-size: 0.9rem;
            color: var(--gray-medium);
        }

        .action-buttons {
            padding: 20px 30px;
            border-top: 1px solid #e5e7eb;
            background: var(--gray-light);
            display: flex;
            gap: 15px;
        }

        .btn {
            display: inline-flex;
            align-items: center;
            gap: 8px;
            padding: 12px 24px;
            border: none;
            border-radius: 8px;
            font-size: 14px;
            font-weight: 600;
            cursor: pointer;
            transition: var(--transition);
            text-decoration: none;
        }

        .btn-primary {
            background: linear-gradient(135deg, var(--rose-gold) 0%, var(--rose-gold-dark) 100%);
            color: var(--white);
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: var(--shadow-lg);
        }

        .btn-secondary {
            background: var(--gray-light);
            color: var(--dark);
            border: 2px solid #e5e7eb;
        }

        .btn-secondary:hover {
            background: #f1f5f9;
            border-color: var(--rose-gold);
        }

        .btn-success {
            background: var(--success);
            color: var(--white);
        }

        .btn-warning {
            background: var(--warning);
            color: var(--white);
        }

        .btn:disabled {
            opacity: 0.6;
            cursor: not-allowed;
            transform: none !important;
        }

        .jewels-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
            gap: 15px;
            max-height: 300px;
            overflow-y: auto;
        }

        .jewel-item {
            text-align: center;
            padding: 10px;
            border: 2px solid #e5e7eb;
            border-radius: 8px;
            cursor: pointer;
            transition: var(--transition);
        }

        .jewel-item:hover {
            border-color: var(--rose-gold);
            background: var(--gray-light);
        }

        .jewel-image {
            width: 80px;
            height: 80px;
            object-fit: cover;
            border-radius: 6px;
            margin-bottom: 8px;
        }

        .jewel-name {
            font-size: 0.8rem;
            font-weight: 600;
            margin-bottom: 4px;
        }

        .jewel-price {
            font-size: 0.8rem;
            color: var(--rose-gold);
            font-weight: 600;
        }

        .preview-panel {
            position: fixed;
            top: 0;
            right: -100%;
            width: 50%;
            height: 100vh;
            background: var(--white);
            box-shadow: -10px 0 30px rgba(0, 0, 0, 0.2);
            transition: right 0.3s ease;
            z-index: 1000;
            display: flex;
            flex-direction: column;
        }

        .preview-panel.active {
            right: 0;
        }

        .preview-header {
            padding: 20px;
            border-bottom: 1px solid #e5e7eb;
            background: var(--gray-light);
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .preview-content {
            flex: 1;
            padding: 20px;
            overflow-y: auto;
        }

        .close-preview {
            background: none;
            border: none;
            font-size: 1.5rem;
            cursor: pointer;
            color: var(--gray-medium);
        }

        .alert {
            padding: 15px 20px;
            border-radius: 8px;
            margin-bottom: 20px;
            border-left: 4px solid;
        }

        .alert-success {
            background: #f0fdf4;
            color: #166534;
            border-color: var(--success);
        }

        .alert-error {
            background: #fef2f2;
            color: #991b1b;
            border-color: var(--danger);
        }

        .alert-info {
            background: #eff6ff;
            color: #1d4ed8;
            border-color: var(--rose-gold);
        }

        .loading {
            display: none;
            align-items: center;
            gap: 10px;
            color: var(--gray-medium);
        }

        .loading.active {
            display: flex;
        }

        .spinner {
            width: 16px;
            height: 16px;
            border: 2px solid #e5e7eb;
            border-top: 2px solid var(--rose-gold);
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        /* Variables d'insertion */
        .variables-list {
            display: flex;
            flex-wrap: wrap;
            gap: 8px;
            margin-bottom: 20px;
        }

        .variable-tag {
            background: var(--rose-gold);
            color: var(--white);
            padding: 4px 8px;
            border-radius: 4px;
            font-size: 0.8rem;
            cursor: pointer;
            transition: var(--transition);
        }

        .variable-tag:hover {
            background: var(--rose-gold-dark);
        }

        /* Responsive */
        @media (max-width: 1200px) {
            .main-grid {
                grid-template-columns: 1fr;
                gap: 20px;
            }

            .sidebar {
                order: -1;
            }

            .preview-panel {
                width: 70%;
            }
        }

        @media (max-width: 768px) {
            .container {
                padding: 10px;
            }

            .header {
                padding: 20px;
            }

            .header h1 {
                font-size: 1.5rem;
            }

            .editor-content {
                padding: 20px;
            }

            .preview-panel {
                width: 90%;
            }

            .jewels-grid {
                grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
            }
        }
    </style>
</head>

<body>
    <!-- Navigation (inclure votre navbar existante) -->
    <%- include('../partials/navbarre.ejs') %>

    <div class="container">
        <!-- Header -->
        <div class="header">
            <h1>
                <i class="fas fa-envelope"></i>
                <%= title %>
            </h1>
            <div class="breadcrumb">
                <a href="/admin">Administration</a> › 
                <a href="/admin/emails/history">Emails</a> › 
                Éditeur
            </div>
        </div>

        <!-- Main Grid -->
        <div class="main-grid">
            <!-- Éditeur Principal -->
            <div class="editor-panel">
                <!-- Header de l'éditeur -->
                <div class="editor-header">
                    <div class="editor-tabs">
                        <div class="tab-btn active" data-tab="compose">
                            <i class="fas fa-edit"></i>
                            Composer
                        </div>
                        <div class="tab-btn" data-tab="design">
                            <i class="fas fa-palette"></i>
                            Design
                        </div>
                        <div class="tab-btn" data-tab="preview">
                            <i class="fas fa-eye"></i>
                            Aperçu
                        </div>
                    </div>

                    <!-- Variables disponibles -->
                    <div class="variables-list">
                        <div class="variable-tag" data-variable="{{first_name}}">{{first_name}}</div>
                        <div class="variable-tag" data-variable="{{last_name}}">{{last_name}}</div>
                        <div class="variable-tag" data-variable="{{email}}">{{email}}</div>
                        <div class="variable-tag" data-variable="{{company_name}}">{{company_name}}</div>
                        <div class="variable-tag" data-variable="{{current_date}}">{{current_date}}</div>
                        <div class="variable-tag" data-variable="{{unsubscribe_url}}">{{unsubscribe_url}}</div>
                    </div>
                </div>

                <!-- Contenu de l'éditeur -->
                <div class="editor-content">
                    <!-- Onglet Composer -->
                    <div id="compose-tab" class="tab-content active">
                        <form id="emailForm">
                            <div class="form-group">
                                <label class="form-label">Sujet de l'email</label>
                                <input type="text" id="emailSubject" class="form-control" 
                                       placeholder="Saisissez le sujet de votre email">
                            </div>

                            <div class="form-group">
                                <label class="form-label">Texte de prévisualisation</label>
                                <input type="text" id="emailPreheader" class="form-control" 
                                       placeholder="Texte qui apparaît après le sujet dans la boîte de réception">
                            </div>

                            <div class="form-group">
                                <label class="form-label">Contenu de l'email</label>
                                <div id="emailEditor" class="quill-container"></div>
                            </div>
                        </form>
                    </div>

                    <!-- Onglet Design -->
                    <div id="design-tab" class="tab-content" style="display: none;">
                        <div class="form-group">
                            <label class="form-label">Modèles prédéfinis</label>
                            <div class="templates-list">
                                <% if (templates && templates.length > 0) { %>
                                    <% templates.forEach(template => { %>
                                        <div class="template-item" data-template-id="<%= template.id %>">
                                            <div class="template-name"><%= template.template_name %></div>
                                            <div class="template-subject"><%= template.subject %></div>
                                        </div>
                                    <% }); %>
                                <% } else { %>
                                    <p style="text-align: center; color: var(--gray-medium); padding: 20px;">
                                        Aucun modèle disponible
                                    </p>
                                <% } %>
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="form-label">Ajouter des produits</label>
                            <div id="jewelsList" class="jewels-grid">
                                <!-- Les bijoux seront chargés dynamiquement -->
                            </div>
                        </div>
                    </div>

                    <!-- Onglet Aperçu -->
                    <div id="preview-tab" class="tab-content" style="display: none;">
                        <div id="emailPreview" style="border: 1px solid #e5e7eb; border-radius: 8px; padding: 20px; min-height: 400px;">
                            <p style="text-align: center; color: var(--gray-medium); padding: 40px;">
                                Saisissez du contenu pour voir l'aperçu
                            </p>
                        </div>
                    </div>
                </div>

                <!-- Actions -->
                <div class="action-buttons">
                    <button type="button" id="saveDraftBtn" class="btn btn-secondary">
                        <i class="fas fa-save"></i>
                        Sauvegarder brouillon
                    </button>
                    
                    <button type="button" id="sendTestBtn" class="btn btn-warning">
                        <i class="fas fa-paper-plane"></i>
                        Test
                    </button>
                    
                    <button type="button" id="previewBtn" class="btn btn-secondary">
                        <i class="fas fa-eye"></i>
                        Aperçu
                    </button>
                    
                    <button type="button" id="sendCampaignBtn" class="btn btn-primary">
                        <i class="fas fa-rocket"></i>
                        Envoyer la campagne
                    </button>

                    <div class="loading" id="loadingIndicator">
                        <div class="spinner"></div>
                        <span>Traitement en cours...</span>
                    </div>
                </div>
            </div>

            <!-- Sidebar -->
            <div class="sidebar">
                <!-- Statistiques -->
                <div class="sidebar-section">
                    <div class="sidebar-header">
                        <i class="fas fa-chart-bar"></i>
                        Statistiques
                    </div>
                    <div class="sidebar-content">
                        <div class="stats-grid">
                            <div class="stat-card">
                                <div class="stat-value"><%= stats.totalRecipients || 0 %></div>
                                <div class="stat-label">Total contacts</div>
                            </div>
                            <div class="stat-card">
                                <div class="stat-value"><%= stats.totalCustomers || 0 %></div>
                                <div class="stat-label">Clients</div>
                            </div>
                            <div class="stat-card">
                                <div class="stat-value"><%= stats.totalUsers || 0 %></div>
                                <div class="stat-label">Utilisateurs</div>
                            </div>
                            <div class="stat-card">
                                <div class="stat-value"><%= recentCampaigns.length || 0 %></div>
                                <div class="stat-label">Campagnes récentes</div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Destinataires -->
                <div class="sidebar-section">
                    <div class="sidebar-header">
                        <i class="fas fa-users"></i>
                        Destinataires
                    </div>
                    <div class="sidebar-content">
                        <div class="recipient-selector">
                            <div class="recipient-option">
                                <input type="radio" name="recipients" value="all" id="all" checked>
                                <label for="all">Tous les contacts</label>
                            </div>
                            <div class="recipient-option">
                                <input type="radio" name="recipients" value="customers" id="customers">
                                <label for="customers">Clients uniquement</label>
                            </div>
                            <div class="recipient-option">
                                <input type="radio" name="recipients" value="users" id="users">
                                <label for="users">Utilisateurs uniquement</label>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Campagnes récentes -->
                <div class="sidebar-section">
                    <div class="sidebar-header">
                        <i class="fas fa-history"></i>
                        Campagnes récentes
                    </div>
                    <div class="sidebar-content">
                        <% if (recentCampaigns && recentCampaigns.length > 0) { %>
                            <% recentCampaigns.forEach(campaign => { %>
                                <div class="template-item" style="margin-bottom: 10px;">
                                    <div class="template-name"><%= campaign.subject %></div>
                                    <div class="template-subject">
                                        <%= campaign.status %> • 
                                        <%= new Date(campaign.created_at).toLocaleDateString('fr-FR') %>
                                    </div>
                                </div>
                            <% }); %>
                        <% } else { %>
                            <p style="text-align: center; color: var(--gray-medium); padding: 20px;">
                                Aucune campagne récente
                            </p>
                        <% } %>
                        
                        <a href="/admin/emails/history" class="btn btn-secondary" style="width: 100%; margin-top: 15px;">
                            <i class="fas fa-history"></i>
                            Voir l'historique
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Panel d'aperçu -->
    <div class="preview-panel" id="previewPanel">
        <div class="preview-header">
            <h3>Aperçu de l'email</h3>
            <button class="close-preview" id="closePreview">
                <i class="fas fa-times"></i>
            </button>
        </div>
        <div class="preview-content" id="previewContent">
            <!-- Le contenu de l'aperçu sera inséré ici -->
        </div>
    </div>

    <!-- Scripts -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/quill/1.3.7/quill.min.js"></script>
    <script>
        // ==========================================
        // 📧 ÉDITEUR D'EMAILS - JAVASCRIPT
        // ==========================================

        let quill;
        let currentRecipients = 'all';

        // Initialisation
        document.addEventListener('DOMContentLoaded', function() {
            console.log('🚀 Initialisation éditeur email');
            
            initializeQuillEditor();
            initializeEventListeners();
            loadJewels();
        });

        // ==========================================
        // 📝 INITIALISATION DE L'ÉDITEUR QUILL
        // ==========================================
        function initializeQuillEditor() {
            const toolbarOptions = [
                ['bold', 'italic', 'underline', 'strike'],
                ['blockquote', 'code-block'],
                [{ 'header': 1 }, { 'header': 2 }],
                [{ 'list': 'ordered'}, { 'list': 'bullet' }],
                [{ 'script': 'sub'}, { 'script': 'super' }],
                [{ 'indent': '-1'}, { 'indent': '+1' }],
                [{ 'direction': 'rtl' }],
                [{ 'size': ['small', false, 'large', 'huge'] }],
                [{ 'header': [1, 2, 3, 4, 5, 6, false] }],
                [{ 'color': [] }, { 'background': [] }],
                [{ 'font': [] }],
                [{ 'align': [] }],
                ['link', 'image'],
                ['clean']
            ];

            quill = new Quill('#emailEditor', {
                theme: 'snow',
                modules: {
                    toolbar: toolbarOptions
                },
                placeholder: 'Composez votre email ici...'
            });

            // Événement de changement de contenu
            quill.on('text-change', function() {
                updatePreview();
            });
        }

        // ==========================================
        // 🎯 GESTION DES ÉVÉNEMENTS
        // ==========================================
        function initializeEventListeners() {
            // Onglets
            document.querySelectorAll('.tab-btn').forEach(btn => {
                btn.addEventListener('click', function() {
                    const tabName = this.dataset.tab;
                    switchTab(tabName);
                });
            });

            // Variables
            document.querySelectorAll('.variable-tag').forEach(tag => {
                tag.addEventListener('click', function() {
                    const variable = this.dataset.variable;
                    insertVariable(variable);
                });
            });

            // Destinataires
            document.querySelectorAll('input[name="recipients"]').forEach(radio => {
                radio.addEventListener('change', function() {
                    currentRecipients = this.value;
                    console.log('📧 Destinataires sélectionnés:', currentRecipients);
                });
            });

            // Boutons d'action
            document.getElementById('saveDraftBtn').addEventListener('click', saveDraft);
            document.getElementById('sendTestBtn').addEventListener('click', sendTest);
            document.getElementById('previewBtn').addEventListener('click', showPreview);
            document.getElementById('sendCampaignBtn').addEventListener('click', sendCampaign);
            document.getElementById('closePreview').addEventListener('click', closePreview);

            // Mise à jour de l'aperçu en temps réel
            document.getElementById('emailSubject').addEventListener('input', updatePreview);
            document.getElementById('emailPreheader').addEventListener('input', updatePreview);

            // Modèles
            document.addEventListener('click', function(e) {
                if (e.target.closest('.template-item')) {
                    const templateId = e.target.closest('.template-item').dataset.templateId;
                    if (templateId) {
                        loadTemplate(templateId);
                    }
                }
            });
        }

        // ==========================================
        // 📑 GESTION DES ONGLETS
        // ==========================================
        function switchTab(tabName) {
            // Désactiver tous les onglets
            document.querySelectorAll('.tab-btn').forEach(btn => btn.classList.remove('active'));
            document.querySelectorAll('.tab-content').forEach(content => content.style.display = 'none');

            // Activer l'onglet sélectionné
            document.querySelector(`[data-tab="${tabName}"]`).classList.add('active');
            document.getElementById(`${tabName}-tab`).style.display = 'block';

            // Actions spécifiques par onglet
            if (tabName === 'preview') {
                updatePreview();
            }
        }

        // ==========================================
        // 🔤 INSERTION DE VARIABLES
        // ==========================================
        function insertVariable(variable) {
            if (!quill) return;
            
            const selection = quill.getSelection();
            const index = selection ? selection.index : quill.getLength();
            
            quill.insertText(index, variable);
            quill.setSelection(index + variable.length);
        }

        // ==========================================
        // 💎 CHARGEMENT DES BIJOUX
        // ==========================================
        async function loadJewels() {
            try {
                const response = await fetch('/admin/api/jewels/for-email');
                const data = await response.json();

                if (data.success) {
                    const jewelsList = document.getElementById('jewelsList');
                    jewelsList.innerHTML = '';

                    data.jewels.forEach(jewel => {
                        const jewelElement = createJewelElement(jewel);
                        jewelsList.appendChild(jewelElement);
                    });
                } else {
                    console.error('❌ Erreur chargement bijoux:', data.message);
                }
            } catch (error) {
                console.error('❌ Erreur chargement bijoux:', error);
            }
        }

        function createJewelElement(jewel) {
            const div = document.createElement('div');
            div.className = 'jewel-item';
            div.innerHTML = `
                <img src="${jewel.image}" alt="${jewel.name}" class="jewel-image" onerror="this.src='/images/placeholder-image.jpg'">
                <div class="jewel-name">${jewel.name}</div>
                <div class="jewel-price">${jewel.price}€</div>
            `;
            
            div.addEventListener('click', function() {
                insertJewelInEmail(jewel);
            });
            
            return div;
        }

        function insertJewelInEmail(jewel) {
            if (!quill) return;
            
            const jewelHtml = `
                <div style="border: 1px solid #e5e7eb; border-radius: 8px; padding: 15px; margin: 10px 0; text-align: center;">
                    <img src="${jewel.image}" alt="${jewel.name}" style="max-width: 200px; height: auto; border-radius: 6px;">
                    <h3 style="margin: 10px 0; color: #1f2937;">${jewel.name}</h3>
                    <p style="font-size: 1.2rem; font-weight: 600; color: #6366f1;">${jewel.price}€</p>
                    <a href="${process.env.BASE_URL || 'http://localhost:3000'}${jewel.url}" style="display: inline-block; background: #6366f1; color: white; padding: 10px 20px; text-decoration: none; border-radius: 6px; margin-top: 10px;">Voir le produit</a>
                </div>
            `;
            
            const selection = quill.getSelection();
            const index = selection ? selection.index : quill.getLength();
            
            quill.clipboard.dangerouslyPasteHTML(index, jewelHtml);
        }

        // ==========================================
        // 👁️ APERÇU EN TEMPS RÉEL
        // ==========================================
        function updatePreview() {
            const subject = document.getElementById('emailSubject').value;
            const preheader = document.getElementById('emailPreheader').value;
            const content = quill ? quill.root.innerHTML : '';

            const previewElement = document.getElementById('emailPreview');
            
            if (!subject && !content) {
                previewElement.innerHTML = `
                    <p style="text-align: center; color: var(--gray-medium); padding: 40px;">
                        Saisissez du contenu pour voir l'aperçu
                    </p>
                `;
                return;
            }

            // Remplacer les variables par des données de test
            const testContent = content
                .replace(/\{\{first_name\}\}/g, 'Marie')
                .replace(/\{\{last_name\}\}/g, 'Dupont')
                .replace(/\{\{email\}\}/g, 'marie.dupont@example.com')
                .replace(/\{\{company_name\}\}/g, 'CrystosJewel')
                .replace(/\{\{current_date\}\}/g, new Date().toLocaleDateString('fr-FR'))
                .replace(/\{\{unsubscribe_url\}\}/g, '#');

            previewElement.innerHTML = `
                <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
                    <div style="background: #f8fafc; padding: 20px; border-radius: 8px 8px 0 0;">
                        <h2 style="margin: 0; color: #1f2937;">${subject || 'Sujet de l\'email'}</h2>
                        ${preheader ? `<p style="margin: 5px 0 0 0; color: #6b7280;">${preheader}</p>` : ''}
                    </div>
                    <div style="background: white; padding: 30px; border-radius: 0 0 8px 8px; border: 1px solid #e5e7eb;">
                        ${testContent}
                    </div>
                </div>
            `;
        }

        // ==========================================
        // 💾 ACTIONS PRINCIPALES
        // ==========================================
        async function saveDraft() {
            const emailData = getEmailData();
            
            if (!emailData.subject) {
                showAlert('Veuillez saisir un sujet', 'error');
                return;
            }

            showLoading(true);

            try {
                const response = await fetch('/admin/emails/campaigns/test', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        ...emailData,
                        testEmail: testEmail
                    })
                });

                const result = await response.json();
                
                if (result.success) {
                    showAlert(`Email de test envoyé à ${testEmail}`, 'success');
                } else {
                    showAlert(result.message || 'Erreur lors de l\'envoi du test', 'error');
                }
            } catch (error) {
                console.error('❌ Erreur envoi test:', error);
                showAlert('Erreur lors de l\'envoi du test', 'error');
            } finally {
                showLoading(false);
            }
        }

        async function sendCampaign() {
            const emailData = getEmailData();
            
            if (!emailData.subject || !emailData.content) {
                showAlert('Veuillez remplir le sujet et le contenu', 'error');
                return;
            }

            if (!confirm(`Êtes-vous sûr de vouloir envoyer cette campagne à tous les ${currentRecipients === 'all' ? 'contacts' : currentRecipients} ?`)) {
                return;
            }

            showLoading(true);

            try {
                const response = await fetch('/admin/emails/campaigns/send', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        ...emailData,
                        recipients: currentRecipients
                    })
                });

                const result = await response.json();
                
                if (result.success) {
                    showAlert(`Campagne envoyée avec succès ! ${result.stats.sent}/${result.stats.total} emails envoyés`, 'success');
                    
                    // Réinitialiser le formulaire
                    document.getElementById('emailSubject').value = '';
                    document.getElementById('emailPreheader').value = '';
                    quill.setContents([]);
                    updatePreview();
                } else {
                    showAlert(result.message || 'Erreur lors de l\'envoi de la campagne', 'error');
                }
            } catch (error) {
                console.error('❌ Erreur envoi campagne:', error);
                showAlert('Erreur lors de l\'envoi de la campagne', 'error');
            } finally {
                showLoading(false);
            }
        }

        function showPreview() {
            updatePreview();
            document.getElementById('previewPanel').classList.add('active');
        }

        function closePreview() {
            document.getElementById('previewPanel').classList.remove('active');
        }

        async function loadTemplate(templateId) {
            try {
                showLoading(true);
                
                // Simuler le chargement d'un template
                // À remplacer par un vrai appel API
                showAlert('Fonctionnalité de chargement de template à implémenter', 'info');
                
            } catch (error) {
                console.error('❌ Erreur chargement template:', error);
                showAlert('Erreur lors du chargement du template', 'error');
            } finally {
                showLoading(false);
            }
        }

        // ==========================================
        // 🛠️ FONCTIONS UTILITAIRES
        // ==========================================
        function getEmailData() {
            return {
                subject: document.getElementById('emailSubject').value,
                preheader: document.getElementById('emailPreheader').value,
                content: quill ? quill.root.innerHTML : '',
                recipients: currentRecipients
            };
        }

        function showAlert(message, type = 'info') {
            // Supprimer les alertes existantes
            const existingAlerts = document.querySelectorAll('.alert');
            existingAlerts.forEach(alert => alert.remove());

            // Créer la nouvelle alerte
            const alert = document.createElement('div');
            alert.className = `alert alert-${type}`;
            alert.innerHTML = `
                <i class="fas fa-${type === 'success' ? 'check-circle' : type === 'error' ? 'exclamation-circle' : 'info-circle'}"></i>
                ${message}
            `;

            // Insérer l'alerte
            const container = document.querySelector('.editor-content');
            container.insertBefore(alert, container.firstChild);

            // Supprimer automatiquement après 5 secondes
            setTimeout(() => {
                if (alert.parentNode) {
                    alert.remove();
                }
            }, 5000);
        }

        function showLoading(show) {
            const loading = document.getElementById('loadingIndicator');
            const buttons = document.querySelectorAll('.action-buttons .btn');
            
            if (show) {
                loading.classList.add('active');
                buttons.forEach(btn => btn.disabled = true);
            } else {
                loading.classList.remove('active');
                buttons.forEach(btn => btn.disabled = false);
            }
        }

        // ==========================================
        // 📱 GESTION RESPONSIVE
        // ==========================================
        function handleResize() {
            const isMobile = window.innerWidth <= 1200;
            const sidebar = document.querySelector('.sidebar');
            const mainGrid = document.querySelector('.main-grid');
            
            if (isMobile) {
                mainGrid.style.gridTemplateColumns = '1fr';
            } else {
                mainGrid.style.gridTemplateColumns = '1fr 350px';
            }
        }

        window.addEventListener('resize', handleResize);
        handleResize(); // Appel initial
    </script>
</body>
</html>