<!-- views/admin/email-editor.ejs - PARTIE 1: HTML + CSS -->
<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>✏️ Éditeur d'Emails - CrystosJewel</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    
    <style>
        :root {
            --primary: #d89ab3;
            --primary-dark: #b794a8;
            --secondary: #8b5cf6;
            --success: #10b981;
            --warning: #f59e0b;
            --danger: #ef4444;
            --info: #3b82f6;
            --text-primary: #1e293b;
            --text-secondary: #64748b;
            --bg-primary: #f8fafc;
            --bg-secondary: #ffffff;
            --border: #e2e8f0;
            --shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
            --radius: 8px;
        }

        * { 
            margin: 0; 
            padding: 0; 
            box-sizing: border-box; 
        }

        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
            background: var(--bg-primary);
            color: var(--text-primary);
            height: 100vh;
            overflow: hidden;
        }

        .editor-container {
            display: grid;
            grid-template-columns: 300px 1fr 300px;
            height: 100vh;
        }

        .sidebar-left, .sidebar-right {
            background: var(--bg-secondary);
            border-right: 1px solid var(--border);
            padding: 20px;
            overflow-y: auto;
        }

        .sidebar-right {
            border-left: 1px solid var(--border);
            border-right: none;
        }

        .editor-main {
            display: flex;
            flex-direction: column;
            background: #f1f5f9;
        }

        .editor-header {
            background: var(--bg-secondary);
            border-bottom: 1px solid var(--border);
            padding: 15px 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            gap: 15px;
        }

        .editor-title {
            font-size: 1.2rem;
            font-weight: 600;
            color: var(--text-primary);
            flex: 1;
        }

        .editor-actions {
            display: flex;
            gap: 10px;
        }

        .toolbar {
            background: var(--bg-secondary);
            border-bottom: 1px solid var(--border);
            padding: 10px 20px;
            display: flex;
            gap: 15px;
            align-items: center;
            flex-wrap: wrap;
            min-height: 60px;
        }

        .toolbar-group {
            display: flex;
            gap: 5px;
            align-items: center;
            padding: 5px 10px;
            border-radius: var(--radius);
            background: var(--bg-primary);
            border: 1px solid var(--border);
        }

        .toolbar-btn {
            padding: 6px 8px;
            border: none;
            border-radius: 4px;
            background: transparent;
            cursor: pointer;
            transition: all 0.2s ease;
            color: var(--text-primary);
            font-size: 14px;
            min-width: 32px;
            height: 32px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .toolbar-btn:hover {
            background: var(--primary);
            color: white;
        }

        .toolbar-btn.active {
            background: var(--primary);
            color: white;
        }

        .toolbar-select {
            padding: 4px 8px;
            border: 1px solid var(--border);
            border-radius: 4px;
            background: white;
            font-size: 12px;
            min-width: 80px;
        }

        .color-picker {
            width: 32px;
            height: 32px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            background: transparent;
        }

        .preview-area {
            flex: 1;
            display: flex;
            overflow: hidden;
        }

        .editor-wrapper {
            flex: 1;
            display: flex;
            flex-direction: column;
            background: white;
            margin: 20px;
            border-radius: var(--radius);
            box-shadow: var(--shadow);
            border: 1px solid var(--border);
            overflow: hidden;
        }

        .preview-controls {
            background: var(--bg-primary);
            padding: 10px 15px;
            border-bottom: 1px solid var(--border);
            display: flex;
            gap: 10px;
            align-items: center;
        }

        .preview-mode {
            display: flex;
            gap: 5px;
        }

        .preview-btn {
            padding: 6px 12px;
            border: 1px solid var(--border);
            border-radius: 4px;
            background: white;
            cursor: pointer;
            font-size: 12px;
            transition: all 0.2s ease;
        }

        .preview-btn.active {
            background: var(--primary);
            color: white;
            border-color: var(--primary);
        }

        .email-preview {
            flex: 1;
            background: white;
            overflow-y: auto;
            transition: all 0.3s ease;
            max-width: 600px;
            margin: 0 auto;
            width: 100%;
        }

        .email-preview.mobile {
            max-width: 375px;
            border-left: 1px solid var(--border);
            border-right: 1px solid var(--border);
        }

        .content-editable {
            padding: 20px !important;
            min-height: 500px;
            max-height: calc(100vh - 400px);
            overflow-y: auto;
            line-height: 1.6;
            outline: none;
            border: none;
            font-family: inherit;
            font-size: 14px;
        }

        .content-editable:focus {
            outline: 2px solid var(--primary);
            outline-offset: -2px;
        }

        .email-header {
            background: linear-gradient(135deg, var(--primary), var(--primary-dark));
            color: white;
            padding: 20px;
        }

        .email-subject {
            font-size: 1.4rem;
            font-weight: 700;
            margin-bottom: 5px;
        }

        .email-preheader {
            font-size: 14px;
            opacity: 0.9;
        }

        .email-footer {
            background: var(--bg-primary);
            padding: 15px 20px;
            font-size: 12px;
            color: var(--text-secondary);
            border-top: 1px solid var(--border);
        }

        .form-group {
            margin-bottom: 15px;
        }

        .form-label {
            display: block;
            font-weight: 600;
            margin-bottom: 5px;
            color: var(--text-primary);
            font-size: 14px;
        }

        .form-input, .form-select, .form-textarea {
            width: 100%;
            padding: 10px;
            border: 1px solid var(--border);
            border-radius: var(--radius);
            font-size: 14px;
            transition: border-color 0.3s ease;
        }

        .form-input:focus, .form-select:focus, .form-textarea:focus {
            outline: none;
            border-color: var(--primary);
            box-shadow: 0 0 0 3px rgba(216, 154, 179, 0.1);
        }

        .template-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 10px;
            margin-bottom: 20px;
        }

        .template-card {
            border: 2px solid var(--border);
            border-radius: var(--radius);
            padding: 10px;
            cursor: pointer;
            transition: all 0.3s ease;
            text-align: center;
            font-size: 12px;
            background: white;
        }

        .template-card:hover {
            border-color: var(--primary);
            background: var(--bg-primary);
            transform: translateY(-2px);
        }

        .template-card.active {
            border-color: var(--primary);
            background: linear-gradient(135deg, var(--primary), var(--primary-dark));
            color: white;
        }

        .content-blocks {
            margin-bottom: 25px;
        }

        .block-item {
            background: var(--bg-primary);
            border: 1px solid var(--border);
            border-radius: var(--radius);
            padding: 12px;
            margin-bottom: 10px;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 10px;
            user-select: none;
        }

        .block-item:hover {
            background: var(--primary);
            color: white;
            transform: translateX(5px);
            box-shadow: var(--shadow);
        }

        .btn {
            padding: 10px 16px;
            border: none;
            border-radius: var(--radius);
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            display: inline-flex;
            align-items: center;
            gap: 8px;
            font-size: 14px;
            text-decoration: none;
            user-select: none;
            justify-content: center;
        }

        .btn:disabled {
            opacity: 0.6;
            cursor: not-allowed;
            transform: none !important;
        }

        .btn-primary {
            background: linear-gradient(135deg, var(--primary), var(--primary-dark));
            color: white;
            border: 1px solid var(--primary-dark);
        }

        .btn-secondary {
            background: var(--text-secondary);
            color: white;
            border: 1px solid var(--text-secondary);
        }

        .btn-success {
            background: var(--success);
            color: white;
            border: 1px solid var(--success);
        }

        .btn-info {
            background: var(--info);
            color: white;
            border: 1px solid var(--info);
        }

        .btn-warning {
            background: var(--warning);
            color: white;
            border: 1px solid var(--warning);
        }

        .btn:hover:not(:disabled) {
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.15);
        }

        .sidebar-section {
            margin-bottom: 25px;
            padding-bottom: 20px;
            border-bottom: 1px solid var(--border);
        }

        .sidebar-section:last-child {
            border-bottom: none;
        }

        .sidebar-section h3 {
            font-size: 1rem;
            font-weight: 600;
            margin-bottom: 15px;
            color: var(--text-primary);
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .variables-list {
            display: flex;
            flex-wrap: wrap;
            gap: 5px;
        }

        .variable-tag {
            background: var(--secondary);
            color: white;
            padding: 4px 8px;
            border-radius: 12px;
            font-size: 11px;
            cursor: pointer;
            transition: all 0.3s ease;
            user-select: none;
        }

        .variable-tag:hover {
            background: #7c3aed;
            transform: scale(1.05);
        }

        .recipients-counter {
            background: var(--success);
            color: white;
            padding: 8px 12px;
            border-radius: var(--radius);
            font-size: 13px;
            font-weight: 600;
            text-align: center;
            margin-bottom: 15px;
        }

        .filter-buttons {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 8px;
            margin-bottom: 15px;
        }

        .filter-btn {
            padding: 8px;
            border: 1px solid var(--border);
            border-radius: var(--radius);
            background: white;
            cursor: pointer;
            font-size: 12px;
            transition: all 0.3s ease;
        }

        .filter-btn.active {
            background: var(--primary);
            color: white;
            border-color: var(--primary);
        }

        .client-item {
            background: white;
            border: 1px solid var(--border);
            border-radius: var(--radius);
            padding: 10px;
            margin-bottom: 8px;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .client-item:hover {
            background: var(--bg-primary);
            border-color: var(--primary);
            transform: translateX(5px);
        }

        .client-item.selected {
            background: var(--primary);
            color: white;
            border-color: var(--primary-dark);
        }

        .client-name {
            font-weight: 600;
            font-size: 14px;
            margin-bottom: 2px;
        }

        .client-email {
            font-size: 12px;
            opacity: 0.8;
        }

        .notification {
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 15px 20px;
            border-radius: 8px;
            color: white;
            font-weight: 600;
            z-index: 99999;
            max-width: 350px;
            animation: slideIn 0.3s ease;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);
        }

        .notification.success { background: var(--success); }
        .notification.error { background: var(--danger); }
        .notification.warning { background: var(--warning); }
        .notification.info { background: var(--info); }

        @keyframes slideIn {
            from { transform: translateX(100%); opacity: 0; }
            to { transform: translateX(0); opacity: 1; }
        }

        .auto-save {
            position: fixed;
            bottom: 20px;
            right: 20px;
            background: var(--success);
            color: white;
            padding: 8px 15px;
            border-radius: 20px;
            font-size: 12px;
            opacity: 0;
            transition: opacity 0.3s ease;
            z-index: 1000;
        }

        .auto-save.visible {
            opacity: 1;
        }

        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            z-index: 10000;
            align-items: center;
            justify-content: center;
        }

        .modal.active {
            display: flex;
        }

        .modal-content {
            background: white;
            border-radius: var(--radius);
            padding: 30px;
            max-width: 800px;
            width: 90%;
            max-height: 80vh;
            overflow-y: auto;
        }

        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

        .modal-title {
            font-size: 1.3rem;
            font-weight: 600;
        }

        .modal-close {
            background: none;
            border: none;
            font-size: 24px;
            cursor: pointer;
            color: var(--text-secondary);
        }

        .products-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));
            gap: 15px;
            margin-top: 15px;
        }

        .product-card {
            border: 1px solid var(--border);
            border-radius: var(--radius);
            padding: 15px;
            cursor: pointer;
            transition: all 0.3s ease;
            text-align: center;
            background: white;
        }

        .product-card:hover {
            border-color: var(--primary);
            box-shadow: var(--shadow);
            transform: translateY(-2px);
        }

        .product-card.selected {
            border-color: var(--primary);
            background: var(--bg-primary);
            box-shadow: 0 0 0 2px rgba(216, 154, 179, 0.2);
        }

        .product-image {
            width: 100%;
            height: 120px;
            object-fit: cover;
            border-radius: 6px;
            margin-bottom: 10px;
            background: #f8fafc;
        }

        .product-name {
            font-size: 14px;
            font-weight: 600;
            margin-bottom: 6px;
            color: var(--text-primary);
        }

        .product-price {
            color: var(--primary);
            font-weight: 600;
            font-size: 16px;
        }

        .two-columns {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 20px;
            margin: 20px 0;
            padding: 20px;
            border: 2px dashed var(--border);
            border-radius: var(--radius);
        }

        .column {
            padding: 15px;
            background: var(--bg-primary);
            border-radius: 6px;
            min-height: 100px;
        }

        .image-resizable {
            max-width: 100%;
            height: auto;
            border-radius: 8px;
            margin: 10px 0;
            display: block;
        }

        .image-resizable:hover {
            cursor: grab;
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
        }

        .spinner {
            width: 16px;
            height: 16px;
            border: 2px solid var(--border);
            border-top: 2px solid var(--primary);
            border-radius: 50%;
            animation: spin 1s linear infinite;
            margin-right: 8px;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        @keyframes slideOut {
            from { transform: translateX(0); opacity: 1; }
            to { transform: translateX(100%); opacity: 0; }
        }

        @media (max-width: 1200px) {
            .editor-container {
                grid-template-columns: 250px 1fr 250px;
            }
        }

        @media (max-width: 768px) {
            .editor-container {
                grid-template-columns: 1fr;
                grid-template-rows: auto auto 1fr auto;
            }
            
            .sidebar-left, .sidebar-right {
                max-height: 200px;
                padding: 15px;
            }

            .toolbar {
                padding: 8px 15px;
                gap: 8px;
            }

            .toolbar-group {
                padding: 3px 6px;
                gap: 3px;
            }

            .two-columns {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
    <div class="editor-container">
        <!-- ===== SIDEBAR GAUCHE ===== -->
        <div class="sidebar-left">
            <!-- Configuration -->
            <div class="sidebar-section">
                <h3>
                    <i class="fas fa-cog"></i>
                    Configuration
                </h3>
                
                <form class="config-form" id="campaignForm">
                    <div class="form-group">
                        <label class="form-label">Nom de la campagne</label>
                        <input type="text" class="form-input" id="campaignName" placeholder="Ma super campagne" required>
                    </div>
                    
                    <div class="form-group">
                        <label class="form-label">Sujet de l'email</label>
                        <input type="text" class="form-input" id="emailSubject" placeholder="🎉 Découvrez nos nouveautés !" required>
                    </div>
                    
                    <div class="form-group">
                        <label class="form-label">Pré-header (optionnel)</label>
                        <input type="text" class="form-input" id="emailPreheader" placeholder="Texte de prévisualisation">
                    </div>
                    
                    <div class="form-group">
                        <label class="form-label">Nom de l'expéditeur</label>
                        <input type="text" class="form-input" id="senderName" value="CrystosJewel">
                    </div>
                </form>
            </div>

            <!-- Templates -->
            <div class="sidebar-section">
                <h3>
                    <i class="fas fa-palette"></i>
                    Templates
                </h3>
                
                <div class="template-grid" id="templateGrid">
                    <% if (typeof templates !== 'undefined' && templates && templates.length > 0) { %>
                        <% templates.forEach((template) => { %>
                            <div class="template-card <%= template.is_default ? 'active' : '' %>" data-template="<%= template.template_type %>">
                                <i class="fas fa-<%= template.template_type === 'elegant' ? 'gem' : template.template_type === 'modern' ? 'rocket' : template.template_type === 'classic' ? 'newspaper' : 'minus' %>" style="font-size: 20px; margin-bottom: 5px;"></i>
                                <div><%= template.name %></div>
                            </div>
                        <% }); %>
                    <% } else { %>
                        <div class="template-card active" data-template="elegant">
                            <i class="fas fa-gem" style="font-size: 20px; margin-bottom: 5px;"></i>
                            <div>Élégant</div>
                        </div>
                        <div class="template-card" data-template="modern">
                            <i class="fas fa-rocket" style="font-size: 20px; margin-bottom: 5px;"></i>
                            <div>Moderne</div>
                        </div>
                        <div class="template-card" data-template="classic">
                            <i class="fas fa-newspaper" style="font-size: 20px; margin-bottom: 5px;"></i>
                            <div>Classique</div>
                        </div>
                        <div class="template-card" data-template="minimal">
                            <i class="fas fa-minus" style="font-size: 20px; margin-bottom: 5px;"></i>
                            <div>Minimal</div>
                        </div>
                    <% } %>
                </div>
            </div>

            <!-- Blocs de contenu -->
            <div class="sidebar-section">
                <h3>
                    <i class="fas fa-cube"></i>
                    Blocs de contenu
                </h3>
                
                <div class="content-blocks">
                    <div class="block-item" data-block="title">
                        <i class="fas fa-heading"></i>
                        <span>Titre (H1-H6)</span>
                    </div>
                    <div class="block-item" data-block="text">
                        <i class="fas fa-paragraph"></i>
                        <span>Texte / Paragraphe</span>
                    </div>
                    <div class="block-item" data-block="image">
                        <i class="fas fa-image"></i>
                        <span>Image</span>
                    </div>
                    <div class="block-item" data-block="button">
                        <i class="fas fa-mouse-pointer"></i>
                        <span>Bouton CTA</span>
                    </div>
                    <div class="block-item" data-block="divider">
                        <i class="fas fa-grip-lines"></i>
                        <span>Séparateur</span>
                    </div>
                    <div class="block-item" data-block="columns">
                        <i class="fas fa-columns"></i>
                        <span>2 Colonnes</span>
                    </div>
                    <div class="block-item" data-block="products">
                        <i class="fas fa-gem"></i>
                        <span>Produits</span>
                    </div>
                    <div class="block-item" data-block="promotion">
                        <i class="fas fa-percent"></i>
                        <span>Promotion</span>
                    </div>
                    <div class="block-item" data-block="unsubscribe">
                        <i class="fas fa-times-circle"></i>
                        <span>Désabonnement</span>
                    </div>
                </div>
            </div>

            <!-- Variables -->
            <div class="sidebar-section">
                <h3>
                    <i class="fas fa-code"></i>
                    Variables
                </h3>
                
                <div class="variables-list">
                    <span class="variable-tag" data-variable="{{firstName}}">{{firstName}}</span>
                    <span class="variable-tag" data-variable="{{lastName}}">{{lastName}}</span>
                    <span class="variable-tag" data-variable="{{email}}">{{email}}</span>
                    <span class="variable-tag" data-variable="{{orderNumber}}">{{orderNumber}}</span>
                    <span class="variable-tag" data-variable="{{total}}">{{total}}</span>
                    <span class="variable-tag" data-variable="{{trackingNumber}}">{{trackingNumber}}</span>
                </div>
            </div>

            <!-- Images -->
            <div class="sidebar-section">
                <h3>
                    <i class="fas fa-upload"></i>
                    Images
                </h3>
                
                <div class="form-group">
                    <input type="file" id="imageUpload" accept="image/*" style="display: none;" multiple>
                    <button type="button" class="btn btn-info" id="uploadImageBtn">
                        <i class="fas fa-upload"></i>
                        Uploader une image
                    </button>
                </div>
                
                <div id="uploadedImages" style="margin-top: 15px; max-height: 200px; overflow-y: auto;">
                    <!-- Images uploadées apparaîtront ici -->
                </div>
            </div>
        </div>

        <!-- ===== ZONE CENTRALE ===== -->
        <div class="editor-main">
            <!-- Header -->
            <div class="editor-header">
                <div class="editor-title">
                    <i class="fas fa-edit"></i>
                    Éditeur d'Email CrystosJewel
                </div>
                <div class="editor-actions">
                    <button type="button" class="btn btn-secondary" id="saveAsDraftBtn">
                        <i class="fas fa-save"></i>
                        Brouillon
                    </button>
                    <button type="button" class="btn btn-warning" id="sendTestBtn">
                        <i class="fas fa-flask"></i>
                        Test
                    </button>
                    <button type="button" class="btn btn-info" id="previewEmailBtn">
                        <i class="fas fa-eye"></i>
                        Aperçu
                    </button>
                    <button type="button" class="btn btn-primary" id="dashboardBtn">
                        <i class="fas fa-chart-bar"></i>
                        Dashboard
                    </button>
                    <button type="button" class="btn btn-success" id="sendCampaignBtn">
                        <i class="fas fa-paper-plane"></i>
                        Envoyer
                    </button>
                </div>
            </div>

            <!-- Barre d'outils de formatage -->
            <div class="toolbar">
                <!-- Police et taille -->
                <div class="toolbar-group">
                    <select class="toolbar-select" id="fontFamily">
                        <option value="Arial, sans-serif">Arial</option>
                        <option value="Georgia, serif">Georgia</option>
                        <option value="'Times New Roman', serif">Times</option>
                        <option value="Verdana, sans-serif">Verdana</option>
                        <option value="Helvetica, sans-serif">Helvetica</option>
                        <option value="'Courier New', monospace">Courier</option>
                    </select>
                    <select class="toolbar-select" id="fontSize">
                        <option value="12px">12px</option>
                        <option value="14px">14px</option>
                        <option value="16px" selected>16px</option>
                        <option value="18px">18px</option>
                        <option value="20px">20px</option>
                        <option value="24px">24px</option>
                        <option value="28px">28px</option>
                        <option value="32px">32px</option>
                        <option value="36px">36px</option>
                        <option value="48px">48px</option>
                    </select>
                </div>

                <!-- Style de texte -->
                <div class="toolbar-group">
                    <button class="toolbar-btn" data-command="bold" title="Gras">
                        <i class="fas fa-bold"></i>
                    </button>
                    <button class="toolbar-btn" data-command="italic" title="Italique">
                        <i class="fas fa-italic"></i>
                    </button>
                    <button class="toolbar-btn" data-command="underline" title="Souligné">
                        <i class="fas fa-underline"></i>
                    </button>
                    <input type="color" class="color-picker" id="textColor" title="Couleur du texte" value="#1e293b">
                </div>

                <!-- Alignement -->
                <div class="toolbar-group">
                    <button class="toolbar-btn" data-command="justifyLeft" title="Aligner à gauche">
                        <i class="fas fa-align-left"></i>
                    </button>
                    <button class="toolbar-btn" data-command="justifyCenter" title="Centrer">
                        <i class="fas fa-align-center"></i>
                    </button>
                    <button class="toolbar-btn" data-command="justifyRight" title="Aligner à droite">
                        <i class="fas fa-align-right"></i>
                    </button>
                    <button class="toolbar-btn" data-command="justifyFull" title="Justifier">
                        <i class="fas fa-align-justify"></i>
                    </button>
                </div>

                <!-- Titres -->
                <div class="toolbar-group">
                    <select class="toolbar-select" id="heading">
                        <option value="">Paragraphe</option>
                        <option value="h1">Titre H1</option>
                        <option value="h2">Titre H2</option>
                        <option value="h3">Titre H3</option>
                        <option value="h4">Titre H4</option>
                        <option value="h5">Titre H5</option>
                        <option value="h6">Titre H6</option>
                    </select>
                </div>

                <!-- Actions -->
                <div class="toolbar-group">
                    <button class="toolbar-btn" id="insertLink" title="Insérer un lien">
                        <i class="fas fa-link"></i>
                    </button>
                    <button class="toolbar-btn" id="insertImage" title="Insérer une image">
                        <i class="fas fa-image"></i>
                    </button>
                    <button class="toolbar-btn" data-command="removeFormat" title="Supprimer le formatage">
                        <i class="fas fa-remove-format"></i>
                    </button>
                </div>
            </div>

            <!-- Zone de prévisualisation -->
            <div class="preview-area">
                <div class="editor-wrapper">
                    <div class="preview-controls">
                        <div class="preview-mode">
                            <button class="preview-btn active" data-mode="desktop">
                                <i class="fas fa-desktop"></i> Desktop
                            </button>
                            <button class="preview-btn" data-mode="mobile">
                                <i class="fas fa-mobile-alt"></i> Mobile
                            </button>
                        </div>
                        <div style="margin-left: auto; font-size: 12px; color: var(--text-secondary);">
                            <span id="autosaveStatus">Sauvegarde automatique activée</span>
                        </div>
                    </div>
                    
                    <div class="email-preview" id="emailPreview">
                        <div class="email-header">
                            <div class="email-subject" id="previewSubject">🎉 Découvrez nos nouveautés !</div>
                            <div class="email-preheader" id="previewPreheader">Texte de prévisualisation</div>
                        </div>
                        
                        <div class="content-editable" id="emailContent" contenteditable="true">
                            <h2 style="color: #d89ab3; margin-bottom: 20px; text-align: center;">Bonjour {{firstName}} !</h2>
                            
                            <p style="margin-bottom: 15px;">Nous sommes ravis de vous présenter notre nouvelle collection de bijoux exclusifs.</p>
                            
                            <p style="margin-bottom: 20px;">Découvrez des pièces uniques créées avec passion par nos artisans.</p>
                            
                            <div style="text-align: center; margin: 30px 0;">
                                <a href="<%= typeof baseUrl !== 'undefined' ? baseUrl : '' %>/bijoux" style="display: inline-block; background: linear-gradient(135deg, #d89ab3, #b794a8); color: white; padding: 15px 30px; text-decoration: none; border-radius: 8px; font-weight: 600; box-shadow: 0 4px 15px rgba(216, 154, 179, 0.3); transition: transform 0.2s ease;">
                                    🛍️ Découvrir la collection
                                </a>
                            </div>
                            
                            <p style="margin-bottom: 15px;">Profitez d'une <strong>réduction de 15%</strong> avec le code <code style="background: #f1f5f9; padding: 4px 8px; border-radius: 4px; font-family: monospace;">NOUVEAU15</code></p>
                            
                            <hr style="margin: 30px 0; border: none; border-top: 1px solid #e2e8f0;">
                            
                            <p style="color: #64748b; font-size: 14px; margin-bottom: 15px;">
                                À bientôt,<br>
                                L'équipe CrystosJewel
                            </p>
                        </div>
                        
                        <div class="email-footer">
                            <p>© 2025 CrystosJewel - Tous droits réservés</p>
                            <p style="margin-top: 5px;">
                                <a href="#" style="color: #64748b;">Se désabonner</a> | 
                                <a href="#" style="color: #64748b;">Mettre à jour mes préférences</a>
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- ===== SIDEBAR DROITE ===== -->
        <div class="sidebar-right">
            <!-- Destinataires -->
            <div class="sidebar-section">
                <h3>
                    <i class="fas fa-users"></i>
                    Destinataires
                </h3>
                
                <div class="recipients-counter" id="recipientsCounter">
                    <i class="fas fa-envelope"></i>
                    <span id="recipientCount">0</span> destinataires sélectionnés
                </div>
                
                <div class="filter-buttons">
                    <button class="filter-btn active" data-filter="newsletter">
                        📧 Newsletter (<%= typeof recipientCounts !== 'undefined' && recipientCounts.newsletter ? recipientCounts.newsletter : 0 %>)
                    </button>
                    <button class="filter-btn" data-filter="all">
                        👥 Tous (<%= typeof recipientCounts !== 'undefined' && recipientCounts.all ? recipientCounts.all : 0 %>)
                    </button>
                    <button class="filter-btn" data-filter="vip">
                        💎 VIP (<%= typeof recipientCounts !== 'undefined' && recipientCounts.vip ? recipientCounts.vip : 0 %>)
                    </button>
                    <button class="filter-btn" data-filter="with-orders">
                        🛍️ Clients (<%= typeof recipientCounts !== 'undefined' && recipientCounts.customers ? recipientCounts.customers : 0 %>)
                    </button>
                </div>
                
                <div class="form-group">
                    <label class="form-label">Rechercher un client</label>
                    <input type="text" class="form-input" id="clientSearch" placeholder="Nom ou email">
                </div>
                
                <div id="clientsList" style="max-height: 300px; overflow-y: auto; margin-top: 10px;">
                    <div class="loading">
                        <div class="spinner"></div>
                        Chargement des clients...
                    </div>
                </div>
            </div>

            <!-- Statistiques -->
            <div class="sidebar-section">
                <h3>
                    <i class="fas fa-chart-bar"></i>
                    Statistiques
                </h3>
                
                <div style="background: var(--bg-primary); padding: 15px; border-radius: var(--radius); font-size: 13px;">
                    <% if (typeof globalStats !== 'undefined' && globalStats) { %>
                        <p style="margin-bottom: 8px;">
                            <strong>📊 Total campagnes:</strong> <%= globalStats.total_campaigns || 0 %>
                        </p>
                        <p style="margin-bottom: 8px;">
                            <strong>📧 Emails envoyés:</strong> <%= globalStats.total_emails_sent || 0 %>
                        </p>
                        <p style="margin-bottom: 8px;">
                            <strong>📈 Taux d'ouverture:</strong> <%= globalStats.global_open_rate || 0 %>%
                        </p>
                        <p style="margin-bottom: 8px;">
                            <strong>🖱️ Taux de clic:</strong> <%= globalStats.global_click_rate || 0 %>%
                        </p>
                        <p>
                            <strong>👥 Abonnés:</strong> <%= globalStats.total_subscribers || 0 %>
                        </p>
                    <% } else { %>
                        <p style="color: #64748b;">Aucune statistique disponible</p>
                    <% } %>
                </div>
            </div>

            <!-- Conseils -->
            <div class="sidebar-section">
                <h3>
                    <i class="fas fa-info-circle"></i>
                    Conseils
                </h3>
                
                <div style="background: var(--bg-primary); padding: 15px; border-radius: var(--radius); font-size: 13px; line-height: 1.5;">
                    <p style="margin-bottom: 10px;"><strong>📝 Bonnes pratiques :</strong></p>
                    <ul style="margin-left: 15px;">
                        <li>Sujet accrocheur (max 50 caractères)</li>
                        <li>Personnalisez avec des variables</li>
                        <li>Testez avant d'envoyer</li>
                        <li>Optimisez pour mobile</li>
                        <li>Analysez les statistiques</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>

    <!-- ===== INDICATEUR SAUVEGARDE ===== -->
    <div class="auto-save" id="autoSaveIndicator">
        <i class="fas fa-check"></i> Sauvegardé automatiquement
    </div>
    <!-- ===== MODALS ===== -->
    
    <!-- Modal pour insérer un lien -->
    <div class="modal" id="linkModal">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title">Insérer un lien</h3>
                <button class="modal-close" onclick="closeModal('linkModal')">&times;</button>
            </div>
            <div class="form-group">
                <label class="form-label">Texte du lien</label>
                <input type="text" class="form-input" id="linkText" placeholder="Cliquez ici">
            </div>
            <div class="form-group">
                <label class="form-label">URL</label>
                <input type="url" class="form-input" id="linkUrl" placeholder="https://example.com">
            </div>
            <div class="form-group">
                <label>
                    <input type="checkbox" id="linkNewTab"> Ouvrir dans un nouvel onglet
                </label>
            </div>
            <div style="display: flex; gap: 10px; justify-content: flex-end;">
                <button class="btn btn-secondary" onclick="closeModal('linkModal')">Annuler</button>
                <button class="btn btn-primary" onclick="insertLink()">Insérer</button>
            </div>
        </div>
    </div>

    <!-- Modal pour sélectionner les produits -->
    <div class="modal" id="productsModal">
        <div class="modal-content" style="max-width: 900px;">
            <div class="modal-header">
                <h3 class="modal-title">Sélectionner des produits</h3>
                <button class="modal-close" onclick="closeModal('productsModal')">&times;</button>
            </div>
            <div class="form-group">
                <input type="text" class="form-input" id="productSearch" placeholder="Rechercher un produit...">
            </div>
            <div class="products-grid" id="productsGrid">
                <% if (typeof jewels !== 'undefined' && jewels && jewels.length > 0) { %>
                    <% jewels.slice(0, 12).forEach(jewel => { %>
                        <div class="product-card" data-product-id="<%= jewel.id %>">
                            <img src="<%= jewel.imageUrl || '/images/no-image.jpg' %>" alt="<%= jewel.name %>" class="product-image">
                            <div class="product-name"><%= jewel.name %></div>
                            <div class="product-price"><%= jewel.formattedPrice || jewel.price_ttc + '€' %></div>
                        </div>
                    <% }); %>
                <% } else { %>
                    <p style="grid-column: 1/-1; text-align: center; color: var(--text-secondary);">
                        Aucun produit disponible
                    </p>
                <% } %>
            </div>
            <div style="display: flex; gap: 10px; justify-content: flex-end; margin-top: 20px;">
                <button class="btn btn-secondary" onclick="closeModal('productsModal')">Annuler</button>
                <button class="btn btn-primary" onclick="insertSelectedProducts()">Insérer les produits</button>
            </div>
        </div>
    </div>

    <!-- À ajouter juste avant la fermeture de </body> -->
<script>
    console.log('🚀 Initialisation de l\'éditeur d\'emails...');

    // ===== VARIABLES GLOBALES =====
    let isInitialized = false;
    let selectedClients = [];
    let currentFilter = 'newsletter';
    let allClients = [];
    let currentTemplate = 'elegant';
    let selectedProducts = [];
    let autoSaveTimer = null;
    let lastSaveTime = Date.now();

    // Configuration depuis EJS
    window.EMAIL_EDITOR_CONFIG = {
        baseUrl: '<%= typeof baseUrl !== "undefined" ? baseUrl : "" %>',
        recipientCounts: <%- JSON.stringify(typeof recipientCounts !== 'undefined' ? recipientCounts : {}) %>,
        templates: <%- JSON.stringify(typeof templates !== 'undefined' ? templates : []) %>,
        jewels: <%- JSON.stringify(typeof jewels !== 'undefined' ? jewels : []) %>,
        customers: <%- JSON.stringify(typeof customers !== 'undefined' ? customers : []) %>
    };

    // ===== INITIALISATION =====
    document.addEventListener('DOMContentLoaded', function() {
        console.log('📋 DOM chargé, initialisation...');
        
        try {
            initializeEventListeners();
            loadClients();
            updatePreview();
            startAutoSave();
            
            isInitialized = true;
            console.log('✅ Éditeur initialisé avec succès !');
            showNotification('✅ Éditeur d\'emails prêt !', 'success');
            
        } catch (error) {
            console.error('❌ Erreur lors de l\'initialisation:', error);
            showNotification('❌ Erreur lors de l\'initialisation', 'error');
        }
    });

    // ===== EVENT LISTENERS =====
    function initializeEventListeners() {
        console.log('🔗 Initialisation des event listeners...');

        // Boutons de la toolbar principale
        document.getElementById('saveAsDraftBtn')?.addEventListener('click', saveAsDraft);
        document.getElementById('sendTestBtn')?.addEventListener('click', sendTest);
        document.getElementById('previewEmailBtn')?.addEventListener('click', previewEmail);
        document.getElementById('dashboardBtn')?.addEventListener('click', function() {
            window.open('/admin/marketing/campaigns', '_blank');
        });
        document.getElementById('sendCampaignBtn')?.addEventListener('click', sendCampaign);
        document.getElementById('uploadImageBtn')?.addEventListener('click', function() {
            document.getElementById('imageUpload').click();
        });

        // Toolbar de formatage
        initializeCustomToolbar();

        // Templates
        document.querySelectorAll('.template-card').forEach(card => {
            card.addEventListener('click', function() {
                selectTemplate(this.dataset.template);
            });
        });

        // Blocs de contenu
        document.querySelectorAll('.block-item').forEach(block => {
            block.addEventListener('click', function() {
                addContentBlock(this.dataset.block);
            });
        });

        // Variables
        document.querySelectorAll('.variable-tag').forEach(tag => {
            tag.addEventListener('click', function() {
                insertVariable(this.dataset.variable);
            });
        });

        // Filtres clients
        document.querySelectorAll('.filter-btn').forEach(btn => {
            btn.addEventListener('click', function() {
                filterRecipients(this.dataset.filter);
            });
        });

        // Recherche client
        document.getElementById('clientSearch')?.addEventListener('input', function() {
            searchClients(this.value);
        });

        // Mise à jour en temps réel
        document.getElementById('emailSubject')?.addEventListener('input', updatePreview);
        document.getElementById('emailPreheader')?.addEventListener('input', updatePreview);
        
        const emailContent = document.getElementById('emailContent');
        if (emailContent) {
            emailContent.addEventListener('input', scheduleAutoSave);
            emailContent.addEventListener('keyup', scheduleAutoSave);
            emailContent.addEventListener('paste', scheduleAutoSave);
        }

        // Upload d'images
        document.getElementById('imageUpload')?.addEventListener('change', handleImageUpload);

        // Modes de prévisualisation
        document.querySelectorAll('.preview-btn').forEach(btn => {
            btn.addEventListener('click', function() {
                switchPreviewMode(this.dataset.mode);
            });
        });

        // Sélection de produits
        document.querySelectorAll('.product-card').forEach(card => {
            card.addEventListener('click', function() {
                toggleProductSelection(this.dataset.productId);
            });
        });

        console.log('✅ Tous les event listeners configurés');
    }

    // ===== TOOLBAR PERSONNALISÉE =====
    function initializeCustomToolbar() {
        console.log('🛠️ Initialisation de la toolbar personnalisée...');

        // Boutons de formatage
        document.querySelectorAll('.toolbar-btn[data-command]').forEach(btn => {
            btn.addEventListener('click', function() {
                executeFormatCommand(this.dataset.command);
                updateButtonStates();
            });
        });

        // Sélecteurs
        document.getElementById('fontFamily')?.addEventListener('change', function() {
            document.execCommand('fontName', false, this.value);
            scheduleAutoSave();
        });

        document.getElementById('fontSize')?.addEventListener('change', function() {
            const selectedText = window.getSelection();
            if (selectedText.rangeCount > 0) {
                const range = selectedText.getRangeAt(0);
                if (!range.collapsed) {
                    const span = document.createElement('span');
                    span.style.fontSize = this.value;
                    try {
                        range.surroundContents(span);
                    } catch (e) {
                        // Fallback
                        document.execCommand('fontSize', false, '7');
                        const newSpan = document.createElement('span');
                        newSpan.style.fontSize = this.value;
                        newSpan.textContent = range.toString();
                        range.deleteContents();
                        range.insertNode(newSpan);
                    }
                }
            }
            scheduleAutoSave();
        });

        document.getElementById('heading')?.addEventListener('change', function() {
            if (this.value) {
                document.execCommand('formatBlock', false, this.value);
            } else {
                document.execCommand('formatBlock', false, 'div');
            }
            scheduleAutoSave();
        });

        document.getElementById('textColor')?.addEventListener('change', function() {
            document.execCommand('foreColor', false, this.value);
            scheduleAutoSave();
        });

        // Boutons spéciaux
        document.getElementById('insertLink')?.addEventListener('click', function() {
            openModal('linkModal');
        });

        document.getElementById('insertImage')?.addEventListener('click', function() {
            document.getElementById('imageUpload').click();
        });

        console.log('✅ Toolbar personnalisée configurée');
    }

    function executeFormatCommand(command) {
        const emailContent = document.getElementById('emailContent');
        if (!emailContent) return;

        emailContent.focus();
        
        switch(command) {
            case 'bold':
                document.execCommand('bold', false, null);
                break;
            case 'italic':
                document.execCommand('italic', false, null);
                break;
            case 'underline':
                document.execCommand('underline', false, null);
                break;
            case 'justifyLeft':
                document.execCommand('justifyLeft', false, null);
                break;
            case 'justifyCenter':
                document.execCommand('justifyCenter', false, null);
                break;
            case 'justifyRight':
                document.execCommand('justifyRight', false, null);
                break;
            case 'justifyFull':
                document.execCommand('justifyFull', false, null);
                break;
            case 'removeFormat':
                document.execCommand('removeFormat', false, null);
                break;
        }
        
        scheduleAutoSave();
    }

    function updateButtonStates() {
        document.querySelectorAll('.toolbar-btn[data-command]').forEach(btn => {
            const command = btn.dataset.command;
            let isActive = false;
            
            try {
                switch(command) {
                    case 'bold':
                        isActive = document.queryCommandState('bold');
                        break;
                    case 'italic':
                        isActive = document.queryCommandState('italic');
                        break;
                    case 'underline':
                        isActive = document.queryCommandState('underline');
                        break;
                }
                
                if (isActive) {
                    btn.classList.add('active');
                } else {
                    btn.classList.remove('active');
                }
            } catch (e) {
                // Ignore les erreurs de queryCommandState
            }
        });
    }

    // ===== FONCTIONS PRINCIPALES =====

    function selectTemplate(templateType) {
        console.log(`📄 Sélection du template: ${templateType}`);
        
        try {
            // Sauvegarder le contenu actuel si ce n'est pas vide
            const currentContent = document.getElementById('emailContent')?.innerHTML;
            if (currentContent && currentContent.trim() !== '') {
                if (!confirm('Changer de template effacera le contenu actuel. Continuer ?')) {
                    return;
                }
            }

            // Mettre à jour l'interface
            document.querySelectorAll('.template-card').forEach(card => {
                card.classList.remove('active');
            });
            
            document.querySelector(`[data-template="${templateType}"]`)?.classList.add('active');

            currentTemplate = templateType;
            loadTemplateContent(templateType);
            showNotification(`📄 Template "${templateType}" sélectionné`, 'success');
            
        } catch (error) {
            console.error('❌ Erreur sélection template:', error);
            showNotification('❌ Erreur lors de la sélection du template', 'error');
        }
    }

    function loadTemplateContent(templateType) {
        const emailContent = document.getElementById('emailContent');
        if (!emailContent) return;

        const templates = {
            elegant: `
                <h2 style="color: #d89ab3; margin-bottom: 20px; text-align: center;">✨ Collection Élégante ✨</h2>
                <p style="margin-bottom: 15px;">Chère {{firstName}},</p>
                <p style="margin-bottom: 20px;">Découvrez notre nouvelle collection de bijoux d'exception, créée spécialement pour vous.</p>
            `,
            modern: `
                <h2 style="color: #3b82f6; margin-bottom: 20px; text-align: center;">🚀 Tendance Moderne</h2>
                <p style="margin-bottom: 15px;">Bonjour {{firstName}},</p>
                <p style="margin-bottom: 20px;">Explorez nos designs contemporains qui redéfinissent l'élégance moderne.</p>
            `,
            classic: `
                <h2 style="color: #1e293b; margin-bottom: 20px; text-align: center;">📰 Style Classique</h2>
                <p style="margin-bottom: 15px;">Madame, Monsieur {{lastName}},</p>
                <p style="margin-bottom: 20px;">Redécouvrez l'intemporel avec notre collection classique de bijoux raffinés.</p>
            `,
            minimal: `
                <h2 style="color: #64748b; margin-bottom: 20px; text-align: center;">— Minimalisme —</h2>
                <p style="margin-bottom: 15px;">{{firstName}},</p>
                <p style="margin-bottom: 20px;">L'essentiel révélé dans notre collection minimaliste.</p>
            `
        };

        if (templates[templateType]) {
            const content = templates[templateType] + `
                <div style="text-align: center; margin: 30px 0;">
                    <a href="${window.EMAIL_EDITOR_CONFIG.baseUrl}/bijoux" style="display: inline-block; background: linear-gradient(135deg, #d89ab3, #b794a8); color: white; padding: 15px 30px; text-decoration: none; border-radius: 8px; font-weight: 600; box-shadow: 0 4px 15px rgba(216, 154, 179, 0.3); transition: transform 0.2s ease;">
                        🛍️ Découvrir
                    </a>
                </div>
                <hr style="margin: 30px 0; border: none; border-top: 1px solid #e2e8f0;">
                <p style="color: #64748b; font-size: 14px;">
                    Cordialement,<br>
                    L'équipe CrystosJewel
                </p>
            `;
            
            emailContent.innerHTML = content;
            scheduleAutoSave();
        }
    }
    function addContentBlock(blockType) {
        console.log(`➕ Ajout du bloc: ${blockType}`);
        
        try {
            const emailContent = document.getElementById('emailContent');
            if (!emailContent) {
        function addContentBlock(blockType) {
        console.log(`➕ Ajout du bloc: ${blockType}`);
        
        try {
            const emailContent = document.getElementById('emailContent');
            if (!emailContent) {
                showNotification('❌ Zone de contenu introuvable', 'error');
                return;
            }

            // Obtenir la position du curseur
            const selection = window.getSelection();
            let range;
            
            if (selection.rangeCount > 0) {
                range = selection.getRangeAt(0);
            } else {
                range = document.createRange();
                range.selectNodeContents(emailContent);
                range.collapse(false);
            }

            let elementToInsert;

            switch(blockType) {
                case 'title':
                    elementToInsert = document.createElement('h2');
                    elementToInsert.style.color = '#d89ab3';
                    elementToInsert.style.margin = '20px 0';
                    elementToInsert.textContent = 'Nouveau titre';
                    break;
                    
                case 'text':
                    elementToInsert = document.createElement('p');
                    elementToInsert.style.margin = '15px 0';
                    elementToInsert.textContent = 'Votre texte ici...';
                    break;
                    
                case 'image':
                    document.getElementById('imageUpload').click();
                    return;
                    
                case 'button':
                    elementToInsert = document.createElement('div');
                    elementToInsert.style.textAlign = 'center';
                    elementToInsert.style.margin = '20px 0';
                    elementToInsert.innerHTML = '<a href="#" style="display: inline-block; background: linear-gradient(135deg, #d89ab3, #b794a8); color: white; padding: 12px 24px; text-decoration: none; border-radius: 8px; font-weight: 600; box-shadow: 0 4px 15px rgba(216, 154, 179, 0.3); transition: transform 0.2s ease;">Cliquez ici</a>';
                    break;
                    
                case 'divider':
                    elementToInsert = document.createElement('hr');
                    elementToInsert.style.margin = '30px 0';
                    elementToInsert.style.border = 'none';
                    elementToInsert.style.borderTop = '2px solid #e2e8f0';
                    break;
                    
                case 'columns':
                    elementToInsert = document.createElement('div');
                    elementToInsert.className = 'two-columns';
                    elementToInsert.style.display = 'grid';
                    elementToInsert.style.gridTemplateColumns = '1fr 1fr';
                    elementToInsert.style.gap = '20px';
                    elementToInsert.style.margin = '20px 0';
                    elementToInsert.innerHTML = `
                        <div class="column" style="padding: 15px; background: #f8fafc; border-radius: 6px; min-height: 100px;">
                            <h3>Colonne 1</h3>
                            <p>Contenu de la première colonne...</p>
                        </div>
                        <div class="column" style="padding: 15px; background: #f8fafc; border-radius: 6px; min-height: 100px;">
                            <h3>Colonne 2</h3>
                            <p>Contenu de la deuxième colonne...</p>
                        </div>
                    `;
                    break;
                    
                case 'products':
                    openModal('productsModal');
                    return;
                    
                case 'promotion':
                    elementToInsert = document.createElement('div');
                    elementToInsert.style.background = 'linear-gradient(135deg, #f59e0b, #f97316)';
                    elementToInsert.style.color = 'white';
                    elementToInsert.style.padding = '20px';
                    elementToInsert.style.borderRadius = '8px';
                    elementToInsert.style.textAlign = 'center';
                    elementToInsert.style.margin = '20px 0';
                    elementToInsert.innerHTML = `
                        <h3 style="margin: 0 0 10px 0; font-size: 24px;">🎉 PROMOTION SPÉCIALE</h3>
                        <p style="margin: 0 0 15px 0; font-size: 18px;">-25% sur toute la collection</p>
                        <p style="margin: 0; font-size: 14px;">Code: PROMO25 • Valable jusqu'au 31/12/2025</p>
                    `;
                    break;
                    
                case 'unsubscribe':
                    elementToInsert = document.createElement('div');
                    elementToInsert.style.textAlign = 'center';
                    elementToInsert.style.margin = '30px 0';
                    elementToInsert.style.padding = '15px';
                    elementToInsert.style.background = '#f8fafc';
                    elementToInsert.style.borderRadius = '8px';
                    elementToInsert.innerHTML = `
                        <p style="font-size: 12px; color: #64748b; margin-bottom: 10px;">
                            Vous recevez cet email car vous êtes abonné(e) à notre newsletter
                        </p>
                        <p style="font-size: 12px;">
                            <a href="{{unsubscribeUrl}}" style="color: #64748b;">Se désabonner</a> | 
                            <a href="{{preferencesUrl}}" style="color: #64748b;">Gérer mes préférences</a>
                        </p>
                    `;
                    break;
                    
                default:
                    showNotification(`❌ Bloc "${blockType}" non reconnu`, 'error');
                    return;
            }

            if (elementToInsert) {
                range.deleteContents();
                range.insertNode(elementToInsert);
                
                // Placer le curseur après l'élément inséré
                range.setStartAfter(elementToInsert);
                range.collapse(true);
                selection.removeAllRanges();
                selection.addRange(range);
                
                showNotification(`✅ Bloc "${blockType}" ajouté`, 'success');
                scheduleAutoSave();
            }
            
        } catch (error) {
            console.error('❌ Erreur ajout bloc:', error);
            showNotification('❌ Erreur lors de l\'ajout du bloc', 'error');
        }
    }

    function insertVariable(variable) {
        console.log(`🔧 Insertion de la variable: ${variable}`);
        
        try {
            const emailContent = document.getElementById('emailContent');
            if (!emailContent) return;

            emailContent.focus();
            const selection = window.getSelection();
            
            if (selection.rangeCount > 0) {
                const range = selection.getRangeAt(0);
                const textNode = document.createTextNode(variable);
                range.deleteContents();
                range.insertNode(textNode);
                
                // Placer le curseur après la variable
                range.setStartAfter(textNode);
                range.collapse(true);
                selection.removeAllRanges();
                selection.addRange(range);
            } else {
                // Ajouter à la fin si pas de sélection
                const textNode = document.createTextNode(` ${variable}`);
                emailContent.appendChild(textNode);
            }
            
            showNotification(`✅ Variable "${variable}" insérée`, 'success');
            scheduleAutoSave();
            
        } catch (error) {
            console.error('❌ Erreur insertion variable:', error);
            showNotification('❌ Erreur lors de l\'insertion', 'error');
        }
    }

    function updatePreview() {
        const subject = document.getElementById('emailSubject')?.value || '🎉 Découvrez nos nouveautés !';
        const preheader = document.getElementById('emailPreheader')?.value || 'Texte de prévisualisation';
        
        const previewSubject = document.getElementById('previewSubject');
        const previewPreheader = document.getElementById('previewPreheader');
        
        if (previewSubject) previewSubject.textContent = subject;
        if (previewPreheader) previewPreheader.textContent = preheader;
        
        scheduleAutoSave();
    }

    function switchPreviewMode(mode) {
        const previewBtns = document.querySelectorAll('.preview-btn');
        const emailPreview = document.getElementById('emailPreview');
        
        previewBtns.forEach(btn => btn.classList.remove('active'));
        document.querySelector(`[data-mode="${mode}"]`).classList.add('active');
        
        if (mode === 'mobile') {
            emailPreview.classList.add('mobile');
            showNotification('📱 Vue mobile activée', 'info');
        } else {
            emailPreview.classList.remove('mobile');
            showNotification('🖥️ Vue desktop activée', 'info');
        }
    }

    // ===== GESTION DES CLIENTS =====

    function loadClients() {
        console.log('👥 Chargement des clients...');
        
        try {
            // Utiliser les données depuis EJS
            allClients = window.EMAIL_EDITOR_CONFIG.customers || [];
            
            // Afficher les clients selon le filtre actuel
            filterRecipients(currentFilter);
            
            // Charger via API pour avoir les données les plus récentes
            fetch(`/admin/marketing/api/customers?filter=${currentFilter}`)
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        allClients = data.customers;
                        displayClients(data.customers);
                    }
                })
                .catch(error => {
                    console.error('Erreur chargement clients API:', error);
                    // Utiliser les données EJS en fallback
                    displayClients(allClients);
                });
            
        } catch (error) {
            console.error('❌ Erreur chargement clients:', error);
            const clientsList = document.getElementById('clientsList');
            if (clientsList) {
                clientsList.innerHTML = '<div style="color: var(--danger); text-align: center; padding: 20px;">Erreur de chargement</div>';
            }
        }
    }

    function displayClients(clients) {
        const clientsList = document.getElementById('clientsList');
        if (!clientsList) return;

        if (clients.length === 0) {
            clientsList.innerHTML = '<div style="color: var(--text-secondary); text-align: center; padding: 20px;">Aucun client trouvé</div>';
            return;
        }

        const clientsHtml = clients.map(client => `
            <div class="client-item ${selectedClients.includes(client.id) ? 'selected' : ''}" data-client-id="${client.id}" onclick="toggleClientSelection(${client.id})">
                <div class="client-name">${client.name || `${client.first_name || ''} ${client.last_name || ''}`.trim() || 'Client sans nom'}</div>
                <div class="client-email">${client.email}</div>
                ${(client.totalOrders > 0 || client.hasOrders) ? `<div style="font-size: 11px; color: var(--success);">💰 ${client.totalOrders || 0} commandes</div>` : ''}
            </div>
        `).join('');

        clientsList.innerHTML = clientsHtml;
    }

    function toggleClientSelection(clientId) {
        const clientItem = document.querySelector(`[data-client-id="${clientId}"]`);
        if (!clientItem) return;

        const isSelected = selectedClients.includes(clientId);
        
        if (isSelected) {
            selectedClients = selectedClients.filter(id => id !== clientId);
            clientItem.classList.remove('selected');
        } else {
            selectedClients.push(clientId);
            clientItem.classList.add('selected');
        }

        updateRecipientCounter();
        console.log(`👤 Client ${clientId} ${isSelected ? 'désélectionné' : 'sélectionné'}`);
    }

    function filterRecipients(filter) {
        console.log(`🔍 Filtrage: ${filter}`);
        
        try {
            document.querySelectorAll('.filter-btn').forEach(btn => {
                btn.classList.remove('active');
            });
            
            document.querySelector(`[data-filter="${filter}"]`)?.classList.add('active');

            currentFilter = filter;
            
            // Filtrer depuis l'API
            fetch(`/admin/marketing/api/customers?filter=${filter}`)
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        displayClients(data.customers);
                        updateRecipientCounter();
                    }
                })
                .catch(error => {
                    console.error('Erreur filtrage clients:', error);
                    // Fallback sur les données locales
                    let filteredClients = [];
                    if (filter === 'all') {
                        filteredClients = allClients;
                    } else if (filter === 'newsletter') {
                        filteredClients = allClients.filter(client => !client.hasOrders);
                    } else if (filter === 'with-orders') {
                        filteredClients = allClients.filter(client => client.hasOrders);
                    } else if (filter === 'vip') {
                        filteredClients = allClients.filter(client => client.totalSpent >= 500 || client.totalOrders >= 5);
                    }
                    displayClients(filteredClients);
                    updateRecipientCounter();
                });
            
            showNotification(`🔍 Filtre "${filter}" appliqué`, 'info');
            
        } catch (error) {
            console.error('❌ Erreur filtrage:', error);
        }
    }

    function searchClients(query) {
        if (!query.trim()) {
            filterRecipients(currentFilter);
            return;
        }

        fetch(`/admin/marketing/api/customers?filter=${currentFilter}&search=${encodeURIComponent(query)}`)
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    displayClients(data.customers);
                    console.log(`🔍 Recherche "${query}": ${data.customers.length} résultats`);
                }
            })
            .catch(error => {
                console.error('Erreur recherche clients:', error);
                // Fallback sur recherche locale
                const filteredClients = allClients.filter(client => 
                    client.name?.toLowerCase().includes(query.toLowerCase()) ||
                    client.email?.toLowerCase().includes(query.toLowerCase()) ||
                    client.first_name?.toLowerCase().includes(query.toLowerCase()) ||
                    client.last_name?.toLowerCase().includes(query.toLowerCase())
                );
                displayClients(filteredClients);
            });
    }

    function updateRecipientCounter() {
        const counter = document.getElementById('recipientCount');
        if (counter) {
            counter.textContent = selectedClients.length;
        }
    }
    // ===== GESTION DES MODALS =====

    function openModal(modalId) {
        const modal = document.getElementById(modalId);
        if (modal) {
            modal.classList.add('active');
            document.body.style.overflow = 'hidden';
        }
    }

    function closeModal(modalId) {
        const modal = document.getElementById(modalId);
        if (modal) {
            modal.classList.remove('active');
            document.body.style.overflow = '';
        }
    }

    function insertLink() {
        const text = document.getElementById('linkText').value;
        const url = document.getElementById('linkUrl').value;
        const newTab = document.getElementById('linkNewTab').checked;
        
        if (!text || !url) {
            showNotification('⚠️ Veuillez remplir tous les champs', 'warning');
            return;
        }
        
        const emailContent = document.getElementById('emailContent');
        emailContent.focus();
        
        const link = document.createElement('a');
        link.href = url;
        link.textContent = text;
        link.style.color = '#d89ab3';
        link.style.textDecoration = 'underline';
        if (newTab) {
            link.target = '_blank';
        }
        
        const selection = window.getSelection();
        if (selection.rangeCount > 0) {
            const range = selection.getRangeAt(0);
            range.deleteContents();
            range.insertNode(link);
        } else {
            emailContent.appendChild(link);
        }
        
        closeModal('linkModal');
        showNotification('✅ Lien inséré', 'success');
        scheduleAutoSave();
        
        // Réinitialiser le formulaire
        document.getElementById('linkText').value = '';
        document.getElementById('linkUrl').value = '';
        document.getElementById('linkNewTab').checked = false;
    }

    function toggleProductSelection(productId) {
        const productCard = document.querySelector(`[data-product-id="${productId}"]`);
        if (!productCard) return;
        
        const isSelected = selectedProducts.includes(productId);
        
        if (isSelected) {
            selectedProducts = selectedProducts.filter(id => id !== productId);
            productCard.classList.remove('selected');
        } else {
            selectedProducts.push(productId);
            productCard.classList.add('selected');
        }
    }

    function insertSelectedProducts() {
        if (selectedProducts.length === 0) {
            showNotification('⚠️ Sélectionnez au moins un produit', 'warning');
            return;
        }
        
        const emailContent = document.getElementById('emailContent');
        const jewels = window.EMAIL_EDITOR_CONFIG.jewels || [];
        
        let productsHtml = '<div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 20px; margin: 20px 0;">';
        
        selectedProducts.forEach(productId => {
            const product = jewels.find(j => j.id == productId);
            if (product) {
                productsHtml += `
                    <div style="border: 1px solid #e2e8f0; border-radius: 8px; padding: 15px; text-align: center; background: white; box-shadow: 0 2px 4px rgba(0,0,0,0.1);">
                        <img src="${product.imageUrl || '/images/no-image.jpg'}" alt="${product.name}" style="width: 100%; height: 120px; object-fit: cover; border-radius: 4px; margin-bottom: 10px;">
                        <h4 style="color: #1e293b; margin: 0 0 8px 0; font-size: 16px;">${product.name}</h4>
                        <p style="color: #d89ab3; font-weight: 600; font-size: 18px; margin: 0 0 15px 0;">${product.formattedPrice || product.price_ttc + '€'}</p>
                        <a href="${window.EMAIL_EDITOR_CONFIG.baseUrl}/bijou/${product.id}" style="display: inline-block; background: linear-gradient(135deg, #d89ab3, #b794a8); color: white; padding: 8px 16px; text-decoration: none; border-radius: 4px; font-size: 14px; transition: transform 0.2s ease;">Voir le produit</a>
                    </div>
                `;
            }
        });
        
        productsHtml += '</div>';
        
        const selection = window.getSelection();
        if (selection.rangeCount > 0) {
            const range = selection.getRangeAt(0);
            const tempDiv = document.createElement('div');
            tempDiv.innerHTML = productsHtml;
            range.deleteContents();
            range.insertNode(tempDiv.firstChild);
        } else {
            const tempDiv = document.createElement('div');
            tempDiv.innerHTML = productsHtml;
            emailContent.appendChild(tempDiv.firstChild);
        }
        
        closeModal('productsModal');
        showNotification(`✅ ${selectedProducts.length} produit(s) inséré(s)`, 'success');
        
        // Réinitialiser la sélection
        selectedProducts = [];
        document.querySelectorAll('.product-card').forEach(card => {
            card.classList.remove('selected');
        });
        
        scheduleAutoSave();
    }

    // ===== SAUVEGARDE AUTOMATIQUE =====

    function startAutoSave() {
        console.log('💾 Démarrage de la sauvegarde automatique...');
        
        setInterval(() => {
            if (Date.now() - lastSaveTime > 30000) {
                autoSave();
            }
        }, 30000);
    }

    function scheduleAutoSave() {
        lastSaveTime = Date.now();
        
        if (autoSaveTimer) {
            clearTimeout(autoSaveTimer);
        }
        
        autoSaveTimer = setTimeout(() => {
            autoSave();
        }, 3000);
    }

    function autoSave() {
        try {
            const campaignData = {
                name: document.getElementById('campaignName')?.value || 'Campagne sans nom',
                subject: document.getElementById('emailSubject')?.value || '',
                preheader: document.getElementById('emailPreheader')?.value || '',
                content: document.getElementById('emailContent')?.innerHTML || '',
                template: currentTemplate,
                recipients: selectedClients,
                timestamp: new Date().toISOString()
            };

            localStorage.setItem('emailDraft_autosave', JSON.stringify(campaignData));
            
            showAutoSaveIndicator();
            console.log('💾 Sauvegarde automatique effectuée');
            
        } catch (error) {
            console.error('❌ Erreur sauvegarde automatique:', error);
        }
    }

    function showAutoSaveIndicator() {
        const indicator = document.getElementById('autoSaveIndicator');
        if (indicator) {
            indicator.classList.add('visible');
            setTimeout(() => {
                indicator.classList.remove('visible');
            }, 2000);
        }
    }

    // ===== ACTIONS PRINCIPALES =====

    function saveAsDraft() {
        console.log('💾 Sauvegarde en brouillon...');
        
        try {
            const campaignData = {
                name: document.getElementById('campaignName')?.value || 'Campagne sans nom',
                subject: document.getElementById('emailSubject')?.value || '',
                preheader: document.getElementById('emailPreheader')?.value || '',
                content: document.getElementById('emailContent')?.innerHTML || '',
                template: currentTemplate,
                recipients: selectedClients,
                timestamp: new Date().toISOString()
            };

            // Sauvegarder via API
            fetch('/admin/marketing/api/save-draft', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(campaignData)
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    showNotification('💾 Brouillon sauvegardé avec succès', 'success');
                    localStorage.setItem('emailDraft', JSON.stringify(campaignData));
                } else {
                    throw new Error(data.message || 'Erreur de sauvegarde');
                }
            })
            .catch(error => {
                console.error('Erreur API sauvegarde:', error);
                // Fallback sur localStorage
                localStorage.setItem('emailDraft', JSON.stringify(campaignData));
                showNotification('💾 Brouillon sauvegardé localement', 'warning');
            });
            
        } catch (error) {
            console.error('❌ Erreur sauvegarde:', error);
            showNotification('❌ Erreur lors de la sauvegarde', 'error');
        }
    }

    function sendTest() {
        console.log('🧪 Envoi d\'email de test...');
        
        try {
            if (selectedClients.length === 0) {
                showNotification('⚠️ Sélectionnez au moins un destinataire', 'warning');
                return;
            }

            const subject = document.getElementById('emailSubject')?.value;
            if (!subject?.trim()) {
                showNotification('⚠️ Sujet de l\'email requis', 'warning');
                return;
            }

            const content = document.getElementById('emailContent')?.innerHTML;
            if (!content?.trim()) {
                showNotification('⚠️ Contenu de l\'email requis', 'warning');
                return;
            }

            // Prendre le premier client sélectionné pour le test
            const testClient = allClients.find(c => c.id === selectedClients[0]);
            if (!testClient) {
                showNotification('⚠️ Client de test introuvable', 'warning');
                return;
            }

            const testData = {
                email: testClient.email,
                subject: subject,
                content: content,
                template: currentTemplate
            };

            // Envoyer via API
            fetch('/admin/marketing/api/send-test', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(testData)
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    showNotification(`🧪 Email de test envoyé à ${testClient.email}`, 'success');
                } else {
                    throw new Error(data.message || 'Erreur d\'envoi');
                }
            })
            .catch(error => {
                console.error('Erreur envoi test:', error);
                showNotification('❌ Erreur lors de l\'envoi du test', 'error');
            });
            
        } catch (error) {
            console.error('❌ Erreur test:', error);
            showNotification('❌ Erreur lors de l\'envoi du test', 'error');
        }
    }

    function previewEmail() {
        console.log('👁️ Aperçu de l\'email...');
        
        try {
            const emailPreview = document.getElementById('emailPreview');
            if (emailPreview) {
                const subject = document.getElementById('emailSubject')?.value || 'Email Preview';
                const newWindow = window.open('', '_blank', 'width=800,height=600');
                newWindow.document.write(`
                    <!DOCTYPE html>
                    <html>
                    <head>
                        <title>${subject}</title>
                        <meta name="viewport" content="width=device-width, initial-scale=1.0">
                        <style>
                            body { 
                                font-family: Arial, sans-serif; 
                                margin: 0; 
                                padding: 20px; 
                                background: #f8fafc;
                            }
                            .email-container {
                                max-width: 600px;
                                margin: 0 auto;
                                background: white;
                                border-radius: 8px;
                                box-shadow: 0 4px 20px rgba(0,0,0,0.1);
                                overflow: hidden;
                            }
                            @media (max-width: 600px) {
                                .email-container { width: 100% !important; }
                                .two-columns { grid-template-columns: 1fr !important; }
                            }
                        </style>
                    </head>
                    <body>
                        <div class="email-container">
                            ${emailPreview.outerHTML}
                        </div>
                    </body>
                    </html>
                `);
                newWindow.document.close();
            }
            
        } catch (error) {
            console.error('❌ Erreur aperçu:', error);
            showNotification('❌ Erreur lors de l\'aperçu', 'error');
        }
    }

    function sendCampaign() {
        console.log('📧 Envoi de la campagne...');
        
        try {
            if (selectedClients.length === 0) {
                showNotification('⚠️ Sélectionnez au moins un destinataire', 'warning');
                return;
            }

            const campaignName = document.getElementById('campaignName')?.value;
            if (!campaignName?.trim()) {
                showNotification('⚠️ Nom de campagne requis', 'warning');
                return;
            }

            const subject = document.getElementById('emailSubject')?.value;
            if (!subject?.trim()) {
                showNotification('⚠️ Sujet de l\'email requis', 'warning');
                return;
            }

            const content = document.getElementById('emailContent')?.innerHTML;
            if (!content?.trim()) {
                showNotification('⚠️ Contenu de l\'email requis', 'warning');
                return;
            }

            if (confirm(`Envoyer la campagne "${campaignName}" à ${selectedClients.length} destinataires ?`)) {
                const campaignData = {
                    name: campaignName,
                    subject: subject,
                    preheader: document.getElementById('emailPreheader')?.value || '',
                    content: content,
                    template: currentTemplate,
                    recipients: selectedClients,
                    fromName: document.getElementById('senderName')?.value || 'CrystosJewel'
                };

                // Désactiver le bouton d'envoi
                const sendBtn = document.getElementById('sendCampaignBtn');
                if (sendBtn) {
                    sendBtn.disabled = true;
                    sendBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Envoi...';
                }

                // Envoyer via API
                fetch('/admin/marketing/api/send-campaign', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(campaignData)
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        showNotification(`📧 Campagne "${campaignName}" envoyée avec succès !`, 'success');
                        
                        // Nettoyer le formulaire
                        document.getElementById('campaignName').value = '';
                        document.getElementById('emailSubject').value = '';
                        document.getElementById('emailPreheader').value = '';
                        document.getElementById('emailContent').innerHTML = '';
                        selectedClients = [];
                        updateRecipientCounter();
                        
                    } else {
                        throw new Error(data.message || 'Erreur d\'envoi');
                    }
                })
                .catch(error => {
                    console.error('Erreur envoi campagne:', error);
                    showNotification('❌ Erreur lors de l\'envoi de la campagne', 'error');
                })
                .finally(() => {
                    // Réactiver le bouton
                    if (sendBtn) {
                        sendBtn.disabled = false;
                        sendBtn.innerHTML = '<i class="fas fa-paper-plane"></i> Envoyer';
                    }
                });
            }
            
        } catch (error) {
            console.error('❌ Erreur envoi:', error);
            showNotification('❌ Erreur lors de l\'envoi', 'error');
        }
    }

    function handleImageUpload(event) {
        console.log('📷 Upload d\'image...');
        
        try {
            const files = Array.from(event.target.files);
            if (files.length === 0) return;

            files.forEach(file => {
                if (!file.type.startsWith('image/')) {
                    showNotification('⚠️ Veuillez sélectionner des images uniquement', 'warning');
                    return;
                }

                // Vérifier la taille (5MB max)
                if (file.size > 5 * 1024 * 1024) {
                    showNotification('⚠️ Image trop grande (max 5MB)', 'warning');
                    return;
                }

                const reader = new FileReader();
                reader.onload = function(e) {
                    const imageUrl = e.target.result;
                    
                    // Ajouter à la galerie
                    const uploadedImages = document.getElementById('uploadedImages');
                    if (uploadedImages) {
                        uploadedImages.innerHTML += `
                            <div style="margin-bottom: 10px; position: relative;">
                                <img src="${imageUrl}" alt="Image uploadée" class="image-resizable" style="width: 100%; max-height: 100px; object-fit: cover; border-radius: 4px; cursor: pointer;" onclick="insertImageIntoEmail('${imageUrl}')">
                                <button onclick="this.parentElement.remove()" style="position: absolute; top: 5px; right: 5px; background: var(--danger); color: white; border: none; border-radius: 50%; width: 20px; height: 20px; cursor: pointer; font-size: 12px;">×</button>
                            </div>
                        `;
                    }
                    
                    // Insérer directement dans l'éditeur
                    insertImageIntoEmail(imageUrl);
                    
                    showNotification('📷 Image uploadée et insérée', 'success');
                };
                reader.readAsDataURL(file);
            });
            
            // Reset input
            event.target.value = '';
            
        } catch (error) {
            console.error('❌ Erreur upload:', error);
            showNotification('❌ Erreur lors de l\'upload', 'error');
        }
    }

    function insertImageIntoEmail(imageUrl) {
        const emailContent = document.getElementById('emailContent');
        if (!emailContent) return;
        
        emailContent.focus();
        
        const img = document.createElement('img');
        img.src = imageUrl;
        img.alt = 'Image';
        img.className = 'image-resizable';
        img.style.maxWidth = '100%';
        img.style.height = 'auto';
        img.style.borderRadius = '8px';
        img.style.margin = '10px 0';
        img.style.display = 'block';
        
        const selection = window.getSelection();
        if (selection.rangeCount > 0) {
            const range = selection.getRangeAt(0);
            range.deleteContents();
            range.insertNode(img);
            
            // Placer le curseur après l'image
            range.setStartAfter(img);
            range.collapse(true);
            selection.removeAllRanges();
            selection.addRange(range);
        } else {
            emailContent.appendChild(img);
        }
        
        showNotification('✅ Image insérée dans l\'email', 'success');
        scheduleAutoSave();
    }

    // ===== UTILITAIRES =====

    function showNotification(message, type = 'info') {
        const notification = document.createElement('div');
        notification.className = `notification ${type}`;
        notification.textContent = message;
        
        document.body.appendChild(notification);
        
        setTimeout(() => {
            notification.style.animation = 'slideOut 0.3s ease forwards';
            setTimeout(() => {
                if (document.body.contains(notification)) {
                    document.body.removeChild(notification);
                }
            }, 300);
        }, 3000);
    }

    // ===== RACCOURCIS CLAVIER =====
    document.addEventListener('keydown', function(e) {
        if (e.ctrlKey || e.metaKey) {
            switch(e.key) {
                case 's':
                    e.preventDefault();
                    saveAsDraft();
                    break;
                case 'Enter':
                    if (e.shiftKey) {
                        e.preventDefault();
                        sendTest();
                    }
                    break;
                case 'p':
                    e.preventDefault();
                    previewEmail();
                    break;
            }
        }
        
        // Mise à jour des boutons de formatage lors de la sélection
        if (e.key === 'ArrowLeft' || e.key === 'ArrowRight' || e.key === 'ArrowUp' || e.key === 'ArrowDown') {
            setTimeout(updateButtonStates, 10);
        }
    });

    // Mise à jour des boutons lors des clics
    document.addEventListener('click', function(e) {
        if (e.target.closest('#emailContent')) {
            setTimeout(updateButtonStates, 10);
        }
    });

    // ===== GESTION DES MODALS (fermeture par clic externe) =====
    document.addEventListener('click', function(e) {
        if (e.target.classList.contains('modal')) {
            e.target.classList.remove('active');
            document.body.style.overflow = '';
        }
    });

    // ===== CHARGEMENT DE BROUILLON =====
    window.addEventListener('load', function() {
        try {
            const savedDraft = localStorage.getItem('emailDraft_autosave');
            if (savedDraft) {
                const draft = JSON.parse(savedDraft);
                
                if (confirm('Un brouillon sauvegardé automatiquement a été trouvé. Voulez-vous le charger ?')) {
                    document.getElementById('campaignName').value = draft.name || '';
                    document.getElementById('emailSubject').value = draft.subject || '';
                    document.getElementById('emailPreheader').value = draft.preheader || '';
                    
                    const emailContent = document.getElementById('emailContent');
                    if (emailContent && draft.content) {
                        emailContent.innerHTML = draft.content;
                    }
                    
                    selectedClients = draft.recipients || [];
                    updateRecipientCounter();
                    updatePreview();
                    
                    showNotification('📄 Brouillon chargé', 'success');
                }
            }
        } catch (error) {
            console.error('❌ Erreur chargement brouillon:', error);
        }
    });

    // ===== RECHERCHE DE PRODUITS =====
    const productSearch = document.getElementById('productSearch');
    if (productSearch) {
        productSearch.addEventListener('input', function() {
            const query = this.value.toLowerCase();
            const productCards = document.querySelectorAll('.product-card');
            
            productCards.forEach(card => {
                const productName = card.querySelector('.product-name').textContent.toLowerCase();
                if (productName.includes(query)) {
                    card.style.display = 'block';
                } else {
                    card.style.display = 'none';
                }
            });
        });
    }

    console.log('🎉 Script email-editor complet chargé avec succès !');
}}}
</script>
</body>
</html>
