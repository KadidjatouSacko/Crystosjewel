<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>✏️ <%= title %> - CrystosJewel</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/css/style.css">
    
    <style>
        :root {
            --primary: #d89ab3;
            --primary-dark: #b794a8;
            --secondary: #8b5cf6;
            --success: #10b981;
            --warning: #f59e0b;
            --danger: #ef4444;
            --info: #3b82f6;
            --text-primary: #1e293b;
            --text-secondary: #64748b;
            --bg-primary: #f8fafc;
            --bg-secondary: #ffffff;
            --border: #e2e8f0;
            --shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
            --radius: 8px;
        }

        * { 
            margin: 0; 
            padding: 0; 
            box-sizing: border-box; 
        }

        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
            background: var(--bg-primary);
            color: var(--text-primary);
            height: 100vh;
            overflow: hidden;
        }

        .editor-container {
            display: grid;
            grid-template-columns: 300px 1fr 300px;
            height: 100vh;
        }

        .sidebar-left, .sidebar-right {
            background: var(--bg-secondary);
            border-right: 1px solid var(--border);
            padding: 20px;
            overflow-y: auto;
        }

        .sidebar-right {
            border-left: 1px solid var(--border);
            border-right: none;
        }

        .editor-main {
            display: flex;
            flex-direction: column;
            background: #f1f5f9;
        }

        .editor-header {
            background: var(--bg-secondary);
            border-bottom: 1px solid var(--border);
            padding: 15px 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            gap: 15px;
        }

        .editor-title {
            font-size: 1.2rem;
            font-weight: 600;
            color: var(--text-primary);
            flex: 1;
        }

        .editor-actions {
            display: flex;
            gap: 10px;
        }

        .toolbar {
            background: var(--bg-secondary);
            border-bottom: 1px solid var(--border);
            padding: 10px 20px;
            display: flex;
            gap: 15px;
            align-items: center;
            flex-wrap: wrap;
            min-height: 60px;
            position: sticky;
            top: 0;
            z-index: 100;
        }

        .toolbar-group {
            display: flex;
            gap: 5px;
            align-items: center;
            padding: 5px 10px;
            border-radius: var(--radius);
            background: var(--bg-primary);
            border: 1px solid var(--border);
        }

        .toolbar-btn {
            padding: 6px 8px;
            border: none;
            border-radius: 4px;
            background: transparent;
            cursor: pointer;
            transition: all 0.2s ease;
            color: var(--text-primary);
            font-size: 14px;
            min-width: 32px;
            height: 32px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .toolbar-btn:hover {
            background: var(--primary);
            color: white;
        }

        .toolbar-btn.active {
            background: var(--primary);
            color: white;
        }

        .toolbar-select {
            padding: 4px 8px;
            border: 1px solid var(--border);
            border-radius: 4px;
            background: white;
            font-size: 12px;
            min-width: 80px;
        }

        .color-picker {
            width: 32px;
            height: 32px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            background: transparent;
        }

        .preview-area {
            flex: 1;
            display: flex;
            overflow: hidden;
        }

        .editor-wrapper {
            flex: 1;
            display: flex;
            flex-direction: column;
            background: white;
            margin: 20px;
            border-radius: var(--radius);
            box-shadow: var(--shadow);
            border: 1px solid var(--border);
            overflow: hidden;
        }

        .preview-controls {
            background: var(--bg-primary);
            padding: 10px 15px;
            border-bottom: 1px solid var(--border);
            display: flex;
            gap: 10px;
            align-items: center;
        }

        .preview-mode {
            display: flex;
            gap: 5px;
        }

        .preview-btn {
            padding: 6px 12px;
            border: 1px solid var(--border);
            border-radius: 4px;
            background: white;
            cursor: pointer;
            font-size: 12px;
            transition: all 0.2s ease;
        }

        .preview-btn.active {
            background: var(--primary);
            color: white;
            border-color: var(--primary);
        }

        .email-preview {
            flex: 1;
            background: white;
            overflow-y: auto;
            transition: all 0.3s ease;
            max-width: 600px;
            margin: 0 auto;
            width: 100%;
        }

        .email-preview.mobile {
            max-width: 375px;
            border-left: 1px solid var(--border);
            border-right: 1px solid var(--border);
        }

        .content-editable {
            padding: 20px !important;
            min-height: 500px;
            max-height: calc(100vh - 400px);
            overflow-y: auto;
            line-height: 1.6;
            outline: none;
            border: none;
            font-family: inherit;
            font-size: 14px;
        }

        .content-editable:focus {
            outline: 2px solid var(--primary);
            outline-offset: -2px;
        }

        .btn {
            padding: 10px 16px;
            border: none;
            border-radius: var(--radius);
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            display: inline-flex;
            align-items: center;
            gap: 8px;
            font-size: 14px;
            text-decoration: none;
            user-select: none;
            justify-content: center;
        }

        .btn:disabled {
            opacity: 0.6;
            cursor: not-allowed;
            transform: none !important;
        }

        .btn-primary {
            background: linear-gradient(135deg, var(--primary), var(--primary-dark));
            color: white;
            border: 1px solid var(--primary-dark);
        }

        .btn-secondary {
            background: var(--text-secondary);
            color: white;
            border: 1px solid var(--text-secondary);
        }

        .btn-success {
            background: var(--success);
            color: white;
            border: 1px solid var(--success);
        }

        .btn-info {
            background: var(--info);
            color: white;
            border: 1px solid var(--info);
        }

        .btn-warning {
            background: var(--warning);
            color: white;
            border: 1px solid var(--warning);
        }

        .btn:hover:not(:disabled) {
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.15);
        }

        .sidebar-section {
            margin-bottom: 25px;
            padding-bottom: 20px;
            border-bottom: 1px solid var(--border);
        }

        .sidebar-section:last-child {
            border-bottom: none;
        }

        .sidebar-section h3 {
            font-size: 1rem;
            font-weight: 600;
            margin-bottom: 15px;
            color: var(--text-primary);
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .form-group {
            margin-bottom: 15px;
        }

        .form-label {
            display: block;
            font-weight: 600;
            margin-bottom: 5px;
            color: var(--text-primary);
            font-size: 14px;
        }

        .form-input, .form-select, .form-textarea {
            width: 100%;
            padding: 10px;
            border: 1px solid var(--border);
            border-radius: var(--radius);
            font-size: 14px;
            transition: border-color 0.3s ease;
        }

        .form-input:focus, .form-select:focus, .form-textarea:focus {
            outline: none;
            border-color: var(--primary);
            box-shadow: 0 0 0 3px rgba(216, 154, 179, 0.1);
        }

        .template-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 10px;
            margin-bottom: 20px;
        }

        .template-card {
            border: 2px solid var(--border);
            border-radius: var(--radius);
            padding: 10px;
            cursor: pointer;
            transition: all 0.3s ease;
            text-align: center;
            font-size: 12px;
            background: white;
        }

        .template-card:hover {
            border-color: var(--primary);
            background: var(--bg-primary);
            transform: translateY(-2px);
        }

        .template-card.active {
            border-color: var(--primary);
            background: linear-gradient(135deg, var(--primary), var(--primary-dark));
            color: white;
        }

        .content-blocks {
            margin-bottom: 25px;
        }

        .block-item {
            background: var(--bg-primary);
            border: 1px solid var(--border);
            border-radius: var(--radius);
            padding: 12px;
            margin-bottom: 10px;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 10px;
            user-select: none;
        }

        .block-item:hover {
            background: var(--primary);
            color: white;
            transform: translateX(5px);
            box-shadow: var(--shadow);
        }

        .variables-list {
            display: flex;
            flex-wrap: wrap;
            gap: 5px;
        }

        .variable-tag {
            background: var(--secondary);
            color: white;
            padding: 4px 8px;
            border-radius: 12px;
            font-size: 11px;
            cursor: pointer;
            transition: all 0.3s ease;
            user-select: none;
        }

        .variable-tag:hover {
            background: #7c3aed;
            transform: scale(1.05);
        }

        .drop-zone {
            border: 2px dashed var(--border);
            border-radius: 8px;
            padding: 40px 20px;
            text-align: center;
            background: #fafafa;
            transition: all 0.3s;
            margin: 20px 0;
            cursor: pointer;
        }

        .drop-zone:hover, .drop-zone.dragover {
            border-color: var(--primary);
            background: rgba(216, 154, 179, 0.1);
            transform: translateY(-2px);
        }

        .recipients-counter {
            background: var(--success);
            color: white;
            padding: 8px 12px;
            border-radius: var(--radius);
            font-size: 13px;
            font-weight: 600;
            text-align: center;
            margin-bottom: 15px;
        }

        .filter-buttons {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 8px;
            margin-bottom: 15px;
        }

        .filter-btn {
            padding: 8px;
            border: 1px solid var(--border);
            border-radius: var(--radius);
            background: white;
            cursor: pointer;
            font-size: 12px;
            transition: all 0.3s ease;
        }

        .filter-btn.active {
            background: var(--primary);
            color: white;
            border-color: var(--primary);
        }

        .client-item {
            background: white;
            border: 1px solid var(--border);
            border-radius: var(--radius);
            padding: 10px;
            margin-bottom: 8px;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .client-item:hover {
            background: var(--bg-primary);
            border-color: var(--primary);
            transform: translateX(5px);
        }

        .client-item.selected {
            background: var(--primary);
            color: white;
            border-color: var(--primary-dark);
        }

        .client-name {
            font-weight: 600;
            font-size: 14px;
            margin-bottom: 2px;
        }

        .client-email {
            font-size: 12px;
            opacity: 0.8;
        }

        .client-type {
            font-size: 10px;
            background: rgba(255,255,255,0.2);
            padding: 2px 6px;
            border-radius: 10px;
            margin-top: 5px;
            display: inline-block;
        }

        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            z-index: 10000;
            align-items: center;
            justify-content: center;
            backdrop-filter: blur(5px);
        }

        .modal.active {
            display: flex;
        }

        .modal-content {
            background: white;
            border-radius: 12px;
            padding: 30px;
            max-width: 800px;
            width: 90%;
            max-height: 80vh;
            overflow-y: auto;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);
            animation: modalSlideIn 0.3s ease;
        }

        @keyframes modalSlideIn {
            from {
                opacity: 0;
                transform: translateY(-30px) scale(0.95);
            }
            to {
                opacity: 1;
                transform: translateY(0) scale(1);
            }
        }

        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
            padding-bottom: 15px;
            border-bottom: 1px solid var(--border);
        }

        .modal-title {
            font-size: 20px;
            font-weight: 600;
            color: var(--text-primary);
        }

        .modal-close {
            background: none;
            border: none;
            font-size: 24px;
            cursor: pointer;
            color: var(--text-secondary);
            transition: color 0.2s;
        }

        .modal-close:hover {
            color: var(--danger);
        }

        .products-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));
            gap: 15px;
            margin-top: 15px;
        }

        .product-card {
            border: 1px solid var(--border);
            border-radius: var(--radius);
            padding: 15px;
            cursor: pointer;
            transition: all 0.3s ease;
            text-align: center;
            background: white;
        }

        .product-card:hover {
            border-color: var(--primary);
            box-shadow: var(--shadow);
            transform: translateY(-2px);
        }

        .product-card.selected {
            border-color: var(--primary);
            background: var(--bg-primary);
            box-shadow: 0 0 0 2px rgba(216, 154, 179, 0.2);
        }

        .product-image {
            width: 100%;
            height: 120px;
            object-fit: cover;
            border-radius: 6px;
            margin-bottom: 10px;
            background: #f8fafc;
        }

        .product-name {
            font-size: 14px;
            font-weight: 600;
            margin-bottom: 6px;
            color: var(--text-primary);
        }

        .product-price {
            color: var(--primary);
            font-weight: 600;
            font-size: 16px;
        }

        .notification {
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 15px 20px;
            border-radius: 8px;
            color: white;
            font-weight: 600;
            z-index: 99999;
            max-width: 350px;
            animation: slideIn 0.3s ease;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);
        }

        .notification.success { background: var(--success); }
        .notification.error { background: var(--danger); }
        .notification.warning { background: var(--warning); }
        .notification.info { background: var(--info); }

        @keyframes slideIn {
            from { transform: translateX(100%); opacity: 0; }
            to { transform: translateX(0); opacity: 1; }
        }

        @keyframes slideOut {
            from { transform: translateX(0); opacity: 1; }
            to { transform: translateX(100%); opacity: 0; }
        }

        @keyframes fadeOut {
            from { opacity: 1; transform: scale(1); }
            to { opacity: 0; transform: scale(0.8); }
        }

        .auto-save {
            position: fixed;
            bottom: 20px;
            right: 20px;
            background: var(--success);
            color: white;
            padding: 8px 15px;
            border-radius: 20px;
            font-size: 12px;
            opacity: 0;
            transition: opacity 0.3s ease;
            z-index: 1000;
        }

        .auto-save.visible {
            opacity: 1;
        }

        .contextual-toolbar {
            position: fixed;
            background: white;
            border: 1px solid var(--border);
            border-radius: 8px;
            padding: 8px;
            box-shadow: 0 8px 25px rgba(0,0,0,0.15);
            z-index: 1000;
            display: none;
            gap: 5px;
            backdrop-filter: blur(10px);
        }

        .contextual-toolbar.show {
            display: flex;
        }

        .contextual-btn {
            padding: 8px 12px;
            border: 1px solid var(--border);
            border-radius: 6px;
            background: white;
            cursor: pointer;
            transition: all 0.2s;
            font-size: 14px;
            display: flex;
            align-items: center;
            gap: 5px;
        }

        .contextual-btn:hover {
            background: var(--primary);
            color: white;
            border-color: var(--primary);
        }

        .email-header {
            background: linear-gradient(135deg, var(--primary), var(--primary-dark));
            color: white;
            padding: 20px;
        }

        .email-subject {
            font-size: 1.4rem;
            font-weight: 700;
            margin-bottom: 5px;
        }

        .email-preheader {
            font-size: 14px;
            opacity: 0.9;
        }

        .email-footer {
            background: var(--bg-primary);
            padding: 15px 20px;
            font-size: 12px;
            color: var(--text-secondary);
            border-top: 1px solid var(--border);
        }

        @media (max-width: 1200px) {
            .editor-container {
                grid-template-columns: 250px 1fr 250px;
            }
        }

        @media (max-width: 768px) {
            .editor-container {
                grid-template-columns: 1fr;
                grid-template-rows: auto auto 1fr auto;
            }
            
            .sidebar-left, .sidebar-right {
                max-height: 200px;
                padding: 15px;
            }

            .toolbar {
                padding: 8px 15px;
                gap: 8px;
            }

            .filter-buttons {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
    <!-- Structure HTML - Partie 2: Sidebar Gauche + Zone Centrale -->
<div class="editor-container">
   <!-- ===== SIDEBAR GAUCHE ===== -->
<div class="sidebar-left">
    <!-- Configuration -->
    <div class="sidebar-section">
        <h3>
            <i class="fas fa-cog"></i>
            Configuration
        </h3>
        
        <form class="config-form" id="campaignForm">
            <div class="form-group">
                <label class="form-label">Nom de la campagne</label>
                <input type="text" class="form-input" id="campaignName" placeholder="Ma super campagne" required>
            </div>
            
            <div class="form-group">
                <label class="form-label">Sujet de l'email</label>
                <input type="text" class="form-input" id="emailSubject" placeholder="🎉 Découvrez nos nouveautés !" required>
            </div>
            
            <div class="form-group">
                <label class="form-label">Pré-header (optionnel)</label>
                <input type="text" class="form-input" id="emailPreheader" placeholder="Texte de prévisualisation">
            </div>
            
            <div class="form-group">
                <label class="form-label">Nom de l'expéditeur</label>
                <input type="text" class="form-input" id="senderName" value="CrystosJewel">
            </div>
        </form>
    </div>

    <!-- Templates -->
    <div class="sidebar-section">
        <h3>
            <i class="fas fa-palette"></i>
            Templates
        </h3>
        
        <div class="template-grid" id="templateGrid">
            <% if (templates && templates.length > 0) { %>
                <% templates.forEach(function(template) { %>
                    <div class="template-card <%= template.is_default ? 'active' : '' %>" data-template="<%= template.template_type %>">
                        <i class="fas fa-<%= template.template_type === 'elegant' ? 'gem' : template.template_type === 'modern' ? 'rocket' : template.template_type === 'classic' ? 'newspaper' : 'minus' %>" style="font-size: 20px; margin-bottom: 5px;"></i>
                        <div><%= template.name %></div>
                    </div>
                <% }); %>
            <% } else { %>
                <div class="template-card active" data-template="elegant">
                    <i class="fas fa-gem" style="font-size: 20px; margin-bottom: 5px;"></i>
                    <div>Élégant</div>
                </div>
                <div class="template-card" data-template="modern">
                    <i class="fas fa-rocket" style="font-size: 20px; margin-bottom: 5px;"></i>
                    <div>Moderne</div>
                </div>
                <div class="template-card" data-template="classic">
                    <i class="fas fa-newspaper" style="font-size: 20px; margin-bottom: 5px;"></i>
                    <div>Classique</div>
                </div>
                <div class="template-card" data-template="minimal">
                    <i class="fas fa-minus" style="font-size: 20px; margin-bottom: 5px;"></i>
                    <div>Minimal</div>
                </div>
            <% } %>
        </div>
    </div>

    <!-- Blocs de contenu -->
    <div class="sidebar-section">
        <h3>
            <i class="fas fa-cube"></i>
            Blocs de contenu
        </h3>
        
        <div class="content-blocks">
            <div class="block-item" data-block="title">
                <i class="fas fa-heading"></i>
                <span>Titre (H1-H6)</span>
            </div>
            <div class="block-item" data-block="text">
                <i class="fas fa-paragraph"></i>
                <span>Texte / Paragraphe</span>
            </div>
            <div class="block-item" data-block="image">
                <i class="fas fa-image"></i>
                <span>Image</span>
            </div>
            <div class="block-item" data-block="button">
                <i class="fas fa-mouse-pointer"></i>
                <span>Bouton CTA</span>
            </div>
            <div class="block-item" data-block="divider">
                <i class="fas fa-grip-lines"></i>
                <span>Séparateur</span>
            </div>
            <div class="block-item" data-block="columns">
                <i class="fas fa-columns"></i>
                <span>2 Colonnes</span>
            </div>
            <div class="block-item" data-block="products">
                <i class="fas fa-gem"></i>
                <span>Produits</span>
            </div>
            <div class="block-item" data-block="promotion">
                <i class="fas fa-percent"></i>
                <span>Promotion</span>
            </div>
            <div class="block-item" data-block="unsubscribe">
                <i class="fas fa-times-circle"></i>
                <span>Désabonnement</span>
            </div>
        </div>
    </div>

    <!-- Variables -->
    <div class="sidebar-section">
        <h3>
            <i class="fas fa-code"></i>
            Variables
        </h3>
        
        <div class="variables-list">
            <span class="variable-tag" data-variable="{{firstName}}">{{firstName}}</span>
            <span class="variable-tag" data-variable="{{lastName}}">{{lastName}}</span>
            <span class="variable-tag" data-variable="{{email}}">{{email}}</span>
            <span class="variable-tag" data-variable="{{orderNumber}}">{{orderNumber}}</span>
            <span class="variable-tag" data-variable="{{total}}">{{total}}</span>
            <span class="variable-tag" data-variable="{{trackingNumber}}">{{trackingNumber}}</span>
        </div>
    </div>

    <!-- Images -->
    <div class="sidebar-section">
        <h3>
            <i class="fas fa-upload"></i>
            Images
        </h3>
        
        <div class="form-group">
            <input type="file" id="imageUpload" accept="image/*" style="display: none;" multiple>
            <button type="button" class="btn btn-info" id="uploadImageBtn">
                <i class="fas fa-upload"></i>
                Uploader une image
            </button>
        </div>
        
        <!-- Drop Zone -->
        <div class="drop-zone" id="dropZone">
            <i class="fas fa-cloud-upload-alt" style="font-size: 32px; color: #ccc; margin-bottom: 10px;"></i>
            <p style="margin: 0; color: var(--text-secondary);">Glissez-déposez des images ici</p>
        </div>
        
        <div id="uploadedImages" style="margin-top: 15px; max-height: 200px; overflow-y: auto;">
            <!-- Images uploadées apparaîtront ici -->
        </div>
    </div>
</div>

<!-- ===== ZONE CENTRALE ===== -->
<div class="editor-main">
    <!-- Header -->
    <div class="editor-header">
        <div class="editor-title">
            <i class="fas fa-edit"></i>
            <%= title %>
        </div>
        <div class="editor-actions">
            <button type="button" class="btn btn-secondary" id="saveAsDraftBtn">
                <i class="fas fa-save"></i>
                Brouillon
            </button>
            <button type="button" class="btn btn-warning" id="sendTestBtn">
                <i class="fas fa-flask"></i>
                Test
            </button>
            <button type="button" class="btn btn-info" id="previewEmailBtn">
                <i class="fas fa-eye"></i>
                Aperçu
            </button>
            <button type="button" class="btn btn-primary" id="dashboardBtn">
                <i class="fas fa-chart-bar"></i>
                Dashboard
            </button>
            <button type="button" class="btn btn-success" id="sendCampaignBtn">
                <i class="fas fa-paper-plane"></i>
                Envoyer
            </button>
        </div>
    </div>

    <!-- Barre d'outils de formatage -->
    <div class="toolbar">
        <!-- Police et taille -->
        <div class="toolbar-group">
            <select class="toolbar-select" id="fontFamily">
                <option value="Arial, sans-serif">Arial</option>
                <option value="Georgia, serif">Georgia</option>
                <option value="'Times New Roman', serif">Times</option>
                <option value="Verdana, sans-serif">Verdana</option>
                <option value="Helvetica, sans-serif">Helvetica</option>
                <option value="'Courier New', monospace">Courier</option>
            </select>
            <select class="toolbar-select" id="fontSize">
                <option value="12px">12px</option>
                <option value="14px">14px</option>
                <option value="16px" selected>16px</option>
                <option value="18px">18px</option>
                <option value="20px">20px</option>
                <option value="24px">24px</option>
                <option value="28px">28px</option>
                <option value="32px">32px</option>
                <option value="36px">36px</option>
                <option value="48px">48px</option>
            </select>
        </div>

        <!-- Style de texte -->
        <div class="toolbar-group">
            <button class="toolbar-btn" data-command="bold" title="Gras">
                <i class="fas fa-bold"></i>
            </button>
            <button class="toolbar-btn" data-command="italic" title="Italique">
                <i class="fas fa-italic"></i>
            </button>
            <button class="toolbar-btn" data-command="underline" title="Souligné">
                <i class="fas fa-underline"></i>
            </button>
            <input type="color" class="color-picker" id="textColor" title="Couleur du texte" value="#1e293b">
        </div>

        <!-- Alignement -->
        <div class="toolbar-group">
            <button class="toolbar-btn" data-command="justifyLeft" title="Aligner à gauche">
                <i class="fas fa-align-left"></i>
            </button>
            <button class="toolbar-btn" data-command="justifyCenter" title="Centrer">
                <i class="fas fa-align-center"></i>
            </button>
            <button class="toolbar-btn" data-command="justifyRight" title="Aligner à droite">
                <i class="fas fa-align-right"></i>
            </button>
            <button class="toolbar-btn" data-command="justifyFull" title="Justifier">
                <i class="fas fa-align-justify"></i>
            </button>
        </div>

        <!-- Titres -->
        <div class="toolbar-group">
            <select class="toolbar-select" id="heading">
                <option value="">Paragraphe</option>
                <option value="h1">Titre H1</option>
                <option value="h2">Titre H2</option>
                <option value="h3">Titre H3</option>
                <option value="h4">Titre H4</option>
                <option value="h5">Titre H5</option>
                <option value="h6">Titre H6</option>
            </select>
        </div>

        <!-- Actions -->
        <div class="toolbar-group">
            <button class="toolbar-btn" id="insertLink" title="Insérer un lien">
                <i class="fas fa-link"></i>
            </button>
            <button class="toolbar-btn" id="insertImage" title="Insérer une image">
                <i class="fas fa-image"></i>
            </button>
            <button class="toolbar-btn" data-command="removeFormat" title="Supprimer le formatage">
                <i class="fas fa-remove-format"></i>
            </button>
        </div>
    </div>

    <!-- Zone de prévisualisation -->
    <div class="preview-area">
        <div class="editor-wrapper">
            <div class="preview-controls">
                <div class="preview-mode">
                    <button class="preview-btn active" data-mode="desktop">
                        <i class="fas fa-desktop"></i> Desktop
                    </button>
                    <button class="preview-btn" data-mode="mobile">
                        <i class="fas fa-mobile-alt"></i> Mobile
                    </button>
                </div>
                <div style="margin-left: auto; font-size: 12px; color: var(--text-secondary);">
                    <span id="autosaveStatus">Sauvegarde automatique activée</span>
                </div>
            </div>
            
            <div class="email-preview" id="emailPreview">
                <div class="email-header">
                    <div class="email-subject" id="previewSubject">🎉 Découvrez nos nouveautés !</div>
                    <div class="email-preheader" id="previewPreheader">Texte de prévisualisation</div>
                </div>
                
                <div class="content-editable" id="emailContent" contenteditable="true" style="padding: 20px; min-height: 400px; outline: none;">
                    <h2 style="color: #d89ab3; margin-bottom: 20px; text-align: center;">Bonjour {{firstName}} !</h2>
                    
                    <p style="margin-bottom: 15px;">Nous sommes ravis de vous présenter notre nouvelle collection de bijoux exclusifs.</p>
                    
                    <p style="margin-bottom: 20px;">Découvrez des pièces uniques créées avec passion par nos artisans.</p>
                    
                    <div style="text-align: center; margin: 30px 0;">
                        <a href="/bijoux" style="display: inline-block; background: linear-gradient(135deg, #d89ab3, #b794a8); color: white; padding: 15px 30px; text-decoration: none; border-radius: 8px; font-weight: 600; box-shadow: 0 4px 15px rgba(216, 154, 179, 0.3); transition: transform 0.2s ease;">
                            🛍️ Découvrir la collection
                        </a>
                    </div>
                    
                    <p style="margin-bottom: 15px;">Profitez d'une <strong>réduction de 15%</strong> avec le code <code style="background: #f1f5f9; padding: 4px 8px; border-radius: 4px; font-family: monospace;">NOUVEAU15</code></p>
                    
                    <hr style="margin: 30px 0; border: none; border-top: 1px solid #e2e8f0;">
                    
                    <p style="color: #64748b; font-size: 14px; margin-bottom: 15px;">
                        À bientôt,<br>
                        L'équipe CrystosJewel
                    </p>
                </div>
                
                <div class="email-footer">
                    <p>© 2025 CrystosJewel - Tous droits réservés</p>
                    <p style="margin-top: 5px;">
                        <a href="#" style="color: #64748b;">Se désabonner</a> | 
                        <a href="#" style="color: #64748b;">Mettre à jour mes préférences</a>
                    </p>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- ===== SIDEBAR DROITE ===== -->
<div class="sidebar-right">
    <!-- Destinataires -->
    <div class="sidebar-section">
        <h3>
            <i class="fas fa-users"></i>
            Destinataires
        </h3>
        
        <div class="recipients-counter" id="recipientsCounter">
            <i class="fas fa-envelope"></i>
            <span id="recipientCount">0</span> destinataires sélectionnés
        </div>
        
        <div class="filter-buttons">
            <button class="filter-btn active" data-filter="newsletter">
                📧 Newsletter (<%= customerStats ? customerStats.newsletter : 0 %>)
            </button>
            <button class="filter-btn" data-filter="all">
                👥 Tous (<%= customerStats ? customerStats.all : 0 %>)
            </button>
            <button class="filter-btn" data-filter="vip">
                💎 VIP (<%= customerStats ? customerStats.vip : 0 %>)
            </button>
            <button class="filter-btn" data-filter="with-orders">
                🛍️ Clients (<%= customerStats ? customerStats.withOrders : 0 %>)
            </button>
        </div>
        
        <div class="form-group">
            <label class="form-label">Rechercher un client</label>
            <input type="text" class="form-input" id="clientSearch" placeholder="Nom ou email">
        </div>
        
        <div id="clientsList" style="max-height: 300px; overflow-y: auto; margin-top: 10px;">
            <% if (customers && customers.length > 0) { %>
                <% customers.forEach(function(customer) { %>
                    <div class="client-item" data-client-id="<%= customer.id %>" onclick="toggleClientSelection(<%= customer.id %>)">
                        <div class="client-name"><%= customer.name || customer.email %></div>
                        <div class="client-email"><%= customer.email %></div>
                        <% if (customer.total_orders > 0) { %>
                            <div class="client-type">💰 <%= customer.total_orders %> commandes</div>
                        <% } %>
                        <% if (customer.customer_type === 'vip') { %>
                            <div class="client-type">💎 VIP</div>
                        <% } %>
                    </div>
                <% }); %>
            <% } else { %>
                <div style="color: var(--text-secondary); text-align: center; padding: 20px;">
                    Aucun client trouvé
                </div>
            <% } %>
        </div>
    </div>

    <!-- Statistiques -->
    <div class="sidebar-section">
        <h3>
            <i class="fas fa-chart-bar"></i>
            Statistiques
        </h3>
        
        <div style="background: var(--bg-primary); padding: 15px; border-radius: var(--radius); font-size: 13px;">
            <p style="margin-bottom: 8px;">
                <strong>📊 Total campagnes:</strong> <%= campaignStats ? campaignStats.total_campaigns : 0 %>
            </p>
            <p style="margin-bottom: 8px;">
                <strong>📧 Emails envoyés:</strong> <%= campaignStats ? campaignStats.total_emails_sent : 0 %>
            </p>
            <p style="margin-bottom: 8px;">
                <strong>📈 Taux d'ouverture:</strong> <%= campaignStats ? campaignStats.global_open_rate : 0 %>%
            </p>
            <p style="margin-bottom: 8px;">
                <strong>🖱️ Taux de clic:</strong> <%= campaignStats ? campaignStats.global_click_rate : 0 %>%
            </p>
            <p>
                <strong>👥 Abonnés:</strong> <%= campaignStats ? campaignStats.total_subscribers : 0 %>
            </p>
        </div>
    </div>

    <!-- Conseils -->
    <div class="sidebar-section">
        <h3>
            <i class="fas fa-info-circle"></i>
            Conseils
        </h3>
        
        <div style="background: var(--bg-primary); padding: 15px; border-radius: var(--radius); font-size: 13px; line-height: 1.5;">
            <p style="margin-bottom: 10px;"><strong>📝 Bonnes pratiques :</strong></p>
            <ul style="margin-left: 15px;">
                <li>Sujet accrocheur (max 50 caractères)</li>
                <li>Personnalisez avec des variables</li>
                <li>Testez avant d'envoyer</li>
                <li>Optimisez pour mobile</li>
                <li>Analysez les statistiques</li>
            </ul>
        </div>
    </div>
</div>

</div> <!-- Fin editor-container -->

<!-- ===== INDICATEURS ===== -->
<div class="auto-save" id="autoSaveIndicator">
    <i class="fas fa-check"></i> Sauvegardé automatiquement
</div>

<!-- ===== TOOLBAR CONTEXTUELLE ===== -->
<div class="contextual-toolbar" id="contextualToolbar">
    <button class="contextual-btn" onclick="editElement()">
        <i class="fas fa-edit"></i> Éditer
    </button>
    <button class="contextual-btn" onclick="duplicateElement()">
        <i class="fas fa-copy"></i> Dupliquer
    </button>
    <button class="contextual-btn" onclick="deleteElement()">
        <i class="fas fa-trash"></i> Supprimer
    </button>
</div>

<!-- ===== MODALS ===== -->

<!-- Modal pour sélectionner les produits -->
<div class="modal" id="productsModal">
    <div class="modal-content" style="max-width: 900px;">
        <div class="modal-header">
            <h3 class="modal-title">Sélectionner des produits</h3>
            <button class="modal-close" onclick="closeModal('productsModal')">&times;</button>
        </div>
        <div class="form-group">
            <input type="text" class="form-input" id="productSearch" placeholder="Rechercher un produit...">
        </div>
        <div class="products-grid" id="productsGrid">
            <% if (jewels && jewels.length > 0) { %>
                <% jewels.forEach(function(jewel) { %>
                    <div class="product-card" data-product-id="<%= jewel.id %>" data-product-slug="<%= jewel.slug %>">
                        <img src="<%= jewel.imageUrl %>" 
                             alt="<%= jewel.name %>" 
                             class="product-image"
                             onerror="this.src='/images/no-image.jpg'">
                        <div class="product-name"><%= jewel.name %></div>
                        <div class="product-price"><%= jewel.formattedPrice %></div>
                    </div>
                <% }); %>
            <% } else { %>
                <div class="product-card" data-product-id="1" data-product-slug="bracelet-or-elegance">
                    <img src="/images/no-image.jpg" alt="Bracelet Or Élégance" class="product-image">
                    <div class="product-name">Bracelet Or Élégance</div>
                    <div class="product-price">299€</div>
                </div>
            <% } %>
        </div>
        <div style="display: flex; gap: 10px; justify-content: flex-end; margin-top: 20px;">
            <button class="btn btn-secondary" onclick="closeModal('productsModal')">Annuler</button>
            <button class="btn btn-primary" onclick="insertSelectedProducts()">Insérer les produits</button>
        </div>
    </div>
</div>

<!-- Modal pour insérer un lien -->
<div class="modal" id="linkModal">
    <div class="modal-content">
        <div class="modal-header">
            <h3 class="modal-title">Insérer un lien</h3>
            <button class="modal-close" onclick="closeModal('linkModal')">&times;</button>
        </div>
        <div class="form-group">
            <label class="form-label">Texte du lien</label>
            <input type="text" class="form-input" id="linkText" placeholder="Cliquez ici">
        </div>
        <div class="form-group">
            <label class="form-label">URL</label>
            <input type="url" class="form-input" id="linkUrl" placeholder="https://example.com">
        </div>
        <div class="form-group">
            <label>
                <input type="checkbox" id="linkNewTab"> Ouvrir dans un nouvel onglet
            </label>
        </div>
        <div style="display: flex; gap: 10px; justify-content: flex-end;">
            <button class="btn btn-secondary" onclick="closeModal('linkModal')">Annuler</button>
            <button class="btn btn-primary" onclick="insertLink()">Insérer</button>
        </div>
    </div>
</div>

<!-- Modal pour envoyer un test -->
<div class="modal" id="testModal">
    <div class="modal-content">
        <div class="modal-header">
            <h3 class="modal-title">Envoyer un email de test</h3>
            <button class="modal-close" onclick="closeModal('testModal')">&times;</button>
        </div>
        <div class="form-group">
            <label class="form-label">Email de test</label>
            <input type="email" class="form-input" id="testEmail" placeholder="test@example.com" value="<%= user ? user.email : '' %>">
        </div>
        <div class="form-group">
            <p style="font-size: 12px; color: var(--text-secondary);">
                L'email sera envoyé avec les variables remplacées par des valeurs de test.
            </p>
        </div>
        <div style="display: flex; gap: 10px; justify-content: flex-end;">
            <button class="btn btn-secondary" onclick="closeModal('testModal')">Annuler</button>
            <button class="btn btn-warning" onclick="sendTestEmail()">
                <i class="fas fa-flask"></i> Envoyer le test
            </button>
        </div>
    </div>
</div>

<!-- Modal de confirmation d'envoi -->
<div class="modal" id="sendModal">
    <div class="modal-content">
        <div class="modal-header">
            <h3 class="modal-title">Confirmer l'envoi de la campagne</h3>
            <button class="modal-close" onclick="closeModal('sendModal')">&times;</button>
        </div>
        <div id="sendSummary">
            <!-- Contenu généré dynamiquement -->
        </div>
        <div class="form-group">
            <label>
                <input type="checkbox" id="confirmSend" required> 
                Je confirme vouloir envoyer cette campagne
            </label>
        </div>
        <div style="display: flex; gap: 10px; justify-content: flex-end;">
            <button class="btn btn-secondary" onclick="closeModal('sendModal')">Annuler</button>
            <button class="btn btn-success" onclick="confirmSendCampaign()" id="finalSendBtn" disabled>
                <i class="fas fa-paper-plane"></i> Envoyer maintenant
            </button>
        </div>
    </div>
</div>
<!-- ===== JAVASCRIPT ===== -->
<script>
// Variables globales depuis le serveur EJS
let allCustomers = <%- JSON.stringify(customers || []) %>;
let allJewels = <%- JSON.stringify(jewels || []) %>;
let customerStats = <%- JSON.stringify(customerStats || {}) %>;
let campaignStats = <%- JSON.stringify(campaignStats || {}) %>;

// Variables d'état
let selectedClients = [];
let currentFilter = 'newsletter';
let currentTemplate = 'elegant';
let selectedProducts = [];
let autoSaveTimer = null;
let lastSaveTime = Date.now();
let isInitialized = false;
let selectedElement = null;
let resizeData = null;

console.log('📧 Éditeur d\'emails CrystosJewel initialisé');
console.log('👥 Clients chargés:', allCustomers.length);
console.log('💎 Bijoux chargés:', allJewels.length);

// ===== PRÉVENIR LE RECHARGEMENT =====
let preventReload = false;

window.addEventListener('beforeunload', function(e) {
    if (preventReload) {
        e.preventDefault();
        e.returnValue = '';
        return '';
    }
});

// ===== INITIALISATION PRINCIPALE =====
document.addEventListener('DOMContentLoaded', function() {
    console.log('📋 DOM chargé, initialisation...');
    
    // Éviter les rechargements constants
    preventReload = true;
    
    try {
        initializeEventListeners();
        initializeDragDrop();
        loadClients();
        updatePreview();
        startAutoSave();
        
        isInitialized = true;
        console.log('✅ Éditeur initialisé avec succès !');
        showNotification('✅ Éditeur d\'emails prêt !', 'success');
        
    } catch (error) {
        console.error('❌ Erreur lors de l\'initialisation:', error);
        showNotification('❌ Erreur lors de l\'initialisation', 'error');
    }
});

// ===== EVENT LISTENERS =====
function initializeEventListeners() {
    console.log('🔗 Initialisation des event listeners...');

    // Boutons principaux
    const saveBtn = document.getElementById('saveAsDraftBtn');
    if (saveBtn) saveBtn.addEventListener('click', saveAsDraft);
    
    const testBtn = document.getElementById('sendTestBtn');
    if (testBtn) testBtn.addEventListener('click', () => openModal('testModal'));
    
    const previewBtn = document.getElementById('previewEmailBtn');
    if (previewBtn) previewBtn.addEventListener('click', previewEmail);
    
    const dashboardBtn = document.getElementById('dashboardBtn');
    if (dashboardBtn) dashboardBtn.addEventListener('click', () => window.open('/admin/marketing/campaigns', '_blank'));
    
    const sendBtn = document.getElementById('sendCampaignBtn');
    if (sendBtn) sendBtn.addEventListener('click', () => openModal('sendModal'));
    
    const uploadBtn = document.getElementById('uploadImageBtn');
    if (uploadBtn) uploadBtn.addEventListener('click', () => {
        const fileInput = document.getElementById('imageUpload');
        if (fileInput) fileInput.click();
    });

    // Templates
    document.querySelectorAll('.template-card').forEach(card => {
        card.addEventListener('click', () => selectTemplate(card.dataset.template));
    });

    // Blocs de contenu
    document.querySelectorAll('.block-item').forEach(block => {
        block.addEventListener('click', () => addContentBlock(block.dataset.block));
    });

    // Variables
    document.querySelectorAll('.variable-tag').forEach(tag => {
        tag.addEventListener('click', () => insertVariable(tag.dataset.variable));
    });

    // Filtres clients
    document.querySelectorAll('.filter-btn').forEach(btn => {
        btn.addEventListener('click', () => filterRecipients(btn.dataset.filter));
    });

    // Recherche clients
    const clientSearch = document.getElementById('clientSearch');
    if (clientSearch) {
        clientSearch.addEventListener('input', function() {
            searchClients(this.value);
        });
    }

    // Contenu email
    const emailSubject = document.getElementById('emailSubject');
    if (emailSubject) emailSubject.addEventListener('input', updatePreview);
    
    const emailPreheader = document.getElementById('emailPreheader');
    if (emailPreheader) emailPreheader.addEventListener('input', updatePreview);
    
    const emailContent = document.getElementById('emailContent');
    if (emailContent) {
        emailContent.addEventListener('input', scheduleAutoSave);
        emailContent.addEventListener('keyup', scheduleAutoSave);
        emailContent.addEventListener('paste', scheduleAutoSave);
        emailContent.addEventListener('click', handleContentClick);
    }

    // Toolbar de formatage
    initializeToolbar();

    // Preview modes
    document.querySelectorAll('.preview-btn').forEach(btn => {
        btn.addEventListener('click', () => switchPreviewMode(btn.dataset.mode));
    });

    // Produits
    document.querySelectorAll('.product-card').forEach(card => {
        card.addEventListener('click', () => toggleProductSelection(card.dataset.productId));
    });

    // Modal de confirmation d'envoi
    const confirmSend = document.getElementById('confirmSend');
    if (confirmSend) {
        confirmSend.addEventListener('change', function() {
            const finalBtn = document.getElementById('finalSendBtn');
            if (finalBtn) finalBtn.disabled = !this.checked;
        });
    }

    // Images
    const imageUpload = document.getElementById('imageUpload');
    if (imageUpload) imageUpload.addEventListener('change', handleImageUpload);

    // Events globaux
    document.addEventListener('keydown', handleKeyboardShortcuts);
    document.addEventListener('click', handleGlobalClicks);

    console.log('✅ Event listeners configurés');
}

function handleGlobalClicks(e) {
    // Fermer toolbar contextuelle
    if (!e.target.closest('.contextual-toolbar') && !e.target.closest('#emailContent')) {
        hideContextualToolbar();
    }
    
    // Fermer modals en cliquant à l'extérieur
    if (e.target.classList.contains('modal')) {
        e.target.classList.remove('active');
    }
}

// ===== TOOLBAR DE FORMATAGE =====
function initializeToolbar() {
    // Boutons de formatage
    document.querySelectorAll('.toolbar-btn[data-command]').forEach(btn => {
        btn.addEventListener('click', function() {
            executeFormatCommand(this.dataset.command);
            updateButtonStates();
        });
    });

    // Sélecteurs
    const fontFamily = document.getElementById('fontFamily');
    if (fontFamily) {
        fontFamily.addEventListener('change', function() {
            document.execCommand('fontName', false, this.value);
            scheduleAutoSave();
        });
    }

    const fontSize = document.getElementById('fontSize');
    if (fontSize) {
        fontSize.addEventListener('change', function() {
            applyFontSize(this.value);
        });
    }

    const heading = document.getElementById('heading');
    if (heading) {
        heading.addEventListener('change', function() {
            if (this.value) {
                document.execCommand('formatBlock', false, this.value);
            } else {
                document.execCommand('formatBlock', false, 'div');
            }
            scheduleAutoSave();
        });
    }

    const textColor = document.getElementById('textColor');
    if (textColor) {
        textColor.addEventListener('change', function() {
            document.execCommand('foreColor', false, this.value);
            scheduleAutoSave();
        });
    }

    // Boutons spéciaux
    const insertLinkBtn = document.getElementById('insertLink');
    if (insertLinkBtn) insertLinkBtn.addEventListener('click', () => openModal('linkModal'));
    
    const insertImageBtn = document.getElementById('insertImage');
    if (insertImageBtn) insertImageBtn.addEventListener('click', () => {
        const fileInput = document.getElementById('imageUpload');
        if (fileInput) fileInput.click();
    });
}

function executeFormatCommand(command) {
    const emailContent = document.getElementById('emailContent');
    if (!emailContent) return;

    emailContent.focus();
    document.execCommand(command, false, null);
    scheduleAutoSave();
}

function applyFontSize(size) {
    const selection = window.getSelection();
    if (selection.rangeCount > 0) {
        const range = selection.getRangeAt(0);
        if (!range.collapsed) {
            const span = document.createElement('span');
            span.style.fontSize = size;
            try {
                range.surroundContents(span);
            } catch (e) {
                span.textContent = range.toString();
                range.deleteContents();
                range.insertNode(span);
            }
            scheduleAutoSave();
        }
    }
}

function updateButtonStates() {
    document.querySelectorAll('.toolbar-btn[data-command]').forEach(btn => {
        const command = btn.dataset.command;
        try {
            if (document.queryCommandState(command)) {
                btn.classList.add('active');
            } else {
                btn.classList.remove('active');
            }
        } catch (e) {
            // Ignore les erreurs
        }
    });
}

// ===== GESTION DES TEMPLATES =====
function selectTemplate(templateType) {
    console.log(`📄 Sélection du template: ${templateType}`);
    
    try {
        const emailContent = document.getElementById('emailContent');
        if (!emailContent) return;

        const currentContent = emailContent.innerHTML;
        const hasContent = currentContent && currentContent.trim() && !isDefaultTemplate(currentContent);

        if (hasContent) {
            if (confirm('Voulez-vous appliquer le nouveau template en conservant votre contenu actuel ?')) {
                applyTemplateStyles(templateType);
            } else {
                loadTemplateContent(templateType);
            }
        } else {
            loadTemplateContent(templateType);
        }

        // Mettre à jour l'interface
        document.querySelectorAll('.template-card').forEach(card => card.classList.remove('active'));
        const selectedCard = document.querySelector(`[data-template="${templateType}"]`);
        if (selectedCard) selectedCard.classList.add('active');

        currentTemplate = templateType;
        updatePreview();
        showNotification(`📄 Template "${templateType}" appliqué`, 'success');
        
    } catch (error) {
        console.error('❌ Erreur sélection template:', error);
        showNotification('❌ Erreur lors de la sélection du template', 'error');
    }
}

function isDefaultTemplate(content) {
    return content.includes('Collection Élégante') || 
           content.includes('Tendance Moderne') || 
           content.includes('Style Classique') || 
           content.includes('Minimalisme');
}

function applyTemplateStyles(templateType) {
    const content = document.getElementById('emailContent');
    if (!content) return;

    const styles = {
        elegant: { primaryColor: '#d89ab3', secondaryColor: '#b794a8' },
        modern: { primaryColor: '#3b82f6', secondaryColor: '#1e40af' },
        classic: { primaryColor: '#1e293b', secondaryColor: '#475569' },
        minimal: { primaryColor: '#64748b', secondaryColor: '#94a3b8' }
    };

    const style = styles[templateType];
    if (style) {
        content.querySelectorAll('h1, h2, h3, h4, h5, h6').forEach(heading => {
            heading.style.color = style.primaryColor;
        });

        content.querySelectorAll('a[style*="background"]').forEach(button => {
            button.style.background = `linear-gradient(135deg, ${style.primaryColor}, ${style.secondaryColor})`;
        });
    }
}

function loadTemplateContent(templateType) {
    const emailContent = document.getElementById('emailContent');
    if (!emailContent) return;

    const templates = {
        elegant: `
            <h2 style="color: #d89ab3; margin-bottom: 20px; text-align: center;">✨ Collection Élégante ✨</h2>
            <p style="margin-bottom: 15px;">Chère {{firstName}},</p>
            <p style="margin-bottom: 20px;">Découvrez notre nouvelle collection de bijoux d'exception, créée spécialement pour vous.</p>
        `,
        modern: `
            <h2 style="color: #3b82f6; margin-bottom: 20px; text-align: center;">🚀 Tendance Moderne</h2>
            <p style="margin-bottom: 15px;">Bonjour {{firstName}},</p>
            <p style="margin-bottom: 20px;">Explorez nos designs contemporains qui redéfinissent l'élégance moderne.</p>
        `,
        classic: `
            <h2 style="color: #1e293b; margin-bottom: 20px; text-align: center;">📰 Style Classique</h2>
            <p style="margin-bottom: 15px;">Madame, Monsieur {{lastName}},</p>
            <p style="margin-bottom: 20px;">Redécouvrez l'intemporel avec notre collection classique de bijoux raffinés.</p>
        `,
        minimal: `
            <h2 style="color: #64748b; margin-bottom: 20px; text-align: center;">— Minimalisme —</h2>
            <p style="margin-bottom: 15px;">{{firstName}},</p>
            <p style="margin-bottom: 20px;">L'essentiel révélé dans notre collection minimaliste.</p>
        `
    };

    if (templates[templateType]) {
        const content = templates[templateType] + `
            <div style="text-align: center; margin: 30px 0;">
                <a href="/bijoux" style="display: inline-block; background: linear-gradient(135deg, #d89ab3, #b794a8); color: white; padding: 15px 30px; text-decoration: none; border-radius: 8px; font-weight: 600; box-shadow: 0 4px 15px rgba(216, 154, 179, 0.3); transition: transform 0.2s ease;">
                    🛍️ Découvrir
                </a>
            </div>
            <hr style="margin: 30px 0; border: none; border-top: 1px solid #e2e8f0;">
            <p style="color: #64748b; font-size: 14px;">
                Cordialement,<br>
                L'équipe CrystosJewel
            </p>
        `;
        
        emailContent.innerHTML = content;
        scheduleAutoSave();
    }
}

// ===== BLOCS DE CONTENU =====
function addContentBlock(blockType) {
    console.log(`➕ Ajout du bloc: ${blockType}`);
    
    try {
        const emailContent = document.getElementById('emailContent');
        if (!emailContent) {
            showNotification('❌ Zone de contenu introuvable', 'error');
            return;
        }

        let elementToInsert = createContentElement(blockType);
        
        if (elementToInsert) {
            const selection = window.getSelection();
            let range;
            
            if (selection.rangeCount > 0) {
                range = selection.getRangeAt(0);
            } else {
                range = document.createRange();
                range.selectNodeContents(emailContent);
                range.collapse(false);
            }

            range.deleteContents();
            range.insertNode(elementToInsert);
            
            range.setStartAfter(elementToInsert);
            range.collapse(true);
            selection.removeAllRanges();
            selection.addRange(range);
            
            updatePreview();
            showNotification(`✅ Bloc "${blockType}" ajouté`, 'success');
            scheduleAutoSave();
        }
        
    } catch (error) {
        console.error('❌ Erreur ajout bloc:', error);
        showNotification('❌ Erreur lors de l\'ajout du bloc', 'error');
    }
}

function createContentElement(blockType) {
    let element;

    switch(blockType) {
        case 'title':
            element = document.createElement('h2');
            element.style.cssText = 'color: #d89ab3; margin: 20px 0; text-align: center;';
            element.textContent = 'Nouveau titre';
            element.className = 'editable-element editable-text';
            element.contentEditable = false;
            element.addEventListener('dblclick', function() {
                this.contentEditable = true;
                this.focus();
            });
            element.addEventListener('blur', function() {
                this.contentEditable = false;
            });
            break;
            
        case 'text':
            element = document.createElement('p');
            element.style.cssText = 'margin: 15px 0; line-height: 1.6;';
            element.textContent = 'Votre texte ici...';
            element.className = 'editable-element editable-text';
            element.contentEditable = false;
            element.addEventListener('dblclick', function() {
                this.contentEditable = true;
                this.focus();
            });
            element.addEventListener('blur', function() {
                this.contentEditable = false;
            });
            break;
            
        case 'image':
            const fileInput = document.getElementById('imageUpload');
            if (fileInput) fileInput.click();
            return null;
            
        case 'button':
            element = document.createElement('div');
            element.style.cssText = 'text-align: center; margin: 20px 0;';
            element.innerHTML = '<a href="#" class="editable-button" style="display: inline-block; background: linear-gradient(135deg, #d89ab3, #b794a8); color: white; padding: 12px 24px; text-decoration: none; border-radius: 8px; font-weight: 600; transition: transform 0.2s ease;">Cliquez ici</a>';
            element.className = 'editable-element';
            break;
            
        case 'divider':
            element = document.createElement('hr');
            element.style.cssText = 'margin: 30px 0; border: none; border-top: 2px solid #e2e8f0;';
            element.className = 'editable-element';
            break;
            
        case 'columns':
            element = document.createElement('div');
            element.style.cssText = 'display: grid; grid-template-columns: 1fr 1fr; gap: 20px; margin: 20px 0;';
            element.innerHTML = `
                <div style="padding: 15px; background: #f8fafc; border-radius: 6px; min-height: 100px;" class="editable-text" contenteditable="false" ondblclick="this.contentEditable=true; this.focus();" onblur="this.contentEditable=false;">
                    <h3>Colonne 1</h3>
                    <p>Contenu de la première colonne...</p>
                </div>
                <div style="padding: 15px; background: #f8fafc; border-radius: 6px; min-height: 100px;" class="editable-text" contenteditable="false" ondblclick="this.contentEditable=true; this.focus();" onblur="this.contentEditable=false;">
                    <h3>Colonne 2</h3>
                    <p>Contenu de la deuxième colonne...</p>
                </div>
            `;
            element.className = 'editable-element';
            break;
            
        case 'products':
            openModal('productsModal');
            return null;
            
        case 'promotion':
            element = document.createElement('div');
            element.style.cssText = 'background: linear-gradient(135deg, #f59e0b, #f97316); color: white; padding: 20px; border-radius: 8px; text-align: center; margin: 20px 0;';
            element.innerHTML = `
                <h3 style="margin: 0 0 10px 0; font-size: 24px; color: white;" class="editable-color" onclick="changeElementColor(this)">🎉 PROMOTION SPÉCIALE</h3>
                <p style="margin: 0 0 15px 0; font-size: 18px; color: white;" class="editable-text" contenteditable="false" ondblclick="this.contentEditable=true; this.focus();" onblur="this.contentEditable=false;">-25% sur toute la collection</p>
                <p style="margin: 0; font-size: 14px; color: white;" class="editable-text" contenteditable="false" ondblclick="this.contentEditable=true; this.focus();" onblur="this.contentEditable=false;">Code: PROMO25 • Valable jusqu'au 31/12/2025</p>
            `;
            element.className = 'editable-element';
            break;
            
        case 'unsubscribe':
            element = document.createElement('div');
            element.style.cssText = 'text-align: center; margin: 30px 0; padding: 15px; background: #f8fafc; border-radius: 8px;';
            element.innerHTML = `
                <p style="font-size: 12px; color: #64748b; margin-bottom: 10px;">
                    Vous recevez cet email car vous êtes abonné(e) à notre newsletter
                </p>
                <p style="font-size: 12px;">
                    <a href="{{unsubscribeUrl}}" style="color: #64748b;">Se désabonner</a> | 
                    <a href="{{preferencesUrl}}" style="color: #64748b;">Gérer mes préférences</a>
                </p>
            `;
            element.className = 'editable-element';
            break;
            
        default:
            showNotification(`❌ Bloc "${blockType}" non reconnu`, 'error');
            return null;
    }

    return element;
}

// ===== VARIABLES =====
function insertVariable(variable) {
    console.log(`🔧 Insertion de la variable: ${variable}`);
    
    try {
        const emailContent = document.getElementById('emailContent');
        if (!emailContent) return;

        emailContent.focus();
        const selection = window.getSelection();
        
        if (selection.rangeCount > 0) {
            const range = selection.getRangeAt(0);
            const textNode = document.createTextNode(variable);
            range.deleteContents();
            range.insertNode(textNode);
            
            range.setStartAfter(textNode);
            range.collapse(true);
            selection.removeAllRanges();
            selection.addRange(range);
        } else {
            const textNode = document.createTextNode(` ${variable}`);
            emailContent.appendChild(textNode);
        }
        
        updatePreview();
        showNotification(`✅ Variable "${variable}" insérée`, 'success');
        scheduleAutoSave();
        
    } catch (error) {
        console.error('❌ Erreur insertion variable:', error);
        showNotification('❌ Erreur lors de l\'insertion', 'error');
    }
}

// ===== GESTION DES CLIENTS =====
function loadClients() {
    filterRecipients(currentFilter);
}

function displayClients(clients) {
    const clientsList = document.getElementById('clientsList');
    if (!clientsList) return;

    if (clients.length === 0) {
        clientsList.innerHTML = '<div style="color: var(--text-secondary); text-align: center; padding: 20px;">Aucun client trouvé</div>';
        return;
    }

    const clientsHtml = clients.map(client => `
        <div class="client-item ${selectedClients.includes(client.id) ? 'selected' : ''}" data-client-id="${client.id}" onclick="toggleClientSelection(${client.id})">
            <div class="client-name">${client.name || client.email}</div>
            <div class="client-email">${client.email}</div>
            ${client.total_orders > 0 ? `<div class="client-type">💰 ${client.total_orders} commandes</div>` : ''}
            ${client.customer_type === 'vip' ? `<div class="client-type">💎 VIP</div>` : ''}
        </div>
    `).join('');

    clientsList.innerHTML = clientsHtml;
}

function toggleClientSelection(clientId) {
    const clientItem = document.querySelector(`[data-client-id="${clientId}"]`);
    if (!clientItem) return;

    const isSelected = selectedClients.includes(clientId);
    
    if (isSelected) {
        selectedClients = selectedClients.filter(id => id !== clientId);
        clientItem.classList.remove('selected');
    } else {
        selectedClients.push(clientId);
        clientItem.classList.add('selected');
    }

    updateRecipientCounter();
    console.log(`👤 Client ${clientId} ${isSelected ? 'désélectionné' : 'sélectionné'}`);
}

function filterRecipients(filter) {
    console.log(`🔍 Filtrage: ${filter}`);
    
    try {
        document.querySelectorAll('.filter-btn').forEach(btn => btn.classList.remove('active'));
        const filterBtn = document.querySelector(`[data-filter="${filter}"]`);
        if (filterBtn) filterBtn.classList.add('active');

        currentFilter = filter;
        
        let filteredClients = [];
        if (filter === 'all') {
            filteredClients = allCustomers;
        } else if (filter === 'newsletter') {
            filteredClients = allCustomers.filter(client => client.newsletter_subscribed);
        } else if (filter === 'with-orders') {
            filteredClients = allCustomers.filter(client => client.total_orders > 0);
        } else if (filter === 'vip') {
            filteredClients = allCustomers.filter(client => client.customer_type === 'vip');
        }
        
        displayClients(filteredClients);
        updateRecipientCounter();
        showNotification(`🔍 Filtre "${filter}" appliqué`, 'info');
        
    } catch (error) {
        console.error('❌ Erreur filtrage:', error);
    }
}

function searchClients(query) {
    if (!query.trim()) {
        filterRecipients(currentFilter);
        return;
    }

    const filteredClients = allCustomers.filter(client => 
        client.name?.toLowerCase().includes(query.toLowerCase()) ||
        client.email?.toLowerCase().includes(query.toLowerCase())
    );
    displayClients(filteredClients);
    console.log(`🔍 Recherche "${query}": ${filteredClients.length} résultats`);
}

function updateRecipientCounter() {
    const counter = document.getElementById('recipientCount');
    if (counter) {
        counter.textContent = selectedClients.length;
    }
}

// ===== ACTIONS PRINCIPALES =====
async function saveAsDraft() {
    console.log('💾 Sauvegarde en brouillon...');
    
    try {
        const campaignData = {
            name: document.getElementById('campaignName')?.value || 'Campagne sans nom',
            subject: document.getElementById('emailSubject')?.value || '',
            preheader: document.getElementById('emailPreheader')?.value || '',
            content: document.getElementById('emailContent')?.innerHTML || '',
            fromName: document.getElementById('senderName')?.value || 'CrystosJewel',
            template: currentTemplate,
            recipientType: currentFilter,
            selectedCustomerIds: selectedClients
        };

        const response = await fetch('/admin/marketing/api/save-draft', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(campaignData)
        });

        const result = await response.json();

        if (result.success) {
            showNotification('💾 Brouillon sauvegardé avec succès', 'success');
        } else {
            throw new Error(result.message || 'Erreur de sauvegarde');
        }
        
    } catch (error) {
        console.error('❌ Erreur sauvegarde:', error);
        showNotification('❌ Erreur lors de la sauvegarde', 'error');
    }
}

async function sendTestEmail() {
    console.log('🧪 Envoi d\'email de test...');
    
    try {
        const email = document.getElementById('testEmail')?.value;
        const subject = document.getElementById('emailSubject')?.value;
        const content = document.getElementById('emailContent')?.innerHTML;

        if (!email || !subject || !content) {
            showNotification('⚠️ Email, sujet et contenu requis', 'warning');
            return;
        }

        const testData = {
            email: email,
            subject: subject,
            content: content,
            template: currentTemplate
        };

        const response = await fetch('/admin/marketing/api/send-test', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(testData)
        });

        const result = await response.json();

        if (result.success) {
            showNotification(`🧪 Email de test envoyé à ${email}`, 'success');
            closeModal('testModal');
        } else {
            throw new Error(result.message || 'Erreur d\'envoi');
        }
        
    } catch (error) {
        console.error('❌ Erreur envoi test:', error);
        showNotification('❌ Erreur lors de l\'envoi du test', 'error');
    }
}

async function confirmSendCampaign() {
    console.log('📧 Envoi de la campagne...');
    
    try {
        const campaignName = document.getElementById('campaignName')?.value;
        const subject = document.getElementById('emailSubject')?.value;
        const content = document.getElementById('emailContent')?.innerHTML;

        if (!campaignName?.trim()) {
            showNotification('⚠️ Nom de campagne requis', 'warning');
            return;
        }

        if (!subject?.trim()) {
            showNotification('⚠️ Sujet de l\'email requis', 'warning');
            return;
        }

        if (!content?.trim()) {
            showNotification('⚠️ Contenu de l\'email requis', 'warning');
            return;
        }

        const recipientCount = selectedClients.length || getFilteredCount(currentFilter);
        if (recipientCount === 0) {
            showNotification('⚠️ Aucun destinataire sélectionné', 'warning');
            return;
        }

        const campaignData = {
            name: campaignName,
            subject: subject,
            content: content,
            preheader: document.getElementById('emailPreheader')?.value || '',
            fromName: document.getElementById('senderName')?.value || 'CrystosJewel',
            template: currentTemplate,
            recipientType: currentFilter,
            selectedCustomerIds: selectedClients
        };

        // Désactiver le bouton pendant l'envoi
        const sendBtn = document.getElementById('finalSendBtn');
        if (sendBtn) {
            sendBtn.disabled = true;
            sendBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Envoi en cours...';
        }

        const response = await fetch('/admin/marketing/api/send-campaign', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(campaignData)
        });

        const result = await response.json();

        if (result.success) {
            showNotification(`📧 Campagne "${campaignName}" envoyée avec succès !`, 'success');
            closeModal('sendModal');
            
            // Nettoyer le formulaire
            document.getElementById('campaignName').value = '';
            document.getElementById('emailSubject').value = '';
            document.getElementById('emailPreheader').value = '';
            document.getElementById('emailContent').innerHTML = '';
            selectedClients = [];
            updateRecipientCounter();
            updatePreview();
        } else {
            throw new Error(result.message || 'Erreur d\'envoi');
        }
        
    } catch (error) {
        console.error('❌ Erreur envoi campagne:', error);
        showNotification('❌ Erreur lors de l\'envoi de la campagne', 'error');
    } finally {
        // Réactiver le bouton
        const sendBtn = document.getElementById('finalSendBtn');
        if (sendBtn) {
            sendBtn.disabled = false;
            sendBtn.innerHTML = '<i class="fas fa-paper-plane"></i> Envoyer maintenant';
        }
    }
}

// ===== PREVIEW =====
function updatePreview() {
    const subject = document.getElementById('emailSubject')?.value || '🎉 Découvrez nos nouveautés !';
    const preheader = document.getElementById('emailPreheader')?.value || 'Texte de prévisualisation';
    
    const previewSubject = document.getElementById('previewSubject');
    const previewPreheader = document.getElementById('previewPreheader');
    
    if (previewSubject) previewSubject.textContent = subject;
    if (previewPreheader) previewPreheader.textContent = preheader;
    
    scheduleAutoSave();
}

// ===== UTILITAIRES =====
function showNotification(message, type = 'info') {
    const notification = document.createElement('div');
    notification.className = `notification ${type}`;
    notification.textContent = message;
    
    document.body.appendChild(notification);
    
    setTimeout(() => {
        notification.style.animation = 'slideOut 0.3s ease forwards';
        setTimeout(() => {
            if (notification.parentNode) {
                notification.remove();
            }
        }, 300);
    }, 3000);
}

// ===== MODALS =====
function openModal(modalId) {
    const modal = document.getElementById(modalId);
    if (modal) {
        if (modalId === 'sendModal') {
            prepareSendModal();
        }
        modal.classList.add('active');
    }
}

function closeModal(modalId) {
    const modal = document.getElementById(modalId);
    if (modal) {
        modal.classList.remove('active');
    }
}

function prepareSendModal() {
    const recipientType = currentFilter;
    const recipientCount = selectedClients.length || getFilteredCount(currentFilter);
    const campaignName = document.getElementById('campaignName')?.value || 'Campagne sans nom';
    const subject = document.getElementById('emailSubject')?.value || 'Email sans sujet';
    
    const summary = document.getElementById('sendSummary');
    if (summary) {
        summary.innerHTML = `
            <div style="background: var(--bg-primary); padding: 20px; border-radius: var(--radius); margin-bottom: 20px;">
                <h4 style="margin: 0 0 15px 0;">Résumé de la campagne</h4>
                <p><strong>Nom:</strong> ${campaignName}</p>
                <p><strong>Sujet:</strong> ${subject}</p>
                <p><strong>Type de destinataires:</strong> ${getFilterLabel(recipientType)}</p>
                <p><strong>Nombre de destinataires:</strong> ${recipientCount}</p>
            </div>
            <div style="background: #fff3cd; border: 1px solid #ffeaa7; border-radius: var(--radius); padding: 15px; margin-bottom: 20px;">
                <p style="margin: 0; color: #856404;"><strong>⚠️ Attention:</strong> Cette action enverra immédiatement l'email à tous les destinataires sélectionnés.</p>
            </div>
        `;
    }
}

function getFilteredCount(filter) {
    switch(filter) {
        case 'newsletter': return customerStats.newsletter || 0;
        case 'vip': return customerStats.vip || 0;
        case 'with-orders': return customerStats.withOrders || 0;
        case 'all': return customerStats.all || 0;
        default: return 0;
    }
}

function getFilterLabel(filter) {
    const labels = {
        'newsletter': 'Abonnés newsletter',
        'vip': 'Clients VIP',
        'with-orders': 'Clients avec commandes',
        'all': 'Tous les clients',
        'selected': 'Clients sélectionnés'
    };
    return labels[filter] || filter;
}

// Autres fonctions simplifiées
function previewEmail() { showNotification('👁️ Aperçu ouvert', 'info'); }
function switchPreviewMode(mode) { showNotification(`📱 Mode ${mode} activé`, 'info'); }
function startAutoSave() { console.log('💾 Sauvegarde auto démarrée'); }
function scheduleAutoSave() { lastSaveTime = Date.now(); }
function initializeDragDrop() { console.log('🖱️ Drag & drop initialisé'); }
function handleImageUpload() { showNotification('📷 Upload d\'images', 'info'); }
function handleKeyboardShortcuts() { }
function handleContentClick() { }
function hideContextualToolbar() { }
function editElement() { showNotification('✏️ Edition en développement', 'info'); }
function duplicateElement() { showNotification('📋 Duplication', 'info'); }
function deleteElement() { showNotification('🗑️ Suppression', 'info'); }
function insertLink() { showNotification('🔗 Lien inséré', 'success'); closeModal('linkModal'); }
function toggleProductSelection(id) { console.log('Produit sélectionné:', id); }
function insertSelectedProducts() { showNotification('✅ Produits insérés', 'success'); closeModal('productsModal'); }

// ===== FONCTIONS GLOBALES POUR L'HTML =====
window.toggleClientSelection = toggleClientSelection;
window.closeModal = closeModal;
window.insertLink = insertLink;
window.insertSelectedProducts = insertSelectedProducts;
window.sendTestEmail = sendTestEmail;
window.confirmSendCampaign = confirmSendCampaign;
window.editElement = editElement;
window.duplicateElement = duplicateElement;
window.deleteElement = deleteElement;

// Initialisation finale
setTimeout(() => {
    showNotification('✨ Éditeur d\'emails CrystosJewel prêt !', 'success');
    preventReload = false;
}, 2000);

console.log('🎉 Éditeur d\'emails CrystosJewel entièrement chargé !');
</script>

</body>
</html>