<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gestion Notifications - CrystosJewel Admin</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <style>
        :root {
            --primary-color: #B8868A;
            --secondary-color: #E8B4B8;
            --success-color: #28a745;
            --warning-color: #ffc107;
            --danger-color: #dc3545;
        }
        
        .notification-card {
            border-radius: 15px;
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
            transition: transform 0.2s;
        }
        
        .notification-card:hover {
            transform: translateY(-2px);
        }
        
        .status-indicator {
            width: 12px;
            height: 12px;
            border-radius: 50%;
            display: inline-block;
            margin-right: 8px;
        }
        
        .status-configured {
            background-color: var(--success-color);
            animation: pulse 2s infinite;
        }
        
        .status-not-configured {
            background-color: var(--danger-color);
        }
        
        @keyframes pulse {
            0% { opacity: 1; }
            50% { opacity: 0.5; }
            100% { opacity: 1; }
        }
        
        .test-section {
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            border-radius: 15px;
            padding: 25px;
            margin: 20px 0;
        }
        
        .btn-test {
            background: linear-gradient(135deg, var(--primary-color) 0%, var(--secondary-color) 100%);
            border: none;
            border-radius: 25px;
            padding: 12px 25px;
            color: white;
            font-weight: 600;
            transition: all 0.3s;
        }
        
        .btn-test:hover {
            transform: scale(1.05);
            box-shadow: 0 5px 15px rgba(184, 134, 138, 0.4);
        }
        
        .config-item {
            background: white;
            border-radius: 10px;
            padding: 20px;
            margin-bottom: 15px;
            border-left: 4px solid var(--primary-color);
        }
    </style>
</head>
<body class="bg-light">

    <div class="container-fluid py-4">
        
        <!-- Header -->
        <div class="row mb-4">
            <div class="col-12">
                <div class="d-flex align-items-center">
                    <i class="fas fa-bell fa-2x text-primary me-3"></i>
                    <div>
                        <h1 class="mb-0">Gestion des Notifications</h1>
                        <p class="text-muted mb-0">Configuration Email & SMS automatiques</p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Statut des Configurations -->
        <div class="row mb-4">
            <div class="col-md-6">
                <div class="notification-card card h-100">
                    <div class="card-body">
                        <div class="d-flex align-items-center mb-3">
                            <i class="fas fa-envelope fa-2x text-info me-3"></i>
                            <h5 class="mb-0">Configuration Email</h5>
                        </div>
                        <div id="email-status" class="mb-3">
                            <div class="d-flex align-items-center">
                                <span class="status-indicator" id="email-indicator"></span>
                                <span id="email-status-text">Vérification...</span>
                            </div>
                        </div>
                        <div id="email-details" class="small text-muted">
                            <!-- Détails email -->
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="col-md-6">
                <div class="notification-card card h-100">
                    <div class="card-body">
                        <div class="d-flex align-items-center mb-3">
                            <i class="fas fa-sms fa-2x text-success me-3"></i>
                            <h5 class="mb-0">Configuration SMS</h5>
                        </div>
                        <div id="sms-status" class="mb-3">
                            <div class="d-flex align-items-center">
                                <span class="status-indicator" id="sms-indicator"></span>
                                <span id="sms-status-text">Vérification...</span>
                            </div>
                        </div>
                        <div id="sms-details" class="small text-muted">
                            <!-- Détails SMS -->
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Section Test SMS -->
        <div class="row mb-4">
            <div class="col-12">
                <div class="test-section">
                    <h4 class="mb-3">
                        <i class="fas fa-vial me-2"></i>
                        Test des Notifications SMS
                    </h4>
                    <p class="text-muted mb-4">
                        Testez l'envoi de SMS pour vérifier votre configuration Twilio
                    </p>
                    
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="testPhone" class="form-label">
                                    <i class="fas fa-phone me-1"></i>
                                    Numéro de téléphone de test
                                </label>
                                <input type="tel" 
                                       class="form-control" 
                                       id="testPhone" 
                                       placeholder="+33612345678"
                                       pattern="^\+33[1-9][0-9]{8}$">
                                <div class="form-text">
                                    Format international requis (ex: +33612345678)
                                </div>
                            </div>
                            
                            <button onclick="testSMSConfiguration()" 
                                    class="btn btn-test">
                                <i class="fas fa-paper-plane me-2"></i>
                                Envoyer SMS de Test
                            </button>
                        </div>
                        
                        <div class="col-md-6">
                            <div id="test-result" class="mt-3">
                                <!-- Résultat du test -->
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Configuration Required -->
        <div class="row">
            <div class="col-12">
                <div class="card notification-card">
                    <div class="card-header bg-warning text-dark">
                        <h5 class="mb-0">
                            <i class="fas fa-cog me-2"></i>
                            Configuration Requise
                        </h5>
                    </div>
                    <div class="card-body">
                        <p class="mb-3">
                            Pour activer les notifications SMS automatiques, ajoutez ces variables à votre fichier <code>.env</code> :
                        </p>
                        
                        <div class="config-item">
                            <h6><i class="fab fa-twilio me-2"></i>Configuration Twilio</h6>
                            <pre class="bg-dark text-light p-3 rounded"><code># Obtenez ces informations sur https://console.twilio.com
TWILIO_ACCOUNT_SID=ACxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
TWILIO_AUTH_TOKEN=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
TWILIO_PHONE_NUMBER=+33123456789</code></pre>
                        </div>
                        
                        <div class="config-item">
                            <h6><i class="fas fa-question-circle me-2"></i>Comment obtenir vos identifiants Twilio</h6>
                            <ol class="mb-0">
                                <li>Créez un compte sur <a href="https://www.twilio.com" target="_blank">twilio.com</a></li>
                                <li>Vérifiez votre compte avec votre numéro de téléphone</li>
                                <li>Dans la console, achetez un numéro de téléphone français</li>
                                <li>Récupérez votre Account SID et Auth Token</li>
                                <li>Ajoutez les variables dans votre .env et redémarrez l'application</li>
                            </ol>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Charger le statut des configurations au chargement de la page
        document.addEventListener('DOMContentLoaded', function() {
            loadNotificationStatus();
        });

        // Fonction pour charger le statut des notifications
        async function loadNotificationStatus() {
            try {
                const response = await fetch('/api/admin/notifications/status');
                const data = await response.json();

                if (data.success) {
                    updateEmailStatus(data.data.email);
                    updateSMSStatus(data.data.sms);
                } else {
                    showError('Erreur lors du chargement du statut');
                }
            } catch (error) {
                console.error('Erreur:', error);
                showError('Erreur de connexion');
            }
        }

        // Mettre à jour l'affichage du statut email
        function updateEmailStatus(emailConfig) {
            const indicator = document.getElementById('email-indicator');
            const statusText = document.getElementById('email-status-text');
            const details = document.getElementById('email-details');

            if (emailConfig.isConfigured) {
                indicator.className = 'status-indicator status-configured';
                statusText.textContent = 'Configuré ✅';
                statusText.className = 'text-success fw-bold';
                details.innerHTML = `<strong>Compte:</strong> ${emailConfig.mailUser}`;
            } else {
                indicator.className = 'status-indicator status-not-configured';
                statusText.textContent = 'Non configuré ❌';
                statusText.className = 'text-danger fw-bold';
                details.innerHTML = 'Variables MAIL_USER et MAIL_PASS requises dans .env';
            }
        }

        // Mettre à jour l'affichage du statut SMS
        function updateSMSStatus(smsConfig) {
            const indicator = document.getElementById('sms-indicator');
            const statusText = document.getElementById('sms-status-text');
            const details = document.getElementById('sms-details');

            if (smsConfig.isConfigured) {
                indicator.className = 'status-indicator status-configured';
                statusText.textContent = 'Configuré ✅';
                statusText.className = 'text-success fw-bold';
                details.innerHTML = `
                    <strong>Account SID:</strong> ${smsConfig.accountSid}<br>
                    <strong>Numéro:</strong> ${smsConfig.phoneNumber}
                `;
            } else {
                indicator.className = 'status-indicator status-not-configured';
                statusText.textContent = 'Non configuré ❌';
                statusText.className = 'text-danger fw-bold';
                details.innerHTML = 'Variables Twilio requises dans .env';
            }
        }

        // Fonction pour tester la configuration SMS
        async function testSMSConfiguration() {
            const phoneInput = document.getElementById('testPhone');
            const testResultDiv = document.getElementById('test-result');
            const testPhone = phoneInput.value.trim();

            // Validation du numéro
            if (!testPhone) {
                showTestResult('Veuillez entrer un numéro de téléphone', 'danger');
                return;
            }

            const phoneRegex = /^\+33[1-9][0-9]{8}$/;
            if (!phoneRegex.test(testPhone)) {
                showTestResult('Format invalide. Utilisez le format +33612345678', 'warning');
                return;
            }

            // Afficher le loading
            showTestResult('<i class="fas fa-spinner fa-spin me-2"></i>Envoi en cours...', 'info');

            try {
                const response = await fetch('/api/admin/sms/test', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ testPhone })
                });

                const data = await response.json();

                if (data.success) {
                    showTestResult(`
                        <div class="alert alert-success">
                            <i class="fas fa-check-circle me-2"></i>
                            <strong>SMS envoyé avec succès !</strong><br>
                            <small>ID Message: ${data.data.messageId}</small><br>
                            <small>Statut: ${data.data.status}</small>
                        </div>
                    `);
                } else {
                    showTestResult(`
                        <div class="alert alert-danger">
                            <i class="fas fa-exclamation-triangle me-2"></i>
                            <strong>Erreur lors de l'envoi</strong><br>
                            <small>${data.error || data.message}</small>
                        </div>
                    `);
                }
            } catch (error) {
                console.error('Erreur test SMS:', error);
                showTestResult(`
                    <div class="alert alert-danger">
                        <i class="fas fa-times-circle me-2"></i>
                        <strong>Erreur de connexion</strong><br>
                        <small>Impossible de contacter le serveur</small>
                    </div>
                `);
            }
        }

        // Afficher le résultat du test
        function showTestResult(html, type = 'info') {
            const testResultDiv = document.getElementById('test-result');
            
            if (typeof html === 'string' && !html.includes('<div class="alert')) {
                const alertClass = `alert-${type}`;
                testResultDiv.innerHTML = `
                    <div class="alert ${alertClass} mb-0">
                        ${html}
                    </div>
                `;
            } else {
                testResultDiv.innerHTML = html;
            }
        }

        // Afficher une erreur
        function showError(message) {
            const emailStatus = document.getElementById('email-status-text');
            const smsStatus = document.getElementById('sms-status-text');
            
            emailStatus.textContent = 'Erreur de chargement';
            emailStatus.className = 'text-warning';
            
            smsStatus.textContent = 'Erreur de chargement';
            smsStatus.className = 'text-warning';
        }

        // Validation en temps réel du numéro de téléphone
        document.getElementById('testPhone').addEventListener('input', function(e) {
            const phone = e.target.value;
            const phoneRegex = /^\+33[1-9][0-9]{8}$/;
            
            if (phone && !phoneRegex.test(phone)) {
                e.target.classList.add('is-invalid');
            } else {
                e.target.classList.remove('is-invalid');
            }
        });

        // Permettre l'envoi du test avec Entrée
        document.getElementById('testPhone').addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                testSMSConfiguration();
            }
        });
    </script>

</body>
</html>